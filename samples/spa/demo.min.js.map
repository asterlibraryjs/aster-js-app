{"version":3,"file":"demo.min.js","sources":["../../node_modules/@aster-js/core/src/asserts.ts","../../node_modules/@aster-js/core/src/idisposable.ts","../../node_modules/@aster-js/core/src/lazy.ts","../../node_modules/@aster-js/core/src/tag.ts","../../node_modules/@aster-js/core/src/tags.ts","../../node_modules/@aster-js/collections/src/hash-map.ts","../../node_modules/@aster-js/collections/src/hash-set.ts","../../node_modules/@aster-js/collections/src/lookup.ts","../../node_modules/@aster-js/ioc/src/service-registry/service-registry.ts","../../node_modules/@aster-js/ioc/src/service-registry/service-identifier.ts","../../node_modules/@aster-js/ioc/src/service-registry/service-utilities.ts","../../node_modules/@aster-js/ioc/src/service-registry/service-contract.ts","../../node_modules/tslib/tslib.es6.mjs","../../node_modules/@aster-js/ioc/src/service-provider/iservice-accessor.ts","../../node_modules/@aster-js/ioc/src/service-registry/service-decorators.ts","../../node_modules/@aster-js/ioc/src/service-registry/service-factory.ts","../../node_modules/@aster-js/ioc/src/service-collection/service-collection.ts","../../node_modules/@aster-js/iterators/src/callback-iterator.ts","../../node_modules/@aster-js/iterators/src/iterables.ts","../../node_modules/@aster-js/iterators/src/iterators.ts","../../node_modules/@aster-js/iterators/src/topological.ts","../../node_modules/@aster-js/iterators/src/topological-graph.ts","../../node_modules/@aster-js/ioc/src/service-descriptors/service-descriptor.ts","../../node_modules/@aster-js/ioc/src/service-descriptors/service-factory-descriptor.ts","../../node_modules/@aster-js/ioc/src/service-descriptors/service-extensions.ts","../../node_modules/@aster-js/ioc/src/service-descriptors/factory-extensions.ts","../../node_modules/@aster-js/ioc/src/service-descriptors/instance-extensions.ts","../../node_modules/@aster-js/ioc/src/service-provider/iservice-provider.ts","../../node_modules/@aster-js/ioc/src/service-provider/service-proxy.ts","../../node_modules/@aster-js/ioc/src/service-provider/service-accessor.ts","../../node_modules/@aster-js/ioc/src/service-provider/idependency-resolver.ts","../../node_modules/@aster-js/ioc/src/service-provider/iinstantiation-service.ts","../../node_modules/@aster-js/events/src/async-event-iterator.ts","../../node_modules/@aster-js/events/src/ievent.ts","../../node_modules/@aster-js/decorators/src/memoize.ts","../../node_modules/@aster-js/events/src/event-emitter-base.ts","../../node_modules/@aster-js/events/src/event-emitter.ts","../../node_modules/@aster-js/events/src/async-event-emitter.ts","../../node_modules/@aster-js/ioc/src/service-provider/instantiation-context.ts","../../node_modules/@aster-js/ioc/src/service-provider/service-entry.ts","../../node_modules/@aster-js/ioc/src/service-provider/instantiation-error.ts","../../node_modules/@aster-js/ioc/src/service-provider/instantiation-service.ts","../../node_modules/@aster-js/ioc/src/service-provider/dependency-entry.ts","../../node_modules/@aster-js/ioc/src/service-provider/dependency-resolver.ts","../../node_modules/@aster-js/ioc/src/service-provider/service-provider.ts","../../node_modules/@aster-js/ioc/src/ioc-module/iioc-module.ts","../../node_modules/@aster-js/ioc/src/ioc-module/setup-actions/safe-ioc-module-setup-action.ts","../../node_modules/@aster-js/ioc/src/ioc-module/setup-actions/ioc-module-callback-setup-action.ts","../../node_modules/@aster-js/ioc/src/ioc-module/setup-actions/ioc-module-service-setup-action.ts","../../node_modules/@aster-js/ioc/src/ioc-module/setup-actions/ioc-module-many-service-setup-action.ts","../../node_modules/@aster-js/ioc/src/ioc-module/setup-ioc-container-builder.ts","../../node_modules/@aster-js/ioc/src/ioc-module/ioc-container-builder.ts","../../node_modules/@aster-js/async/src/deferred.ts","../../node_modules/@aster-js/async/src/delayed.ts","../../node_modules/@aster-js/async/src/timeout-source.ts","../../node_modules/@aster-js/async/src/abort-token.ts","../../node_modules/@aster-js/async/src/promise-settled.ts","../../node_modules/@aster-js/ioc/src/ioc-module/ioc-container.ts","../../node_modules/@aster-js/ioc/src/ioc-module/ioc-module-builder.ts","../../node_modules/@aster-js/ioc/src/ioc-module/ioc-module.ts","../../node_modules/@aster-js/ioc/src/ioc-module/ioc-kernel.ts","../../node_modules/@aster-js/ioc/src/core-services/iclock.ts","../../node_modules/@aster-js/ioc/src/core-services/iconfiguration.ts","../../node_modules/@aster-js/ioc/src/core-services/ilogger.ts","../../node_modules/@aster-js/ioc/src/core-services/index.ts","../../src/abstraction/iapplication-part.ts","../../src/abstraction/iapp-configure-handler.ts","../../src/application-part/iapplication-part-lifecycle.ts","../../src/routing/irouter.ts","../../src/routing/navigation-handlers/default-navigation-handler.ts","../../node_modules/@aster-js/dom/src/utilities/events.ts","../../src/routing/navigation-handlers/history-navigation-handler.ts","../../src/routing/navigation-handlers/hyperlink-navigation-handler.ts","../../src/routing/routing-constants.ts","../../src/routing/iroute-segment.ts","../../src/routing/route.ts","../../src/routing/irouting-handler.ts","../../src/routing/routing-handlers/action-routing-handler.ts","../../src/routing/routing-handlers/service-routing-handler.ts","../../node_modules/@aster-js/iterators/src/query/mixins/action-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/action-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/chunk-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/chunk-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/idistinct-list.ts","../../node_modules/@aster-js/iterators/src/query/mixins/filter-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/filter-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/lookup-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/lookup-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/map-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/map-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/scalar-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/scalar-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/slice-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/slice-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/sort-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/sort-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/union-async-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/union-query-mixin.ts","../../node_modules/@aster-js/iterators/src/query/mixins/apply-mixins.ts","../../node_modules/@aster-js/iterators/src/query/mixins/index.ts","../../node_modules/@aster-js/iterators/src/query/query-base.ts","../../node_modules/@aster-js/iterators/src/query/array-query.ts","../../node_modules/@aster-js/iterators/src/query/async-query-base.ts","../../node_modules/@aster-js/iterators/src/query/iterable-query.ts","../../node_modules/@aster-js/iterators/src/query/union-query.ts","../../node_modules/@aster-js/iterators/src/query/sort-query.ts","../../node_modules/@aster-js/iterators/src/query/transform-query.ts","../../node_modules/@aster-js/iterators/src/query/factories.ts","../../node_modules/@aster-js/iterators/src/query/async-factories.ts","../../node_modules/@aster-js/iterators/src/query/index.ts","../../src/routing/icontainer-route-data.ts","../../src/routing/route-resolution-context.ts","../../src/routing/routing-invocation-context.ts","../../src/routing/default-router.ts","../../src/routing/routing-handlers/part-loader-routing-handler.ts","../../src/controller/controller-routing-handler-tag.ts","../../src/application-part/setup-application-part-builder.ts","../../src/application-part/application-part-builder.ts","../../src/application-part/application-part-lifecycle-wrapper.ts","../../src/application-part/application-part.ts","../../src/application-part/default-application-configure-handler.ts","../../src/application-part/child-application-part.ts","../../src/application-part/single-page-application.ts","../../src/controller/html-result.ts","services/renderer-service.ts","main.ts"],"sourcesContent":["import { Constructor, TypeOfResult } from \"./type\";\n\nexport class AssertionError extends Error { }\n\nexport namespace asserts {\n\n    export function defined<T>(value: T | undefined, message?: string): asserts value is T extends undefined ? never : T {\n        if (typeof value === \"undefined\") {\n            throw new AssertionError(message ?? \"Value expected to be defined\");\n        }\n    }\n\n    export function notDefined<T>(value: T | undefined, message?: string): asserts value is undefined {\n        if (typeof value !== \"undefined\") {\n            throw new AssertionError(message ?? \"Value expected to be undefined\");\n        }\n    }\n\n    export function object<T>(value: unknown, message?: string): asserts value is object {\n        if (typeof value === \"object\" && value !== null) {\n            throw new AssertionError(message ?? \"Value expected to be an object\");\n        }\n    }\n\n    export function ensure<T>(value: T | undefined | null, message?: string): asserts value is NonNullable<T> {\n        if (typeof value === \"undefined\" || value === null) {\n            throw new AssertionError(message ?? \"Value expected to be defined and not null\");\n        }\n    }\n\n    export function returns<T>(value: T | undefined | null, message?: string): NonNullable<T> {\n        ensure<T>(value, message);\n        return value;\n    }\n\n    export function ofType(value: unknown, type: \"number\", message?: string): asserts value is number;\n    export function ofType(value: unknown, type: \"boolean\", message?: string): asserts value is boolean;\n    export function ofType(value: unknown, type: \"string\", message?: string): asserts value is string;\n    export function ofType(value: unknown, type: \"function\", message?: string): asserts value is Function;\n    export function ofType(value: unknown, type: \"undefined\", message?: string): asserts value is undefined;\n    export function ofType(value: unknown, type: \"bigint\", message?: string): asserts value is bigint;\n    export function ofType(value: unknown, type: \"symbol\", message?: string): asserts value is symbol;\n    export function ofType(value: unknown, type: \"object\", message?: string): asserts value is object;\n    export function ofType(value: unknown, type: TypeOfResult, message?: string): asserts value is any {\n        if (typeof value !== type) {\n            throw new AssertionError(message ?? `Expected typeof \"${type}\" but having a typeof \"${typeof value}\"`);\n        }\n    }\n\n    export function instanceOf<T>(value: unknown, type: Constructor<T>, message?: string): asserts value is T {\n        if (!(value instanceof type)) {\n            throw new AssertionError(message ?? `Expected to be an instance of \"${type.name}\"`);\n        }\n    }\n\n    export function create<T>(predicate: (value: unknown) => value is T): (value: unknown, message?: string) => asserts value is T {\n        return (value: unknown, message?: string) => {\n            if (predicate(value)) throw new AssertionError(message ?? \"Assertion failed\");\n        }\n    }\n}\n","import type { Constructor, Func } from \"./type\";\n\nif (!Symbol.dispose) Object.assign(Symbol, { dispose: Symbol(\"dispose\") });\n\nexport interface IDisposable {\n    [Symbol.dispose](): void;\n}\n\nexport function IDisposable<T extends Object>(ctor: Constructor<T>): Constructor<T & Disposable>;\nexport function IDisposable(ctor: Constructor): Constructor {\n    class CustomDisposable extends ctor { };\n    for (const key of Reflect.ownKeys(DisposableHost.prototype)) {\n        const desc = { ...Reflect.getOwnPropertyDescriptor(DisposableHost.prototype, key) };\n        Reflect.defineProperty(CustomDisposable.prototype, key, desc);\n    }\n    return CustomDisposable;\n}\n\nexport namespace IDisposable {\n\n    /** @deprecated use Symbol.dispose instead */\n    export const dispose: typeof Symbol.dispose = Symbol.dispose;\n\n    /**\n     * Create a new IDisposable from a callback\n     * @param callback Callback to call when dispose is invoked\n     * @returns Returns a new IDiposable instance\n     */\n    export function create(callback: Func): IDisposable {\n        return {\n            [Symbol.dispose]: () => {\n                callback();\n            }\n        };\n    }\n\n    /**\n     * Dispose all provide instances, support any iterable instance.\n     * @param instances Instances to dispose\n     * @returns Returns all errors encountered during disposing each instances.\n     */\n    export function safeDisposeAll(instances: any): any[] {\n        if (typeof instances === \"object\" && instances !== null && typeof instances[Symbol.iterator] === \"function\") {\n            return [...instances].map(safeDispose);\n        }\n        return [];\n    }\n\n    /**\n     * Dispose the provided instance and catch exceptions that may occur\n     * @param instance Instance to dispose\n     * @returns Returns the catched disposing error or undefined\n     */\n    export function safeDispose(instance: any): any {\n        if (typeof instance === \"object\" && instance !== null && typeof instance[dispose] === \"function\") {\n            try {\n                instance[dispose]();\n            }\n            catch (ex) {\n                return ex;\n            }\n        }\n    }\n\n    /**\n     * Check if an instance is disposed, throw an error if it is\n     * @param instance Instance to check\n     */\n    export function checkDisposed(instance: IDisposable & { readonly disposed: boolean }): void {\n        if (instance.disposed) throw new DisposedError(\"Try to access to a disposed instance\");\n    }\n}\n\n/**\n * Error triggered when trying to use a diposed instance\n */\nexport class DisposedError extends Error { }\n\n/** Represents a class that contains dependencies to dispose */\nexport class DisposableHost implements IDisposable {\n    private _disposed?: boolean;\n    private _disposables?: Set<IDisposable>;\n\n    get disposed(): boolean { return Boolean(this._disposed); }\n\n    /**\n     * Register all provided instances to dispose them when current instance will be disposed\n     * @param disposables Instance to attach\n     */\n    registerForDispose(...disposables: IDisposable[]): void {\n        for (const disposable of disposables) {\n            if (!this._disposables) {\n                this._disposables = new Set([disposable]);\n            }\n            else {\n                this._disposables.add(disposable);\n            }\n        }\n    }\n\n    protected checkIfDisposed(): void {\n        IDisposable.checkDisposed(this);\n    }\n\n    [IDisposable.dispose](): void {\n        if (!this._disposed) {\n            this._disposed = true;\n\n            IDisposable.safeDisposeAll(this._disposables);\n            delete this._disposables;\n\n            this.dispose && this.dispose();\n        }\n    }\n\n    protected dispose?(): void;\n}\n","import { DisposedError, IDisposable } from \"./idisposable\";\nimport { Constructor } from \"./type\";\n\nconst enum LazyState {\n    proxy = 1,\n    value = 2,\n    faulted = 3,\n    disposed = 4\n}\n\nconst IsLazyProxy = Symbol();\n\nexport function isLazyProxy(instance: any): boolean {\n    if (typeof instance !== \"undefined\" && instance !== null) {\n        return Reflect.get(instance, IsLazyProxy) === true;\n    }\n    return false;\n}\n\nexport class Lazy<T extends object = object> implements IDisposable {\n    private _value: any;\n    private _state?: LazyState;\n    private _prototype?: any;\n\n    get disposed(): boolean { return this._state === LazyState.disposed; }\n\n    constructor(\n        private _factory: () => T,\n        ctor?: Constructor<T>\n    ) {\n        this._prototype = ctor?.prototype;\n    }\n\n    build(): boolean {\n        IDisposable.checkDisposed(this);\n\n        if (this._state === LazyState.value) return false;\n\n        try {\n            const result = this._factory();\n\n            // Avoid keeping references through the factory callback\n            // Avoid also any dirty hacked state to throw errors with strong reference to value\n            this._factory = () => result;\n\n            this._value = result;\n\n            this._state = LazyState.value;\n\n            if (typeof this._value === \"object\") {\n                this._prototype = Reflect.getPrototypeOf(this._value);\n            }\n        }\n        catch (err) {\n            this._value = err;\n            this._state = LazyState.proxy;\n        }\n        return true;\n    }\n\n    has(): boolean {\n        return this._state === LazyState.value;\n    }\n\n    get(): T {\n        IDisposable.checkDisposed(this); // LazyState.disposed\n\n        if (this._state === LazyState.faulted) throw this._value;\n\n        if (typeof this._state === \"undefined\") {\n            this._value = new Proxy(\n                Object.create(null),\n                this.createProxyHandler()\n            );\n            this._state = LazyState.proxy;\n        }\n        // LazyState.proxy &  LazyState.value\n        return this._value;\n    }\n\n    [IDisposable.dispose](): void {\n        if (this._state === LazyState.value) {\n            IDisposable.safeDispose(this._value);\n        }\n        this._state = LazyState.disposed;\n        // Avoid keeping references through the factory callback\n        this._factory = () => { throw new DisposedError() };\n    }\n\n    private getInstance(): T {\n        this.build(); // CheckDisposed done\n        if (this._state === LazyState.faulted) throw this._value;\n        return this._value;\n    }\n\n    private createProxyHandler(): ProxyHandler<T> {\n        return {\n            get: (_: T, prop: keyof T) => {\n                if (prop === IsLazyProxy) return true;\n                return this.getInstance()[prop];\n            },\n            set: (_: T, p: keyof T, value: any) => {\n                this.getInstance()[p] = value;\n                return true;\n            },\n            deleteProperty: (_: T, p: keyof T) => {\n                delete this.getInstance()[p];\n                return true;\n            },\n            getPrototypeOf: (_: T) => {\n                return this._prototype ?? Object;\n            }\n        } as ProxyHandler<T>;\n    }\n\n    static get<T extends object = object>(factory: () => T, ctor?: Constructor<T>): T {\n        const lazy = new Lazy(factory, ctor);\n        return lazy.get();\n    }\n}\n","\ntype HasTagDelegate = (target: object) => boolean;\n\ntype GetTagDelegate<T> = (target: object) => T;\n\ninterface GetSetTagDelegate<T> {\n    (target: object): T;\n    (target: object, value: T): void;\n};\n\ninterface ReadonlyTagImpl<T> {\n    readonly has: HasTagDelegate;\n\n    readonly get: GetTagDelegate<T>;\n\n    toString(): string;\n}\n\ninterface TagImpl<T> {\n    readOnly(): ReadonlyTag<T | undefined>;\n\n    set(target: object, value: T): void;\n\n    delete(target: object): boolean;\n}\n\nexport type ReadonlyTag<T> = GetTagDelegate<T> & ReadonlyTagImpl<T>;\n\n/** Tag allow to attach value using a weakmap */\nexport type Tag<T> = TagImpl<T> & GetSetTagDelegate<T> & ReadonlyTagImpl<T>;\n\nfunction createReadOnlyTag<T>(description: string, has: HasTagDelegate, get: GetTagDelegate<T>): ReadonlyTag<T> {\n    const readOnlyTag = Object.assign<GetTagDelegate<T>, ReadonlyTagImpl<T>>(\n        target => get(target),\n        {\n            get, has,\n            toString: () => description\n        }\n    );\n    return Object.freeze<ReadonlyTag<T>>(readOnlyTag);\n}\n\n/** Create a new Tag */\nexport function Tag<T = any>(description: string, defaultValue?: T): Tag<T> {\n    const store = new WeakMap();\n\n    const has = (target: object) => store.has(target);\n    const get = (target: object) => has(target) ? store.get(target) : defaultValue;\n    const set = (target: object, value: T) => void store.set(target, value);\n\n    const readOnlyTag = createReadOnlyTag<T>(description, has, get);\n\n    return Object.assign<GetSetTagDelegate<T>, ReadonlyTagImpl<T>, TagImpl<T>>(\n        (...args: [object] | [object, T]) => args.length == 1 ? get(args[0]) : set(args[0], args[1]),\n        readOnlyTag,\n        {\n            readOnly: () => readOnlyTag,\n            set,\n            delete: target => store.delete(target)\n        }\n    );\n}\n\nexport namespace Tag {\n    export function lazy<T = any>(description: string, factory: (target: object) => T): ReadonlyTag<T>;\n    export function lazy<T = any, S = any>(description: string, factory: (target: object, state: S) => T, state: S): ReadonlyTag<T>;\n    export function lazy<T>(description: string, factory: (target: object, state: any) => T, state?: any): ReadonlyTag<T> {\n        const store = new WeakMap();\n\n        const has = (target: object) => store.has(target);\n        const get = (target: object) => {\n            if (!has(target)) {\n                store.set(target, factory(target, state));\n            }\n            return store.get(target);\n        };\n        return createReadOnlyTag<T>(description, has, get);\n    }\n}\n","import { Tag } from \"./tag\";\n\nexport namespace Tags {\n    /**\n     * hashId allow to attribute a id to an instance to simplify the creation of hash codes.\n     * Using hashId, you can create a hashCode by simply string concat two of these id with a separator.\n     *\n     * This is very usefull in case of compound keys where the key targets two objects\n     * and have to be the key of a Map or a Set.\n     *\n     * @example\n     * // This hash will be unique and can be reproduced\n     * `${Tags.hashId.get(obj1)}-${Tags.hashId.get(obj2)}`;\n     */\n    export const hashId = Tag.lazy(\"hashId\", (_, state) => ++state.lastId, { lastId: 0 });\n}\n","import { HashFactory } from \"./hash-factory\";\n\nexport class HashMap<K, V> implements Iterable<[K, V]> {\n    private readonly _hashFactory: (key: K) => any;\n    private readonly _store: Map<any, [K, V]>;\n\n    get size(): number { return this._store.size; }\n\n    get [Symbol.toStringTag](): string { return \"[Object HashMap]\"; }\n\n    constructor(hashFactory: HashFactory<K> = k => k, values?: Iterable<readonly [K, V]>) {\n        this._hashFactory = hashFactory;\n        this._store = new Map<any, [K, V]>(\n            this.mapEntries(values)\n        );\n    }\n\n    has(key: K): boolean {\n        const hash = this._hashFactory(key);\n        return this._store.has(hash);\n    }\n\n    get(key: K): V | undefined {\n        const entry = this.getEntry(key);\n        if (entry) return entry[1];\n    }\n\n    getOrElse(key: K, fallback: V): V {\n        const entry = this.getEntry(key);\n        return entry ? entry[1] : fallback;\n    }\n\n    private getEntry(key: K): [K, V] | undefined {\n        const hash = this._hashFactory(key);\n        return this._store.get(hash);\n    }\n\n    getOrSet(key: K, factory: (key: K, src: HashMap<K, V>) => V): V;\n    getOrSet(key: K, factory: (key: K, src: HashMap<K, V>) => Promise<V>): Promise<V>;\n    getOrSet(key: K, factory: (key: K, src: HashMap<K, V>) => Promise<V> | V): Promise<V> | V {\n        const hash = this._hashFactory(key);\n        const entry = this._store.get(hash);\n        if (!entry) {\n            const value = factory(key, this);\n\n            if (value instanceof Promise) {\n                return this.addAsync(hash, key, value);\n            }\n\n            this._store.set(hash, [key, value]);\n            return value;\n        }\n        return entry[1];\n    }\n\n    private async addAsync(hash: any, key: K, valuePromise: Promise<V>): Promise<V> {\n        const value = await valuePromise;\n        this._store.set(hash, [key, value]);\n        return value;\n    }\n\n    set(key: K, value: V): this {\n        const hash = this._hashFactory(key);\n        this._store.set(hash, [key, value]);\n        return this;\n    }\n\n    delete(key: K): boolean {\n        const hash = this._hashFactory(key);\n        return this._store.delete(hash);\n    }\n\n    clear(): void {\n        this._store.clear();\n    }\n\n    forEach(callbackfn: (value: V, key: K, map: this) => void, thisArg?: any): void {\n        for (const [key, value] of this) {\n            callbackfn.call(thisArg, value, key, this);\n        }\n    }\n\n    *keys(): IterableIterator<K> {\n        for (const [k, _] of this) {\n            yield k;\n        }\n    }\n\n    *values(): IterableIterator<V> {\n        for (const [_, v] of this) {\n            yield v;\n        }\n    }\n\n    *entries(): IterableIterator<[K, V]> {\n        for (const entry of this._store.values()) {\n            yield [...entry];\n        }\n    }\n\n    [Symbol.iterator](): IterableIterator<[K, V]> {\n        return this.entries();\n    }\n\n    private *mapEntries(entries?: Iterable<readonly [K, V]>): Iterable<[any, [K, V]]> {\n        if (entries) {\n            for (const [k, v] of entries) {\n                yield [this._hashFactory(k), [k, v]];\n            }\n        }\n    }\n}\n","import { HashFactory } from \"./hash-factory\";\n\nexport class HashSet<K> implements Iterable<K> {\n    private readonly _hashFactory: (key: K) => any;\n    private readonly _store: Map<any, K>;\n\n    get size(): number { return this._store.size; }\n\n    get [Symbol.toStringTag](): string { return \"[Object HashSet]\"; }\n\n    constructor(hashFactory: HashFactory<K> = String, values?: Iterable<K>) {\n        this._hashFactory = hashFactory;\n        this._store = new Map<any, K>(\n            this.mapEntries(values)\n        );\n    }\n\n    has(key: K): boolean {\n        const hash = this._hashFactory(key);\n        return this._store.has(hash);\n    }\n\n    add(key: K): this {\n        const hash = this._hashFactory(key);\n        this._store.set(hash, key);\n        return this;\n    }\n\n    delete(key: K): boolean {\n        const hash = this._hashFactory(key);\n        return this._store.delete(hash);\n    }\n\n    clear(): void {\n        this._store.clear();\n    }\n\n    forEach(callbackfn: (value: K, key: K, map: this) => void, thisArg?: any): void {\n        for (const key of this) {\n            callbackfn.call(thisArg, key, key, this);\n        }\n    }\n\n    keys(): IterableIterator<K> {\n        return this._store.values();\n    }\n\n    *entries(): IterableIterator<[K, K]> {\n        for (const item of this._store.values()) {\n            yield [item, item];\n        }\n    }\n\n    values(): IterableIterator<K> {\n        return this.keys();\n    }\n\n    [Symbol.iterator](): IterableIterator<K> {\n        return this.keys();\n    }\n\n    private *mapEntries(entries?: Iterable<K>): Iterable<[any, K]> {\n        if (entries) {\n            for (const k of entries) {\n                yield [this._hashFactory(k), k];\n            }\n        }\n    }\n}\n","import { HashFactory } from \"./hash-factory\";\nimport { HashMap } from \"./hash-map\";\n\nexport class Lookup<K, V> {\n    private readonly _store: Map<K, V[]>;\n    private _itemSize: number;\n\n    get size(): number { return this._store.size; }\n\n    get itemSize(): number { return this._itemSize; }\n\n    get [Symbol.toStringTag](): string { return \"[Object Lookup]\"; }\n\n    constructor(hashFactory?: HashFactory<K>) {\n        this._store = hashFactory ? new HashMap<K, V[]>(hashFactory) : new Map();\n        this._itemSize = 0;\n    }\n\n    has(key: K): boolean {\n        return this._store.has(key);\n    }\n\n    hasValue(key: K, value: V): boolean {\n        const entries = this._store.get(key);\n        return entries?.includes(value) ?? false;\n    }\n\n    include(value: V): boolean {\n        for (const val of this.values()) {\n            if (val === value) return true;\n        }\n        return false;\n    }\n\n    first(key: K): V | undefined {\n        const entries = this._store.get(key);\n        if (entries) return entries[0];\n    }\n\n    last(key: K): V | undefined {\n        const entries = this._store.get(key);\n        if (entries) return entries[entries.length - 1];\n    }\n\n    *get(key: K): IterableIterator<V> {\n        const entries = this._store.get(key);\n        if (entries) yield* entries;\n    }\n\n    add(key: K, ...values: V[]): this {\n        const entries = this._store.get(key);\n        if (entries) {\n            entries.push(...values);\n        }\n        else {\n            this._store.set(key, values);\n        }\n\n        this._itemSize++;\n        return this;\n    }\n\n    delete(key: K): boolean {\n        const entries = this._store.get(key);\n        if (entries) {\n            this._itemSize -= entries.length;\n            return this._store.delete(key);\n        }\n        return false;\n    }\n\n    deleteValue(key: K, value: V): boolean {\n        const entries = this._store.get(key);\n        if (entries) {\n            const idx = entries.indexOf(value);\n            if (idx !== -1) {\n                if (entries.length === 1) {\n                    this._store.delete(key)\n                }\n                else {\n                    entries.splice(idx, 1);\n                }\n                this._itemSize--;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    clear(): void {\n        this._itemSize = 0;\n        this._store.clear();\n    }\n\n    forEach(callbackfn: (value: V, key: K, map: this) => void, thisArg?: any): void {\n        for (const [key, values] of this._store) {\n            for (const value of values) {\n                callbackfn.call(thisArg, value, key, this);\n            }\n        }\n    }\n\n    *keys(): Iterable<K> {\n        yield* this._store.keys();\n    }\n\n    *values(): Iterable<V> {\n        for (const values of this._store.values()) {\n            yield* values;\n        }\n    }\n\n    *[Symbol.iterator](): IterableIterator<[K, V[]]> {\n        yield* this._store;\n    }\n\n    static create<K, V>(values: Iterable<readonly [K, V]>, hashFactory?: HashFactory<K>): Lookup<K, V> {\n        const lookup = new Lookup<K, V>(hashFactory);\n        for (const item of values) {\n            lookup.add(...item);\n        }\n        return lookup;\n    }\n}\n","import { Constructor, ReadonlyTag } from \"@aster-js/core\";\n\nimport { ServiceIdentifier, ServiceIdentifierOptions, ServiceIdentityTag } from './service-identifier';\n\nexport type DependencyParameterType = \"optional\" | \"required\" | \"many\";\n\nexport interface DependencyParameter {\n    readonly serviceId: ServiceIdentifier;\n    readonly index: number;\n    readonly type: DependencyParameterType;\n}\n\nexport class ServiceRegistry {\n    private readonly _serviceIds: Map<string | symbol | Constructor, [ServiceIdentifier, ServiceIdentifierOptions]> = new Map();\n    private readonly _dependencies: Map<Constructor, DependencyParameter[]> = new Map();\n\n    constructor(\n        private readonly _resolver: (ctor: Constructor) => ServiceIdentifier,\n        private readonly _tag: ReadonlyTag<string | symbol | Constructor | undefined>\n    ) {\n\n    }\n\n    *dependencies(ctor: Constructor): Iterable<DependencyParameter> {\n        const deps = this._dependencies.get(ctor);\n        if (deps) yield* deps.sort((l, r) => l.index - r.index);\n    }\n\n    get(tag: string | symbol | Constructor): ServiceIdentifier | null {\n        const entry = this._serviceIds.get(tag);\n        return entry ? entry[0] : null;\n    }\n\n    resolve(ctor: Constructor): ServiceIdentifier {\n        const entry = this._serviceIds.get(ctor);\n        if (entry) return entry[0];\n\n        return this._resolver(ctor);\n    }\n\n    add(serviceId: ServiceIdentifier, options: ServiceIdentifierOptions): void {\n        const tagId = ServiceIdentityTag(serviceId);\n\n        if (!tagId) {\n            throw new Error(`Invalid service id: ${serviceId}`);\n        }\n\n        if (this._serviceIds.has(tagId)) {\n            throw new Error(`Service \"${options.name}\" already exists.`);\n        }\n\n        this._serviceIds.set(tagId, [serviceId, options]);\n    }\n\n    addDependency(serviceCtor: Constructor, serviceId: ServiceIdentifier, index: number, type: DependencyParameterType): void {\n        const dependencies = this._dependencies.get(serviceCtor);\n        if (dependencies) {\n            dependencies.push({ serviceId, index, type });\n            dependencies.sort((a, b) => a.index - b.index)\n        }\n        else {\n            this._dependencies.set(serviceCtor, [{ serviceId, index, type }]);\n        }\n    }\n}\n","import { Constructor, Tag } from \"@aster-js/core\";\n\nimport { ServiceRegistry } from \"./service-registry\";\n\nconst serviceIdentityTag = Tag<string | symbol | Constructor>(\"IoC/ServiceId\");\nexport const ServiceIdentityTag = serviceIdentityTag.readOnly();\n\nexport interface ServiceIdentifierOptions {\n    readonly name: string;\n    /**\n     * Indicate whether or not this identity name should be unique or not.\n     *\n     * If false, a Symbol is used as key, but symbols can't be shared/resolved between different bundle / modules.\n     *\n     * If true, the name is used as key and the service key can be shared/resolved through multiple bundles / modules.\n     */\n    readonly unique?: boolean;\n}\n\nexport interface ServiceIdentifier<T = any> extends ServiceIdentifierDecorator, ServiceIdentifierImpl<T> { }\n\nexport interface ServiceIdentifierDecorator {\n    (...args: any[]): void;\n}\n\nexport interface ServiceIdentifierImpl<T> {\n    /** Returns the registration name */\n    toString(): string;\n}\n\nexport function ServiceIdentifier<T>(nameOrOptions: string | ServiceIdentifierOptions): ServiceIdentifier<T> {\n    const options = typeof nameOrOptions === \"string\" ? { name: nameOrOptions } : nameOrOptions;\n    const hashValue = options.unique ? options.name : Symbol(options.name);\n    return create(hashValue, options);\n}\n\nexport namespace ServiceIdentifier {\n    export const registry = new ServiceRegistry(of, ServiceIdentityTag);\n    /**\n     * Returns a new service identifier for a specific type\n     *\n     * This method will strongly bind implementation to a specific type\n     */\n    export function of<T = any>(ctor: Constructor<T>): ServiceIdentifier<T> {\n        return create(ctor, { name: ctor.name });\n    }\n\n    /** Check wether or not the provided object is a ServiceIdentifier */\n    export function is<T = any>(target: any): target is ServiceIdentifier<T> {\n        return serviceIdentityTag.has(target);\n    }\n}\n\nfunction create<T>(tag: string | symbol | Constructor, options: ServiceIdentifierOptions): ServiceIdentifier<T> {\n    const id = <ServiceIdentifier<T>>((target: Constructor, _: string | symbol, index: number) => {\n        ServiceIdentifier.registry.addDependency(target, id, index, \"required\");\n    });\n\n    serviceIdentityTag.set(id, tag);\n\n    Object.assign(id, createImpl(id, options));\n    ServiceIdentifier.registry.add(id, options);\n\n    return id;\n}\n\nfunction createImpl<T>(id: ServiceIdentifier, options: ServiceIdentifierOptions): ServiceIdentifierImpl<T> {\n    return {\n        toString: () => options.name\n    };\n}\n","import { Constructor } from \"@aster-js/core\";\nimport { ServiceScope } from \"src/service-descriptors\";\nimport { ServiceIdentifier } from \"./service-identifier\";\n\nexport function isAllowedScope(scope: ServiceScope, owned: boolean): boolean {\n    if (owned) {\n        return (scope & ServiceScope.container) === ServiceScope.container;\n    }\n    return (scope & ServiceScope.children) === ServiceScope.children;\n}\n\nexport function resolveServiceId<T>(serviceIdOrCtor: ServiceIdentifier<T> | Constructor<T>): ServiceIdentifier<T> {\n    if (ServiceIdentifier.is(serviceIdOrCtor)) {\n        return serviceIdOrCtor;\n    }\n\n    const serviceId = ServiceIdentifier.registry.resolve(serviceIdOrCtor);\n    if (serviceId) return serviceId;\n\n    throw new Error(`${serviceIdOrCtor} is neither a service id, neither a valid registered constructor.`);\n}\n","import { Constructor, Tag } from \"@aster-js/core\";\n\nimport { ServiceIdentifier } from \"./service-identifier\";\n\nconst _serviceContractTag = Tag<ServiceIdentifier>(\"serviceContract\");\n\nexport function ServiceContract<T>(serviceId: ServiceIdentifier<T>) {\n    return (target: Constructor<T>) => {\n        _serviceContractTag.set(target, serviceId);\n    };\n}\n\nexport namespace ServiceContract {\n\n    export const Tag = _serviceContractTag.readOnly();\n\n    export function resolve(ctor: Constructor): ServiceIdentifier {\n        return _serviceContractTag.get(ctor)\n            ?? ServiceIdentifier.registry.resolve(ctor);\n    }\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { IDisposable } from \"@aster-js/core\";\n\nimport { ServiceIdentifier } from \"../service-registry/service-identifier\";\n\nexport const IServiceAccessor = ServiceIdentifier<IServiceAccessor>(\"IServiceAccessor\");\n\nexport interface IServiceAccessor extends IDisposable {\n    get<T>(serviceId: ServiceIdentifier<T>, required: true): T;\n    get<T>(serviceId: ServiceIdentifier<T>, required?: boolean): T | undefined;\n    getMany<T>(serviceId: ServiceIdentifier<T>, currentScopeOnly?: boolean): Iterable<T>;\n}\n","import { Constructor } from \"@aster-js/core\";\nimport { ServiceIdentifier } from \"./service-identifier\";\n\nexport function Optional(serviceId: ServiceIdentifier): (target: Constructor, propertyKey: string | symbol | undefined, index: number) => void {\n    return (target: Constructor, _: string | symbol | undefined, index: number) => {\n        ServiceIdentifier.registry.addDependency(target, serviceId, index, \"optional\");\n    };\n}\n\nexport function Many(serviceId: ServiceIdentifier): (target: Constructor, propertyKey: string | symbol | undefined, index: number) => void {\n    return (target: Constructor, _: string | symbol | undefined, index: number) => {\n        ServiceIdentifier.registry.addDependency(target, serviceId, index, \"many\");\n    };\n}\n\nexport function Inject(type: Constructor, optional?: boolean): (target: Constructor, propertyKey: string | symbol | undefined, index: number) => void {\n    return (target: Constructor, _: string | symbol | undefined, index: number) => {\n        const serviceId = ServiceIdentifier.registry.resolve(type);\n        ServiceIdentifier.registry.addDependency(target, serviceId, index, optional ? \"optional\" : \"required\");\n    };\n}\n\nexport function InjectMany(type: Constructor): (target: Constructor, propertyKey: string | symbol | undefined, index: number) => void {\n    return (target: Constructor, _: string | symbol | undefined, index: number) => {\n        const serviceId = ServiceIdentifier.registry.resolve(type);\n        ServiceIdentifier.registry.addDependency(target, serviceId, index, \"many\");\n    };\n}\n","import { Constructor, DisposableHost, Tag } from \"@aster-js/core\";\n\nimport { IServiceAccessor } from \"../service-provider/iservice-accessor\";\n\nimport { Optional } from \"./service-decorators\";\nimport { ServiceIdentifier } from \"./service-identifier\";\n\nconst _serviceFactoryTag = Tag<ServiceIdentifier>(\"serviceFactory\");\n\nexport const ServiceFactoryTag = _serviceFactoryTag.readOnly();\n\nexport interface IServiceFactory<T = any> {\n    create(): T;\n}\n\nexport type ServiceFactoryDelegate<T> = (acc: IServiceAccessor) => T;\n\nexport namespace IServiceFactory {\n\n    export function create<T>(\n        serviceId: ServiceIdentifier<T>,\n        callback: ServiceFactoryDelegate<T>,\n        targetType?: Constructor<T>\n    ): ServiceFactoryConstructor<T> {\n\n        @ServiceFactory(serviceId)\n        class CallbackServiceFactory extends DisposableHost implements IServiceFactory<T> {\n\n            static readonly targetType = targetType ?? Object as any;\n\n            constructor(\n                @Optional(IServiceAccessor) private readonly _serviceAccessor: IServiceAccessor\n            ) {\n                super();\n                this.registerForDispose(_serviceAccessor);\n            }\n\n            create(): T {\n                return callback(this._serviceAccessor);\n            }\n        }\n        return CallbackServiceFactory;\n    }\n}\n\nexport interface ServiceFactoryConstructor<T = any> extends Constructor<IServiceFactory<T>> {\n    readonly targetType: Constructor<T>;\n}\n\nexport const ServiceFactory = <T>(serviceId: ServiceIdentifier<T>) => {\n    return (target: ServiceFactoryConstructor<T>) => {\n        _serviceFactoryTag.set(target, serviceId);\n    }\n}\n","import { DisposableHost, IDisposable } from \"@aster-js/core\";\nimport { Lookup } from \"@aster-js/collections\";\n\nimport { IServiceDescriptor } from \"../service-descriptors\";\nimport { ServiceIdentifier, ServiceIdentityTag } from \"../service-registry\";\n\nimport { IServiceCollection } from \"./iservice-collection\";\n\nexport class ServiceCollection extends DisposableHost implements IServiceCollection {\n    private readonly _store: Lookup<ServiceIdentifier, IServiceDescriptor>;\n\n    get size(): number { return this._store.size; }\n\n    constructor(descriptors: Iterable<IServiceDescriptor> = []) {\n        super();\n        const values = ServiceCollection.entries(descriptors);\n        this._store = Lookup.create(values, ServiceIdentityTag.get);\n    }\n\n    has(serviceIdOrDescriptor: ServiceIdentifier | IServiceDescriptor): boolean {\n        if (ServiceIdentifier.is(serviceIdOrDescriptor)) {\n            return this._store.has(serviceIdOrDescriptor as ServiceIdentifier);\n        }\n        const desc = serviceIdOrDescriptor as IServiceDescriptor;\n        return this._store.hasValue(desc.serviceId, desc);\n    }\n\n    get(serviceId: ServiceIdentifier): Iterable<IServiceDescriptor> {\n        return this._store.get(serviceId);\n    }\n\n    add(desc: IServiceDescriptor): this {\n        this._store.add(desc.serviceId, desc);\n        return this;\n    }\n\n    delete(desc: IServiceDescriptor): this {\n        this._store.deleteValue(desc.serviceId, desc);\n        return this;\n    }\n\n    *[Symbol.iterator](): IterableIterator<IServiceDescriptor> {\n        for (const desc of this._store.values()) {\n            yield desc;\n        }\n    }\n\n    protected dispose(): void {\n        IDisposable.safeDispose(this._store);\n    }\n\n    private static *entries(descriptors: Iterable<IServiceDescriptor>): Iterable<[ServiceIdentifier, IServiceDescriptor]> {\n        for (const desc of descriptors) {\n            yield [desc.serviceId, desc];\n        }\n    }\n}\n","\nexport class CallbackIterator<T> implements Iterator<T> {\n    private _nextValue: T | undefined;\n\n    constructor(\n        initialValue: T,\n        private readonly _nextCallback: (prev: T) => T | undefined\n    ) {\n        this._nextValue = initialValue;\n    }\n\n    next(): IteratorResult<T> {\n        const value = this._nextValue;\n\n        if (typeof value === \"undefined\") {\n            return { value, done: true };\n        }\n\n        this._nextValue = this._nextCallback(value);\n        return { value, done: false };\n    }\n}","import { CallbackIterator } from \"./callback-iterator\";\n\nexport namespace Iterables {\n\n    export function cast<T>(iterable: unknown): iterable is Iterable<T> {\n        return typeof iterable === \"object\" && iterable !== null\n            && typeof Reflect.get(iterable, Symbol.iterator) === \"function\";\n    }\n\n    export function create<T>(initialValue: T, nextCallback: (prev: T) => T | undefined): Iterable<T> {\n        return {\n            [Symbol.iterator]: () => {\n                return new CallbackIterator(initialValue, nextCallback);\n            }\n        };\n    }\n\n    export function* filter<T>(iterable: Iterable<T>, predicate: (item: T) => boolean): Iterable<T> {\n        for (const item of iterable) if (predicate(item)) yield item;\n    }\n\n    export function has<T>(iterable: Iterable<T>, filterPredicate?: (item: T) => boolean): boolean {\n        for (const _ of build(iterable, filterPredicate)) return true;\n        return false;\n    }\n\n    export function first<T>(iterable: Iterable<T>, filterPredicate?: (item: T) => boolean): T | undefined {\n        for (const item of build(iterable, filterPredicate)) return item;\n    }\n\n    export function last<T>(iterable: Iterable<T>, filterPredicate?: (item: T) => boolean): T | undefined {\n        const iterator = build(iterable, filterPredicate);\n\n        let result: T | undefined;\n        for (const item of iterator) { result = item; }\n        return result;\n    }\n\n    function build<T>(iterable: Iterable<T>, filterPredicate?: (item: T) => boolean): Iterable<T> {\n        filterPredicate ??= _ => true;\n        return filter(iterable, filterPredicate);\n    }\n}","import { CallbackIterator } from \"./callback-iterator\";\n\nexport namespace Iterators {\n\n    export function create<T>(initialValue: T, nextCallback: () => T | undefined): Iterator<T> {\n        return new CallbackIterator(initialValue, nextCallback);\n    }\n}","import { HashFactory, HashMap, HashSet } from \"@aster-js/collections\";\n\nexport type DependencyResolver<T> = (node: T) => Iterable<T>;\n\nexport class TopologicalIterator<T> implements Iterator<T> {\n    private readonly _resolveds: HashSet<T>;\n    private readonly _remaings: HashMap<T, T[]>;\n\n    constructor(\n        src: Iterable<T>,\n        private readonly _resolver: DependencyResolver<T>,\n        hashFactory?: HashFactory<T>\n    ) {\n        this._resolveds = new HashSet<T>();\n        this._remaings = new HashMap(\n            hashFactory,\n            [...src].map(item => [item, [...this._resolver(item)]])\n        );\n    }\n\n    next(): IteratorResult<T> {\n        if (!this._remaings.size) return { value: void 0, done: true };\n\n        for (let [node, deps] of this._remaings) {\n\n            if (deps.every(d => this._resolveds.has(d))) {\n                this._remaings.delete(node);\n                this._resolveds.add(node);\n                return { value: node, done: false };\n            }\n        }\n\n        throw new Error(`Cyclic dependencies: Cannot resolve the provided dependency graph.`);\n    }\n}","import { HashFactory, HashMap, HashSet } from \"@aster-js/collections\";\nimport { TopologicalIterator } from \"./topological\";\n\nexport class TopologicalGraph<T> implements Iterable<T>{\n    private readonly _nodes: HashMap<T, HashSet<T>>;\n\n    constructor(\n        private readonly _hashFactory?: HashFactory<T>\n    ) {\n        this._nodes = new HashMap<T, HashSet<T>>(_hashFactory);\n    }\n\n    has(node: T): boolean {\n        return this._nodes.has(node);\n    }\n\n    *get(node: T): IterableIterator<T> {\n        let deps = this._nodes.get(node);\n        if (deps) yield* deps;\n    }\n\n    add(node: T, ...dependencies: T[]): void {\n        let deps = this._nodes.get(node);\n        if (deps) {\n            for (let dep of dependencies) deps.add(dep);\n        }\n        else {\n            this._nodes.set(\n                node,\n                new HashSet(this._hashFactory, dependencies)\n            );\n        }\n    }\n\n    delete(node: T): boolean {\n        return this._nodes.delete(node);\n    }\n\n    clear(): void {\n        this._nodes.clear();\n    }\n\n    *nodes(): IterableIterator<T> {\n        const keys = [...this._nodes.keys()];\n        const results = new HashSet(this._hashFactory, keys);\n\n        // Nodes without dependencies are returned first\n        for (const values of this._nodes.values()) {\n            for (const dep of values) {\n                if (!results.has(dep)) {\n                    results.add(dep);\n                    yield dep;\n                }\n            }\n        }\n        // Last added supposedly have less dependencies\n        yield* keys.reverse();\n    }\n\n    [Symbol.iterator](): Iterator<T> {\n        return new TopologicalIterator(this.nodes(), n => this.get(n), this._hashFactory);\n    }\n}","import { Constructor } from \"@aster-js/core\";\nimport { Iterables } from \"@aster-js/iterators\";\n\nimport { ServiceIdentifier } from \"../service-registry\";\n\nimport { IServiceDescriptor, ServiceLifetime, ServiceScope } from \"./iservice-descriptor\";\n\nexport class ServiceDescriptor implements IServiceDescriptor {\n\n    readonly targetType: Constructor;\n\n    constructor(\n        readonly serviceId: ServiceIdentifier,\n        readonly lifetime: ServiceLifetime,\n        readonly scope: ServiceScope,\n        readonly ctor: Constructor,\n        readonly baseArgs: readonly any[],\n        readonly delayed: boolean\n    ) {\n        this.targetType = ctor;\n        this.validateArgs();\n    }\n\n    private validateArgs(): void {\n        const dependencies = ServiceIdentifier.registry.dependencies(this.targetType);\n        const first = Iterables.first(dependencies);\n        if(first){\n            if(first.index > this.baseArgs.length)  {\n                throw new Error(`Not enough arguments provided for service binding ${this.serviceId}. Provided: ${this.baseArgs.length}, Expected: ${first.index}`);\n            }\n            if(first.index < this.baseArgs.length) {\n                throw new Error(`Too much arguments provided for service binding ${this.serviceId}. Provided: ${this.baseArgs.length}, Expected: ${first.index}`);\n            }\n        }\n    }\n}\n","import { Constructor } from \"@aster-js/core\";\n\nimport { ServiceFactoryConstructor, ServiceIdentifier } from \"../service-registry\";\n\nimport { IServiceDescriptor, ServiceLifetime, ServiceScope } from \"./iservice-descriptor\";\n\nexport class ServiceFactoryDescriptor implements IServiceDescriptor {\n\n    readonly targetType: Constructor;\n\n    constructor(\n        readonly serviceId: ServiceIdentifier,\n        readonly lifetime: ServiceLifetime,\n        readonly scope: ServiceScope,\n        readonly ctor: ServiceFactoryConstructor,\n        readonly baseArgs: readonly any[],\n        readonly delayed: boolean\n    ) {\n        this.targetType = ctor.targetType;\n    }\n}\n","import { Constructor } from \"@aster-js/core\";\n\nimport { ServiceContract } from \"../service-registry/service-contract\";\nimport { ServiceDescriptor } from \"./service-descriptor\";\nimport { ServiceCollection } from \"../service-collection/service-collection\";\n\nimport { ServiceOptions, ServiceLifetime, ServiceScope } from \"./iservice-descriptor\";\nimport { ServiceIdentifier } from \"../service-registry\";\n\ninterface IServiceCollectionExtensions {\n    addService(lifetime: ServiceLifetime, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\n    addService(lifetime: ServiceLifetime, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\n    addScoped(servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): this;\n    addScoped(ctor: Constructor, options?: ServiceOptions): this;\n    tryAddScoped(servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): this;\n    tryAddScoped(ctor: Constructor, options?: ServiceOptions): this;\n    addSingleton(servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): this;\n    addSingleton(ctor: Constructor, options?: ServiceOptions): this;\n    tryAddSingleton(servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): this;\n    tryAddSingleton(ctor: Constructor, options?: ServiceOptions): this;\n    addTransient(servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): this;\n    addTransient(ctor: Constructor, options?: ServiceOptions): this;\n    tryAddTransient(servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): this;\n    tryAddTransient(ctor: Constructor, options?: ServiceOptions): this;\n}\n\ndeclare module \"../service-collection/service-collection\" {\n    interface ServiceCollection extends IServiceCollectionExtensions { }\n}\n\nfunction createServiceDescriptor(serviceId: ServiceIdentifier, lifetime: ServiceLifetime, ctor: Constructor, { baseArgs = [], delayed = false, scope = ServiceScope.both }: ServiceOptions) {\n    return new ServiceDescriptor(serviceId, lifetime, scope, ctor, baseArgs, delayed);\n}\n\nfunction tryAddServiceInternal($this: ServiceCollection, lifetime: ServiceLifetime, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    if (ServiceIdentifier.is(servicerIdOrCtor)) {\n        if ($this.has(servicerIdOrCtor)) return $this;\n\n        return $this.add(\n            createServiceDescriptor(servicerIdOrCtor, lifetime, ctorOrOptions as Constructor, options ?? {})\n        );\n    }\n    const serviceId = ServiceContract.resolve(servicerIdOrCtor);\n    if ($this.has(serviceId)) return $this;\n\n    return $this.add(\n        createServiceDescriptor(serviceId, lifetime, servicerIdOrCtor as Constructor, ctorOrOptions as ServiceOptions ?? {})\n    );\n}\n\nfunction addServiceInternal($this: ServiceCollection, lifetime: ServiceLifetime, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    if (ServiceIdentifier.is(servicerIdOrCtor)) {\n        return $this.add(\n            createServiceDescriptor(servicerIdOrCtor, lifetime, ctorOrOptions as Constructor, options ?? {})\n        );\n    }\n    const serviceId = ServiceContract.resolve(servicerIdOrCtor);\n    return $this.add(\n        createServiceDescriptor(serviceId, lifetime, servicerIdOrCtor as Constructor, ctorOrOptions as ServiceOptions ?? {})\n    );\n}\n\nfunction addService(this: ServiceCollection, lifetime: ServiceLifetime, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addService(this: ServiceCollection, lifetime: ServiceLifetime, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addService(this: ServiceCollection, lifetime: ServiceLifetime, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, lifetime, servicerIdOrCtor, ctorOrOptions, options);\n}\n\nfunction addScoped(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addScoped(this: ServiceCollection, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addScoped(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, ServiceLifetime.scoped, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction tryAddScoped(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddScoped(this: ServiceCollection, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddScoped(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return tryAddServiceInternal(this, ServiceLifetime.scoped, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction addSingleton(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addSingleton(this: ServiceCollection, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addSingleton(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, ServiceLifetime.singleton, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction tryAddSingleton(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddSingleton(this: ServiceCollection, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddSingleton(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return tryAddServiceInternal(this, ServiceLifetime.singleton, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction addTransient(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addTransient(this: ServiceCollection, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction addTransient(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, ServiceLifetime.transient, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction tryAddTransient(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddTransient(this: ServiceCollection, ctor: Constructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddTransient(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | Constructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return tryAddServiceInternal(this, ServiceLifetime.transient, servicerIdOrCtor, ctorOrOptions, options);\n}\n\nObject.assign(ServiceCollection.prototype, <IServiceCollectionExtensions>{\n    addService,\n    addScoped, tryAddScoped,\n    addSingleton, tryAddSingleton,\n    addTransient, tryAddTransient\n});\n","import { Constructor } from \"@aster-js/core\";\n\nimport { ServiceContract } from \"../service-registry/service-contract\";\nimport { ServiceFactoryConstructor, ServiceFactoryTag } from \"../service-registry/service-factory\";\nimport { ServiceCollection } from \"../service-collection/service-collection\";\n\nimport { ServiceOptions, ServiceLifetime, ServiceScope } from \"./iservice-descriptor\";\nimport { ServiceFactoryDescriptor } from \"./service-factory-descriptor\";\nimport { ServiceIdentifier } from \"../service-registry\";\n\ninterface IServiceCollectionFactoryExtensions {\n    addServiceFactory(lifetime: ServiceLifetime, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\n    addServiceFactory(lifetime: ServiceLifetime, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\n    addScopedFactory(ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    addScopedFactory(servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    tryAddScopedFactory(ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    tryAddScopedFactory(servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    addSingletonFactory(ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    addSingletonFactory(servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    tryAddSingletonFactory(ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    tryAddSingletonFactory(servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    addTransientFactory(ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    addTransientFactory(servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    tryAddTransientFactory(ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n    tryAddTransientFactory(servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): this;\n}\n\ndeclare module \"../service-collection/service-collection\" {\n    interface ServiceCollection extends IServiceCollectionFactoryExtensions { }\n}\n\nfunction createServiceFactoryDescriptor(serviceId: ServiceIdentifier, lifetime: ServiceLifetime, ctor: ServiceFactoryConstructor, { baseArgs = [], delayed = false, scope = ServiceScope.both }: ServiceOptions) {\n    return new ServiceFactoryDescriptor(serviceId, lifetime, scope, ctor, baseArgs, delayed);\n}\n\nfunction tryAddServiceInternal($this: ServiceCollection, lifetime: ServiceLifetime, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    if (ServiceIdentifier.is(servicerIdOrCtor)) {\n        if ($this.has(servicerIdOrCtor)) return $this;\n\n        return $this.add(\n            createServiceFactoryDescriptor(servicerIdOrCtor, lifetime, ctorOrOptions as ServiceFactoryConstructor, options ?? {})\n        );\n    }\n    const serviceId = ServiceFactoryTag.get(servicerIdOrCtor);\n    assertServiceFactoryId(serviceId);\n\n    if ($this.has(serviceId)) return $this;\n\n    return $this.add(\n        createServiceFactoryDescriptor(serviceId, lifetime, servicerIdOrCtor as ServiceFactoryConstructor, ctorOrOptions as ServiceOptions ?? {})\n    );\n}\n\nfunction addServiceInternal($this: ServiceCollection, lifetime: ServiceLifetime, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: Constructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    if (ServiceIdentifier.is(servicerIdOrCtor)) {\n        return $this.add(\n            createServiceFactoryDescriptor(servicerIdOrCtor, lifetime, ctorOrOptions as ServiceFactoryConstructor, options ?? {})\n        );\n    }\n    const serviceId = ServiceFactoryTag.get(servicerIdOrCtor);\n    assertServiceFactoryId(serviceId);\n    return $this.add(\n        createServiceFactoryDescriptor(serviceId, lifetime, servicerIdOrCtor as ServiceFactoryConstructor, ctorOrOptions as ServiceOptions ?? {})\n    );\n}\n\nfunction assertServiceFactoryId(serviceId: ServiceIdentifier | undefined): asserts serviceId is ServiceIdentifier {\n    if (!serviceId) throw new Error(\"No service id attached to the provided factory. Use the @ServiceFactory decorator or provide explicitly the service id\");\n}\n\nfunction addServiceFactory(this: ServiceCollection, lifetime: ServiceLifetime, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addServiceFactory(this: ServiceCollection, lifetime: ServiceLifetime, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addServiceFactory(this: ServiceCollection, lifetime: ServiceLifetime, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: ServiceFactoryConstructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, lifetime, servicerIdOrCtor, ctorOrOptions, options);\n}\n\nfunction addScopedFactory(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addScopedFactory(this: ServiceCollection, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addScopedFactory(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: ServiceFactoryConstructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, ServiceLifetime.scoped, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction tryAddScopedFactory(this: ServiceCollection, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddScopedFactory(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddScopedFactory(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: ServiceFactoryConstructor | ServiceOptions, options?: ServiceOptions) {\n    return tryAddServiceInternal(this, ServiceLifetime.scoped, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction addSingletonFactory(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addSingletonFactory(this: ServiceCollection, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addSingletonFactory(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: ServiceFactoryConstructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, ServiceLifetime.singleton, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction tryAddSingletonFactory(this: ServiceCollection, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddSingletonFactory(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddSingletonFactory(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: ServiceFactoryConstructor | ServiceOptions, options?: ServiceOptions) {\n    return tryAddServiceInternal(this, ServiceLifetime.singleton, servicerIdOrCtor, ctorOrOptions, options);\n}\n\nfunction addTransientFactory(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addTransientFactory(this: ServiceCollection, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction addTransientFactory(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: ServiceFactoryConstructor | ServiceOptions, options?: ServiceOptions): ServiceCollection {\n    return addServiceInternal(this, ServiceLifetime.transient, servicerIdOrCtor, ctorOrOptions, options);\n}\nfunction tryAddTransientFactory(this: ServiceCollection, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddTransientFactory(this: ServiceCollection, servicerId: ServiceIdentifier, ctor: ServiceFactoryConstructor, options?: ServiceOptions): ServiceCollection;\nfunction tryAddTransientFactory(this: ServiceCollection, servicerIdOrCtor: ServiceIdentifier | ServiceFactoryConstructor, ctorOrOptions?: ServiceFactoryConstructor | ServiceOptions, options?: ServiceOptions) {\n    return tryAddServiceInternal(this, ServiceLifetime.transient, servicerIdOrCtor, ctorOrOptions, options);\n}\n\n\nObject.assign(ServiceCollection.prototype, <IServiceCollectionFactoryExtensions>{\n    addServiceFactory,\n    addScopedFactory, tryAddScopedFactory,\n    addSingletonFactory, tryAddSingletonFactory,\n    addTransientFactory, tryAddTransientFactory\n});\n","import { Constructor } from \"@aster-js/core\";\n\nimport { ServiceContract } from \"../service-registry/service-contract\";\nimport { IServiceFactory, ServiceFactoryConstructor, ServiceFactoryTag } from \"../service-registry/service-factory\";\nimport { ServiceCollection } from \"../service-collection/service-collection\";\n\nimport { ServiceOptions, ServiceLifetime, ServiceScope } from \"./iservice-descriptor\";\nimport { ServiceFactoryDescriptor } from \"./service-factory-descriptor\";\nimport { resolveServiceId, ServiceIdentifier } from \"../service-registry\";\n\ninterface IServiceCollectionInstanceExtensions {\n    /** Add the provided instance as a singleton */\n    addInstance(instance: any, options?: ServiceOptions): ServiceCollection;\n    /** Add the provided instance as a singleton */\n    addInstance(serviceId: ServiceIdentifier, instance: any, options?: ServiceOptions): ServiceCollection;\n}\n\ndeclare module \"../service-collection/service-collection\" {\n    interface ServiceCollection extends IServiceCollectionInstanceExtensions { }\n}\n\n\nfunction addInstance(this: ServiceCollection, instance: any, options?: Omit<ServiceOptions, \"baseArgs\">): ServiceCollection;\nfunction addInstance(this: ServiceCollection, serviceId: ServiceIdentifier, instance: any, options?: Omit<ServiceOptions, \"baseArgs\">): ServiceCollection;\nfunction addInstance(this: ServiceCollection, servicerIdOrInstance: any, instanceOrOptions?: any, options: Omit<ServiceOptions, \"baseArgs\"> = {}) {\n    let instance: any;\n    let serviceId: ServiceIdentifier;\n    if (ServiceIdentifier.is(servicerIdOrInstance)) {\n        serviceId = servicerIdOrInstance;\n        instance = instanceOrOptions;\n    }\n    else {\n        instance = servicerIdOrInstance;\n        serviceId = resolveServiceId(instance.constructor);\n    }\n\n    const { delayed = false, scope = ServiceScope.both } = options;\n\n    class CustomInstanceServiceFactory implements IServiceFactory {\n        static readonly targetType: Constructor = instance.constructor;\n        create(): any { return instance; }\n    }\n\n    const desc = new ServiceFactoryDescriptor(\n        serviceId,\n        ServiceLifetime.singleton,\n        scope,\n        CustomInstanceServiceFactory,\n        [],\n        delayed\n    );\n    return this.add(desc);\n}\n\nObject.assign(ServiceCollection.prototype, <IServiceCollectionInstanceExtensions>{\n    addInstance\n});\n","import { Constructor } from \"@aster-js/core\";\n\nimport { IServiceDescriptor } from \"../service-descriptors\";\nimport { ServiceIdentifier } from \"../service-registry\";\n\nexport const IServiceProvider = ServiceIdentifier<IServiceProvider>(\"IServiceProvider\");\n\nexport interface IServiceProvider {\n    parent(): IServiceProvider | undefined;\n    getOwnDescriptors(serviceId: ServiceIdentifier): Iterable<IServiceDescriptor>;\n    getOwnInstance(desc: IServiceDescriptor): any;\n    createInstance<T>(ctor: Constructor<T>, ...baseArgs: ReadonlyArray<any>): T;\n    resolve(ctor: Constructor): Constructor;\n    get<T>(serviceId: ServiceIdentifier<T>, required: true): T;\n    get<T>(serviceId: ServiceIdentifier<T> | IServiceDescriptor, required?: boolean): T | undefined;\n    getAll<T>(serviceId: ServiceIdentifier<T>, currentScopeOnly?: boolean): Iterable<T>;\n}\n","import { DisposableHost } from \"@aster-js/core\";\n\nconst ProxyInstance = Symbol();\n\nexport function isServiceProxy(proxy: any) {\n    return typeof proxy[ProxyInstance] !== \"undefined\";\n}\n\nexport function isServiceProxyFor(proxy: any, expectedSource: any) {\n    return proxy[ProxyInstance] === expectedSource;\n}\n\nexport class ServiceProxy<T = any> extends DisposableHost implements ProxyHandler<any> {\n    private readonly _proxy: T;\n    private readonly _service: T;\n    private readonly _revoke: Function;\n\n    get proxy(): T { return this._proxy; }\n\n    constructor(service: T) {\n        super();\n        const { proxy, revoke } = Proxy.revocable(service, this);\n        this._proxy = proxy;\n        this._service = service;\n        this._revoke = revoke;\n    }\n\n    has(target: any, p: PropertyKey): boolean {\n        return p in target;\n    }\n\n    get(target: any, p: PropertyKey): any {\n        if (p === ProxyInstance) return this._service;\n\n        const value = target[p];\n        if (typeof value === \"function\") {\n            return (...args: any[]) => {\n                const r = value.apply(target, args);\n                return r === target ? this._proxy : r;\n            };\n        }\n        return value;\n    }\n\n    set(target: any, p: PropertyKey, value: any): boolean {\n        target[p] = value;\n        return true;\n    }\n\n    deleteProperty(target: any, p: PropertyKey): boolean {\n        delete target[p];\n        return true;\n    }\n\n    getPrototypeOf(target: T): any {\n        return Object.getPrototypeOf(target);\n    }\n\n    protected dispose(): void {\n        this._revoke();\n    }\n}\n","import { DisposableHost, IDisposable } from \"@aster-js/core\";\n\nimport { ServiceContract, ServiceIdentifier } from \"../service-registry\";\n\nimport { IServiceProvider } from \"./iservice-provider\";\nimport { IServiceAccessor } from \"./iservice-accessor\";\nimport { ServiceProxy } from \"./service-proxy\";\nimport { HashMap } from \"@aster-js/collections\";\n\n@ServiceContract(IServiceAccessor)\nexport class ServiceAccessor extends DisposableHost implements IServiceAccessor {\n    private readonly _proxies: HashMap<any, ServiceProxy>;\n\n    constructor(\n        @IServiceProvider private readonly _serviceProvider: IServiceProvider\n    ) {\n        super();\n        this._proxies = new HashMap();\n    }\n\n    get<T>(serviceId: ServiceIdentifier<T>, required: true): T;\n    get<T>(serviceId: ServiceIdentifier<T>, required?: boolean): T | undefined;\n    get(serviceId: ServiceIdentifier, required?: boolean): any {\n        this.checkIfDisposed();\n\n        const instance = this._serviceProvider.get(serviceId, required);\n        if (instance) return this.getProxy(instance);\n    }\n\n    *getMany<T>(serviceId: ServiceIdentifier<T>, currentScopeOnly?: boolean): Iterable<T> {\n        this.checkIfDisposed();\n\n        for (const instance of this._serviceProvider.getAll(serviceId, currentScopeOnly)) {\n            yield this.getProxy(instance);\n        }\n    }\n\n    private getProxy(instance: any): any {\n        const serviceProxy = this._proxies.getOrSet(instance, () => new ServiceProxy(instance));\n        return serviceProxy?.proxy;\n    }\n\n\n    protected dispose(): void {\n        const proxies = this._proxies.values();\n        IDisposable.safeDisposeAll(proxies);\n    }\n}\n","import { ServiceIdentifier } from \"../service-registry\";\n\nimport { IServiceDependency, ServiceEntry } from \"./service-entry\";\nimport { TopologicalGraph } from \"@aster-js/iterators\";\nimport { Constructor } from \"@aster-js/core\";\nimport { ServiceProvider } from \"./service-provider\";\nimport { IServiceDescriptor } from \"../service-descriptors\";\n\nexport const IDependencyResolver = ServiceIdentifier<IDependencyResolver>(\"IDependencyResolver\");\n\n/**\n * Provides methods to retrieve service descriptors and ressolving dependencies\n */\nexport interface IDependencyResolver {\n    resolveProviders(serviceId: ServiceIdentifier): Iterable<ServiceProvider>;\n\n    resolveEntry(descriptorOrId: ServiceIdentifier | IServiceDescriptor): ServiceEntry | undefined;\n\n    resolveEntries(serviceId: ServiceIdentifier): Iterable<ServiceEntry>;\n\n    resolveDependencies(ctor: Constructor): Iterable<IServiceDependency>;\n\n    resolveDependencyGraph(entry: ServiceEntry): TopologicalGraph<ServiceEntry>;\n}\n","import { IEvent } from \"@aster-js/events\";\n\nimport { IServiceDescriptor } from \"../service-descriptors\";\nimport { ServiceIdentifier } from \"../service-registry\";\nimport { ServiceEntry } from \"./service-entry\";\nimport { InstantiationContext } from \"./instantiation-context\";\n\nexport const IInstantiationService = ServiceIdentifier<IInstantiationService>(\"IInstantiationService\");\n\n/** Provides methods to retrieve services and resolving dependencies */\nexport interface IInstantiationService {\n\n    readonly onDidServiceInstantiated: IEvent<[desc: IServiceDescriptor, instance: any]>;\n    createService(desc: IServiceDescriptor): any;\n    instanciateService(entry: ServiceEntry, ctx: InstantiationContext): void\n}\n","import { IDisposable } from \"@aster-js/core\";\nimport { IEvent } from \"./ievent\";\n\ntype Next<T> = (args: T) => void;\n\nexport class AsyncEventIterator<T extends any[] = []> implements AsyncIterator<T>, IDisposable {\n    private readonly _queueMaxSize: number;\n    private _handle: IDisposable | null;\n    private _next: Next<T> | null;\n    private _pendingQueue: T[] | null;\n\n    constructor(target: IEvent<T, boolean>, queueMaxSize: number) {\n        this._handle = target(this.onDidEventEmitted as any, this);\n        this._queueMaxSize = queueMaxSize;\n        this._next = null;\n        this._pendingQueue = [];\n    }\n\n    protected onDidEventEmitted(...args: T): void {\n        const next = this._next;\n        if (next) {\n            this._next = null;\n            next(args);\n        }\n        else if (this._pendingQueue) {\n            if (this._queueMaxSize !== -1 && this._pendingQueue.length >= this._queueMaxSize) {\n                throw new Error(`Event iterator queue max size reached: ${this._queueMaxSize} are pending`);\n            }\n            this._pendingQueue.push(args);\n        }\n    }\n\n    next(): Promise<IteratorResult<T>> {\n        if (!this._pendingQueue) throw new Error(\"Cannot reuse a terminated iterator\");\n\n        if (this._pendingQueue.length) {\n            return Promise.resolve({\n                value: this._pendingQueue.shift()!,\n                done: false\n            });\n        }\n\n        return new Promise(resolve => {\n            this._next = (args) => {\n                resolve({\n                    value: args,\n                    done: false\n                });\n            }\n        });\n    }\n\n    async return(): Promise<IteratorResult<T>> {\n        this.dispose();\n        return {\n            value: null,\n            done: true\n        };\n    }\n\n    [IDisposable.dispose](): void {\n        if (this._handle) {\n            this.dispose();\n        }\n    }\n\n    protected dispose(): void {\n        IDisposable.safeDispose(this._handle);\n        this._handle = null;\n        this._pendingQueue = null;\n    }\n}\n","import { DisposableHost, IDisposable } from \"@aster-js/core\";\nimport { AsyncEventIterator } from \"./async-event-iterator\";\nimport { AsyncEventHandler, EventHandler, IAsyncEventEmitter, IEventEmitter } from \"./ievent-emitter\";\n\nexport type SyncEvent<T extends any[] = []> = AsyncIterable<T> & {\n    readonly async: undefined;\n    (handler: EventHandler<T>, thisArgs?: any): IDisposable;\n}\n\n/**\n * Async event allow\n */\nexport type AsyncEvent<T extends any[] = []> = AsyncIterable<T> & {\n    readonly async: true;\n    (handler: AsyncEventHandler<T>, thisArgs?: any): IDisposable;\n}\n\nexport type IEvent<T extends any[] = [], Async extends boolean = false> = Async extends true ? AsyncEvent<T> : SyncEvent<T>;\n\nexport namespace IEvent {\n\n    export function create<T extends any[] = []>(emitter: IEventEmitter<T>): SyncEvent<T>;\n    export function create<T extends any[] = []>(emitter: IAsyncEventEmitter<T>): AsyncEvent<T>;\n    export function create<T extends any[] = []>(emitter: IAsyncEventEmitter<T> | IEventEmitter<T>): IEvent<T, boolean> {\n        const event = ((handler: (...args: any) => any, thisArgs?: any) => {\n            handler = thisArgs ? handler.bind(thisArgs) : handler;\n            emitter.addHandler(handler);\n\n            const result = IDisposable.create(() => emitter.removeHandler(handler));\n            if (thisArgs instanceof DisposableHost) {\n                thisArgs.registerForDispose(result);\n            }\n            return result;\n        }) as IEvent<T, boolean>;\n\n        Reflect.set(event, Symbol.asyncIterator, () => new AsyncEventIterator(event, emitter.iteratorQueueMaxSize));\n\n        if (emitter.async) Reflect.set(event, \"async\", true);\n\n        return event;\n    }\n\n    /**\n     * Returns the next event arguments passed to the provided event\n     * @param event Event to listen\n     * @returns Arguments passed to the emitter\n     */\n    export function next<T extends any[] = []>(event: IEvent<T, boolean>): Promise<T> {\n        return new Promise<T>((f) => {\n            const handler = event.async\n                ? event(async (...args) => {\n                    IDisposable.safeDispose(handler);\n                    f(args);\n                })\n                : event((...args) => {\n                    IDisposable.safeDispose(handler);\n                    f(args);\n                });\n        });\n    }\n\n    /**\n     * Listen and trigger the provided callback once and remove imediatly the listener to avoir further calls\n     * @param event Event to listen\n     * @param callback Callback to call once\n     * @param thisArgs This context\n     */\n    export function once<T extends any[] = []>(event: IEvent<T, boolean>, callback: EventHandler<T> | AsyncEventHandler<T>, thisArgs?: any): void {\n        const handler = event.async\n            ? event(async (...args) => {\n                IDisposable.safeDispose(handler);\n                await (callback as AsyncEventHandler<T>).call(thisArgs, ...args);\n            })\n            : event((...args) => {\n                IDisposable.safeDispose(handler);\n                (callback as EventHandler<T>).call(thisArgs, ...args);\n            });\n    }\n}\n","\nexport const Memoize: MethodDecorator = (_: Object, propertyKey: PropertyKey, desc: PropertyDescriptor) => {\n    if (typeof desc?.get !== \"function\") {\n        throw new Error(`Invalid \"@Memoize\" target: \"${String(propertyKey)}\" is not a get accessor.`);\n    }\n\n    desc.get = createGetter(propertyKey, desc.get);\n    delete desc.set;\n};\n\nfunction createGetter(propertyKey: PropertyKey, valueFactory: () => any): () => any {\n    const privateProp = Symbol(String(propertyKey));\n\n    return function (this: any): any {\n        if (!Reflect.has(this, privateProp)) {\n            const value = valueFactory.apply(this);\n            if (!Reflect.set(this, privateProp, value)) {\n                console.warn(`\"@Memoize\" cannot work properly on following instance, cannot memoize the value`, this);\n            }\n            return value;\n        }\n        return Reflect.get(this, privateProp);\n    };\n}\n","import { DisposableHost } from \"@aster-js/core\";\n\nconst MAX_LISTENERS = 16;\nconst DISABLED_MAX = -1;\n\nexport class EventEmitterBase<T extends (...args: any[]) => any> extends DisposableHost {\n    private _handlers?: T[];\n    private readonly _maxSize?: number;\n    private readonly _iteratorQueueMaxSize?: number;\n\n    get size(): number { return this._handlers ? this._handlers.length : 0; }\n\n    get maxSize(): number { return this._maxSize ?? MAX_LISTENERS; }\n\n    get iteratorQueueMaxSize(): number { return this._iteratorQueueMaxSize ?? DISABLED_MAX; }\n\n    constructor(options?: { maxSize?: number, iteratorQueueMaxSize?: number }) {\n        super();\n        if (options) {\n            if (typeof options.maxSize === \"number\") {\n                this._maxSize = options.maxSize;\n            }\n            if (typeof options.iteratorQueueMaxSize === \"number\") {\n                this._iteratorQueueMaxSize = options.iteratorQueueMaxSize;\n            }\n        }\n    }\n\n    *handlers(): IterableIterator<T> {\n        if (this._handlers) {\n            yield* this._handlers;\n        }\n    }\n\n    addHandler(handler: T): void {\n        this.checkIfDisposed();\n        if (this.maxSize !== DISABLED_MAX && this.size >= this.maxSize) {\n            throw new Error(`Event max size reached: ${this.maxSize}`);\n        }\n\n        if (this._handlers) {\n            this._handlers.push(handler);\n        }\n        else {\n            this._handlers = [handler];\n        }\n    }\n\n    removeHandler(handler: T): void {\n        if (this._handlers) {\n            const idx = this._handlers.indexOf(handler);\n            if (idx !== -1) this._handlers.splice(idx, 1);\n        }\n    }\n\n    protected dispose(): void {\n        delete this._handlers;\n    }\n}\n","import { Memoize } from \"@aster-js/decorators\";\nimport { EventEmitterBase } from \"./event-emitter-base\";\n\nimport { IEvent } from \"./ievent\";\nimport { EventHandler, IEventEmitter } from \"./ievent-emitter\";\n\nexport class EventEmitter<T extends any[] = []> extends EventEmitterBase<EventHandler<T>> implements IEventEmitter<T> {\n\n    readonly async: undefined;\n\n    @Memoize get event(): IEvent<T> { return IEvent.create(this); }\n\n    emit(...args: T): void {\n        for (const callback of this.handlers()) {\n            if (callback(...args) === false) break;\n        }\n    }\n}\n","import { Memoize } from \"@aster-js/decorators\";\nimport { EventEmitterBase } from \"./event-emitter-base\";\n\nimport { IEvent } from \"./ievent\";\nimport { AsyncEventHandler, IAsyncEventEmitter } from \"./ievent-emitter\";\n\nexport class AsyncEventEmitter<T extends any[] = []> extends EventEmitterBase<AsyncEventHandler<T>> implements IAsyncEventEmitter<T> {\n\n    get async(): true { return true; }\n\n    @Memoize get event(): IEvent<T, true> { return IEvent.create(this); }\n\n    async emit(...args: T): Promise<void> {\n        for (const callback of this.handlers()) {\n            if (await callback(...args) === false) break;\n        }\n    }\n}\n","import { HashMap } from \"@aster-js/collections\";\nimport { ServiceEntry } from \"./service-entry\";\n\nexport class InstantiationContext {\n    private readonly _instances: HashMap<ServiceEntry, any>;\n\n    constructor(\n        readonly target: ServiceEntry\n    ) {\n        this._instances = new HashMap(e => e.uid);\n    }\n\n    setInstance(entry: ServiceEntry, instance: any): void {\n        this._instances.set(entry, instance);\n    }\n\n    getInstance(entry: ServiceEntry): any {\n        return this._instances.get(entry);\n    }\n}\n","import { Tags } from \"@aster-js/core\";\nimport { IServiceDescriptor } from \"../service-descriptors\";\nimport { DependencyParameter } from \"../service-registry\";\nimport { InstantiationContext } from \"./instantiation-context\";\n\nimport { ServiceProvider } from \"./service-provider\";\n\nexport interface IServiceDependency {\n    readonly param: DependencyParameter;\n\n    resolveArg(ctx?: InstantiationContext): any;\n\n    entries(): Iterable<ServiceEntry>;\n}\n\nexport type ServiceEntry = {\n\n    readonly uid: string;\n\n    readonly desc: IServiceDescriptor;\n\n    readonly provider: ServiceProvider;\n\n    readonly dependencies?: IServiceDependency[];\n}\n\nexport namespace ServiceEntry {\n    export function create(desc: IServiceDescriptor, provider: ServiceProvider): ServiceEntry {\n        const uid = `${Tags.hashId(desc)}-${Tags.hashId(provider)}`;\n        return { uid, desc, provider };\n    }\n    export function getScopeInstance({ desc, provider }: ServiceEntry): any {\n        return provider.getOwnInstance(desc);\n    }\n}\n","import { ServiceIdentifier } from \"../service-registry\";\n\nexport class InstantiationError extends Error {\n    constructor(serviceId: ServiceIdentifier, err: Error) {\n        super(`Error during service instanciation for service id: ${serviceId}`, { cause: err });\n    }\n}\n","import { IDisposable, Lazy, asserts, Constructor } from \"@aster-js/core\";\nimport { EventEmitter, IEvent } from \"@aster-js/events\";\n\nimport { IServiceFactory, ServiceContract, ServiceIdentifier } from \"../service-registry\";\nimport { IServiceDescriptor, ServiceFactoryDescriptor } from \"../service-descriptors\";\n\nimport { IDependencyResolver } from \"./idependency-resolver\";\nimport { IInstantiationService } from \"./iinstantiation-service\";\nimport { InstantiationContext } from \"./instantiation-context\";\nimport { ServiceEntry } from \"./service-entry\";\nimport { InstantiationError } from \"./instantiation-error\";\n\n@ServiceContract(IInstantiationService)\nexport class InstantiationService implements IInstantiationService {\n    private readonly _onDidServiceInstantiated: EventEmitter<[desc: IServiceDescriptor, instance: any]> = new EventEmitter();\n\n    get onDidServiceInstantiated(): IEvent<[desc: IServiceDescriptor, instance: any]> { return this._onDidServiceInstantiated.event; }\n\n    constructor(\n        @IDependencyResolver private readonly _dependencyResolver: IDependencyResolver\n    ) { }\n\n    createService(desc: IServiceDescriptor): any {\n        const entry = this._dependencyResolver.resolveEntry(desc);\n        if (entry) {\n            if (!entry.desc.delayed) {\n                return this.createServiceCore(entry);\n            }\n            return this.createDelayedService(entry);\n        }\n    }\n\n    private createServiceCore(entry: ServiceEntry): any {\n        const ctx = this.instanciateDependencyGraph(entry);\n        return ctx.getInstance(entry);\n    }\n\n    private createDelayedService(entry: ServiceEntry): any {\n        const lazyValue = new Lazy(() => this.createServiceCore(entry), entry.desc.ctor);\n        const proxy = lazyValue.get();\n        this.onInstanceCreated(entry.desc, proxy);\n        return proxy;\n    }\n\n    instanciateService(entry: ServiceEntry, ctx: InstantiationContext): void {\n        const instance = entry.desc.delayed && ctx.target.uid !== entry.uid\n            ? this.createDelayedService(entry)\n            : this.createServiceInstance(entry, ctx);\n        ctx.setInstance(entry, instance);\n    }\n\n    private instanciateDependencyGraph(entry: ServiceEntry): InstantiationContext {\n        const graph = this._dependencyResolver.resolveDependencyGraph(entry);\n\n        const ctx = new InstantiationContext(entry);\n\n        const resolved = new Set();\n        for (const node of graph.nodes()) {\n            const instance = ServiceEntry.getScopeInstance(node);\n            if (instance) {\n                ctx.setInstance(node, instance);\n                resolved.add(node);\n            }\n            else if (node.desc.delayed) {\n                this.instanciateDependency(node, ctx);\n                resolved.add(node);\n            }\n        }\n\n        for (const node of graph) {\n            if (resolved.has(node) && node.uid !== entry.uid) continue;\n            this.instanciateDependency(node, ctx);\n        }\n\n        return ctx;\n    }\n\n    private instanciateDependency(entry: ServiceEntry, ctx: InstantiationContext): void {\n        const instantiationSvc = entry.provider.get(IInstantiationService, true);\n        instantiationSvc.instanciateService(entry, ctx);\n    }\n\n    private createServiceInstance(entry: ServiceEntry, ctx: InstantiationContext): any {\n        asserts.defined(entry.dependencies);\n\n        const dependencies = entry.dependencies.map(dep => dep.resolveArg(ctx));\n        let instance = this.createInstance(entry.desc.serviceId, entry.desc.ctor, [...entry.desc.baseArgs, ...dependencies]);\n\n        if (entry.desc instanceof ServiceFactoryDescriptor) {\n            const factory = instance as IServiceFactory;\n\n            const lazyValue = new Lazy(\n                () => {\n                    const instance = factory.create();\n                    try {\n                        if (instance instanceof Promise) {\n                            throw new Error(`ServiceFactory cannot return async results (${entry.desc.serviceId}`);\n                        }\n                    }\n                    finally {\n                        IDisposable.safeDispose(factory);\n                    }\n\n                    this.onInstanceCreated(entry.desc, instance);\n                    return instance;\n                },\n                entry.desc.targetType\n            );\n\n            instance = lazyValue.get();\n        }\n\n        this.onInstanceCreated(entry.desc, instance);\n        return instance;\n    }\n\n    private createInstance(serviceId: ServiceIdentifier, ctor: Constructor, args: any[]): any {\n        try {\n            return new ctor(...args);\n        }\n        catch (err) {\n            if(err instanceof Error){\n                throw new InstantiationError(serviceId, err);\n            }\n            else{\n                const wrap = new Error(String(err));\n                throw new InstantiationError(serviceId, wrap);\n            }\n        }\n    }\n\n    private onInstanceCreated(desc: IServiceDescriptor, instance: any): void {\n        this._onDidServiceInstantiated.emit(desc, instance);\n    }\n}\n","import { DependencyParameter } from \"../service-registry\";\nimport { InstantiationContext } from \"./instantiation-context\";\n\nimport { IServiceDependency, ServiceEntry } from \"./service-entry\";\n\nexport class EmptyServiceDependency implements IServiceDependency {\n    constructor(\n        readonly param: DependencyParameter\n    ) { }\n\n    resolveArg(_ctx?: InstantiationContext): any { }\n\n    *entries(): Iterable<ServiceEntry> { }\n}\n\nexport class SingleServiceDependency implements IServiceDependency {\n    constructor(\n        readonly param: DependencyParameter,\n        private readonly _entry: ServiceEntry\n    ) { }\n\n    resolveArg(ctx?: InstantiationContext): any {\n        if (ctx) {\n            return ctx.getInstance(this._entry);\n        }\n        return this._entry.provider.get(this._entry.desc);\n    }\n\n    getDependencyArg(_ctx: InstantiationContext): any { }\n\n    *entries(): Iterable<ServiceEntry> {\n        yield this._entry;\n    }\n}\n\nexport class MultipleServiceDependency implements IServiceDependency {\n    private readonly _entries: ServiceEntry[];\n\n    constructor(\n        readonly param: DependencyParameter,\n        entries: Iterable<ServiceEntry>\n    ) {\n        this._entries = [...entries];\n    }\n\n    resolveArg(ctx?: InstantiationContext): any {\n        if (ctx) {\n            return this._entries.map(e => ctx.getInstance(e));\n        }\n        return this._entries.map(e => e.provider.get(e.desc));\n    }\n\n    *entries(): Iterable<ServiceEntry> {\n        yield* this._entries;\n    }\n}\n","import { Constructor } from \"@aster-js/core\";\nimport { TopologicalGraph, Iterables } from \"@aster-js/iterators\";\n\nimport { ServiceContract, ServiceIdentifier, isAllowedScope } from \"../service-registry\";\nimport { IServiceDescriptor, ServiceLifetime } from \"../service-descriptors\";\n\nimport { IDependencyResolver } from \"./idependency-resolver\";\nimport { IServiceDependency, ServiceEntry } from \"./service-entry\";\nimport { MultipleServiceDependency, EmptyServiceDependency, SingleServiceDependency } from \"./dependency-entry\";\nimport { ServiceProvider } from \"./service-provider\";\n\n@ServiceContract(IDependencyResolver)\nexport class DependencyResolver implements IDependencyResolver {\n\n    constructor(\n        private readonly _serviceProvider: ServiceProvider\n    ) { }\n\n    *resolveProviders(serviceId: ServiceIdentifier): Iterable<ServiceProvider> {\n        for (const svc of Iterables.create(this._serviceProvider, prev => prev.parent())) {\n            const descriptors = svc.getOwnDescriptors(serviceId);\n            if (Iterables.has(descriptors)) {\n                yield svc;\n            }\n        }\n    }\n\n    resolveEntry(descriptorOrId: ServiceIdentifier | IServiceDescriptor): ServiceEntry | undefined {\n        if (ServiceIdentifier.is(descriptorOrId)) {\n            const all = this.resolveEntries(<ServiceIdentifier>descriptorOrId);\n            return Iterables.first(all);\n        }\n        else {\n            const all = this.resolveEntries((<IServiceDescriptor>descriptorOrId).serviceId);\n            return Iterables.first(all, entry => entry.desc === descriptorOrId);\n        }\n    }\n\n    *resolveEntries(serviceId: ServiceIdentifier): Iterable<ServiceEntry> {\n        for (const svc of Iterables.create(this._serviceProvider, prev => prev.parent())) {\n            for (const desc of svc.getOwnDescriptors(serviceId)) {\n                if (isAllowedScope(desc.scope, svc === this._serviceProvider)) {\n                    const provider = desc.lifetime === ServiceLifetime.scoped ? this._serviceProvider : svc;\n                    yield ServiceEntry.create(desc, provider);\n                }\n            }\n        }\n    }\n\n    *resolveDependencies(ctor: Constructor): Iterable<IServiceDependency> {\n        for (const param of ServiceIdentifier.registry.dependencies(ctor)) {\n            if (param.type === \"many\") {\n                const entries = this.resolveEntries(param.serviceId);\n                yield new MultipleServiceDependency(param, entries)\n            }\n            else {\n                const found = this.resolveEntry(param.serviceId);\n                if (found) {\n                    yield new SingleServiceDependency(param, found);\n                }\n                else if (param.type === \"required\") {\n                    throw new Error(`No service named \"${param.serviceId}\" registered`);\n                }\n                else {\n                    yield new EmptyServiceDependency(param);\n                }\n            }\n        }\n    }\n\n    resolveDependencyGraph(entry: ServiceEntry): TopologicalGraph<ServiceEntry> {\n        const graph = new TopologicalGraph<ServiceEntry>(entry => entry.uid);\n\n        const stack: ServiceEntry[] = [entry];\n        do {\n            const entry = stack.pop()!;\n\n            // Get the dependency resolver from the scope of the service\n            const dependencyResolver = entry.provider.get(IDependencyResolver, true);\n\n            const dependencies = [...dependencyResolver.resolveDependencies(entry.desc.ctor)];\n\n            const serviceEntries = dependencies.flatMap(dep => [...dep.entries()]);\n            graph.add({ ...entry, dependencies }, ...serviceEntries);\n\n            const serviceToResolve = serviceEntries\n                .filter(e => !graph.has(e) && !e.desc.delayed && !ServiceEntry.getScopeInstance(e));\n            stack.push(...serviceToResolve);\n        }\n        while (stack.length);\n\n        return graph;\n    }\n}\n","import { Constructor, IDisposable } from \"@aster-js/core\";\nimport { Iterables } from \"@aster-js/iterators\";\n\nimport { ServiceIdentifier, ServiceContract, isAllowedScope } from \"../service-registry\";\nimport { IServiceCollection } from \"../service-collection\";\nimport { IServiceDescriptor, ServiceDescriptor, ServiceLifetime, ServiceScope } from \"../service-descriptors\";\n\nimport { IServiceProvider, } from \"./iservice-provider\";\nimport { IDependencyResolver } from \"./idependency-resolver\";\nimport { IInstantiationService } from \"./iinstantiation-service\";\nimport { InstantiationService } from \"./instantiation-service\";\nimport { DependencyResolver } from \"./dependency-resolver\";\n\n@ServiceContract(IServiceProvider)\nexport class ServiceProvider implements IServiceProvider, IDisposable {\n    private readonly _instances: Map<IServiceDescriptor, any>;\n    private readonly _dependencyResolver: IDependencyResolver;\n    private readonly _instanciationService: IInstantiationService;\n\n    constructor(\n        private readonly _services: IServiceCollection,\n        private readonly _parent?: ServiceProvider\n    ) {\n        this._instances = new Map();\n        this._dependencyResolver = this.createDependencyResolver();\n        this._instanciationService = this.createInstanciationService();\n        this._instanciationService.onDidServiceInstantiated(this.onDidServiceInstantiated, this);\n\n        this.addCoreService(IDependencyResolver, this._dependencyResolver);\n        this.addCoreService(IInstantiationService, this._instanciationService);\n        this.addCoreService(IServiceProvider, this);\n    }\n\n    protected createDependencyResolver(): DependencyResolver {\n        return new DependencyResolver(this);\n    }\n\n    protected createInstanciationService(): IInstantiationService {\n        return new InstantiationService(this._dependencyResolver);\n    }\n\n    protected addCoreService<T extends Object>(serviceId: ServiceIdentifier<T>, instance: T): void {\n        const desc = new ServiceDescriptor(serviceId, ServiceLifetime.scoped, ServiceScope.container, instance.constructor as Constructor, [], false);\n        this._services.add(desc);\n        this._instances.set(desc, instance);\n    }\n\n    protected onDidServiceInstantiated(desc: IServiceDescriptor, instance: any) {\n        if (desc.lifetime !== ServiceLifetime.transient) {\n            this._instances.set(desc, instance);\n        }\n    }\n\n    createInstance<T>(ctor: Constructor<T>, ...baseArgs: readonly any[]): T {\n        const args = this.resolveArgs(ctor, baseArgs);\n        return new ctor(...args);\n    }\n\n    resolve(ctor: Constructor): Constructor {\n        const resolveArgs = (baseArgs: readonly any[]) => this.resolveArgs(ctor, baseArgs);\n        return class extends ctor {\n            constructor(...baseArgs: any[]) {\n                super(...resolveArgs(baseArgs));\n                this.injectedCallback && this.injectedCallback();\n            }\n        } as Constructor;\n    }\n\n    private *resolveArgs(ctor: Constructor, baseArgs: readonly any[]): Iterable<any> {\n        const dependencies = [...this._dependencyResolver.resolveDependencies(ctor)];\n        if (!dependencies.length) return baseArgs;\n\n        const [first] = dependencies;\n        if (baseArgs.length !== first.param.index) {\n            throw new Error(`Invalid base arguments, expected ${first.param.index} arguments, provided ${baseArgs.length}`);\n        }\n\n        yield* baseArgs;\n\n        for (const dependency of dependencies) {\n            yield dependency.resolveArg();\n        }\n    }\n\n    parent(): ServiceProvider | undefined {\n        return this._parent;\n    }\n\n    getOwnDescriptors(serviceId: ServiceIdentifier): Iterable<IServiceDescriptor> {\n        return this._services.get(serviceId);\n    }\n\n    getOwnInstance(desc: IServiceDescriptor): any {\n        return this._instances.get(desc);\n    }\n\n    get<T>(serviceId: ServiceIdentifier<T>, required: true, currentScopeOnly?: boolean): T;\n    get<T>(serviceId: ServiceIdentifier<T> | IServiceDescriptor, required?: boolean, currentScopeOnly?: boolean): T | undefined;\n    get<T>(descriptorOrId: ServiceIdentifier | IServiceDescriptor, required: boolean = false, currentScopeOnly: boolean = false): T | undefined {\n        // Owned descriptor\n        if (ServiceIdentifier.is(descriptorOrId)) {\n            const descriptors = this._services.get(descriptorOrId as ServiceIdentifier);\n\n            const first = Iterables.first(descriptors);\n            if (first) {\n                return this.fetchOrCreateOwnInstance(first, required, true);\n            }\n        }\n        else if (this._services.has(descriptorOrId)) {\n            return this.fetchOrCreateOwnInstance(descriptorOrId as IServiceDescriptor, required, true);\n        }\n\n        if (!currentScopeOnly) {\n            // Not owned descriptor\n            const entry = this._dependencyResolver.resolveEntry(descriptorOrId);\n            if (entry) {\n                return entry.provider.fetchOrCreateOwnInstance(entry.desc, required, false);\n            }\n        }\n\n        if (required) throw new Error(`No binding found for \"${descriptorOrId}\" from current scope.`);\n    }\n\n    *getAll<T>(serviceId: ServiceIdentifier<T>, currentScopeOnly?: boolean): Iterable<T> {\n        if (currentScopeOnly) {\n            const descriptors = this._services.get(serviceId);\n            yield* this.fetchOrCreateOwnInstances(descriptors);\n        }\n        else {\n            for (const provider of this._dependencyResolver.resolveProviders(serviceId)) {\n                if (provider === this) {\n                    const descriptors = this._services.get(serviceId);\n                    yield* this.fetchOrCreateOwnInstances(descriptors);\n                }\n                else {\n                    const descriptors = Iterables.filter(\n                        this._services.get(serviceId),\n                        x => (x.scope & ServiceScope.children) === ServiceScope.children\n                    );\n                    yield* this.fetchOrCreateOwnInstances(descriptors);\n                }\n            }\n        }\n    }\n\n    protected fetchOrCreateOwnInstance<T>(descriptor: IServiceDescriptor, required: boolean, owned: boolean): T | undefined {\n        if (isAllowedScope(descriptor.scope, owned)) {\n            const instance = this.getOwnInstance(descriptor);\n            if (!instance) {\n                return this._instanciationService.createService(descriptor);\n            }\n            return instance;\n        }\n        else if (required) {\n            throw new Error(`Attempting to create an instance of service scoped to children only: \"${descriptor}\".`);\n        }\n    }\n\n    protected *fetchOrCreateOwnInstances(descriptors: Iterable<IServiceDescriptor>): Iterable<any> {\n        for (const descriptor of descriptors) {\n            const instance = this.fetchOrCreateOwnInstance(descriptor, false, true);\n            if (typeof instance !== \"undefined\") yield instance;\n        }\n    }\n\n    [Symbol.dispose](): void {\n        const instances = [...this._instances.values()];\n        this._instances.clear();\n\n        IDisposable.safeDisposeAll(instances);\n    }\n}\n","import { IDisposable } from \"@aster-js/core\";\nimport { AbortToken } from \"@aster-js/async\";\n\nimport { IServiceProvider, ServiceProvider } from \"../service-provider\";\nimport { IIoCContainerBuilder } from \"./iioc-module-builder\";\nimport { ServiceIdentifier } from \"../service-registry\";\n\nexport const IIoCModule = ServiceIdentifier<IIoCModule>(\"IIoCModule\");\n\nexport enum IoCModuleSetupResultBehavior {\n    continue,\n    stop\n}\n\nexport enum IoCModuleSetupExecBehavior {\n    blocking,\n    asynchronous\n}\n\nexport interface IIoCModuleSetupAction {\n    readonly execBehavior: IoCModuleSetupExecBehavior;\n    exec(provider: IServiceProvider, token?: AbortToken): Promise<IoCModuleSetupResultBehavior>;\n}\n\n/**\n * An IoC module is the root object that contains all your services for a specific scope.\n *\n * Inside an IoC kernel, which is itself an IoC module, multiple IoC module will be instanciate to create child scope.\n *\n * And IoCModule contains its own services, running states and a clean way to dispose of all allocated resources.\n */\nexport interface IIoCModule extends IDisposable, AsyncIterable<IIoCModule> {\n    /** Name of the module. This name is unique inside its parent module. */\n    readonly name: string;\n    /** Path composed of the all parent hierarchy name */\n    readonly path: string;\n    /** Parent module. In exception of the kernel, parent is always present. */\n    readonly parent?: IIoCModule;\n    /** Indicate whether or not the module is currently started and running. */\n    readonly running: boolean;\n    /** Promise resolve when the startup is done. This promise is available before the start and resolve when the start is done. */\n    readonly ready: PromiseLike<this>;\n    /** Application abort token */\n    readonly abortToken: AbortToken;\n    /** Service provider that give access to all registered services */\n    readonly services: ServiceProvider;\n    /** Create new child own container */\n    createChildScope(name: string): IIoCContainerBuilder;\n    /** Start the application and return a promise resolved when the application is properly setup.\n     * This promise will be resolved just after the ready one meaning that both give the same information of \"startup finished\" */\n    start(): Promise<boolean>;\n}\n","import type { AbortToken } from \"@aster-js/async\";\n\nimport type { IServiceProvider } from \"../../service-provider\";\n\nimport { IIoCModuleSetupAction, IoCModuleSetupExecBehavior, IoCModuleSetupResultBehavior } from \"../iioc-module\";\n\nexport type SetupErrorHandlerDelegate = (err: any, provider: IServiceProvider) => SetupErrorHandlerResult | boolean | void;\n\nexport enum SetupErrorHandlerResult {\n    stop,\n    continue,\n    throw\n}\n\nexport abstract class SafeIoCModuleSetupAction implements IIoCModuleSetupAction {\n    private _errorHandler?: SetupErrorHandlerDelegate;\n    private _execBehavior: IoCModuleSetupExecBehavior = IoCModuleSetupExecBehavior.blocking;\n\n    get execBehavior(): IoCModuleSetupExecBehavior { return this._execBehavior; }\n\n    async exec(provider: IServiceProvider, token?: AbortToken): Promise<IoCModuleSetupResultBehavior> {\n        try {\n            await this.execImpl(provider, token);\n            return IoCModuleSetupResultBehavior.continue;\n        }\n        catch (err) {\n            const behavior = this._errorHandler?.(err, provider);\n            switch (behavior) {\n                case undefined:\n                case true:\n                case SetupErrorHandlerResult.continue:\n                    return IoCModuleSetupResultBehavior.continue;\n                case SetupErrorHandlerResult.stop:\n                case false:\n                    return IoCModuleSetupResultBehavior.stop;\n                case SetupErrorHandlerResult.throw:\n                    throw err;\n                default:\n                    throw new Error(\"Invalid result\");\n            }\n        }\n    }\n\n    abstract execImpl(provider: IServiceProvider, token?: AbortToken): Promise<void>;\n\n    continueWithoutAwaiting(): void {\n        this._execBehavior = IoCModuleSetupExecBehavior.asynchronous;\n    }\n\n    onError(errorHandler: SetupErrorHandlerDelegate): void {\n        this._errorHandler = errorHandler;\n    }\n}\n","import type { AbortToken } from \"@aster-js/async\";\n\nimport { IServiceAccessor } from \"../../service-provider/iservice-accessor\"\n;\nimport type { IServiceProvider } from \"../../service-provider\";\n\nimport type { IoCModuleSetupDelegate } from \"../iioc-module-builder\";\n\nimport { SafeIoCModuleSetupAction } from \"./safe-ioc-module-setup-action\";\n\n\nexport class IoCModuleCallbackSetupAction extends SafeIoCModuleSetupAction {\n\n    constructor(\n        private readonly _action: IoCModuleSetupDelegate\n    ) {\n        super();\n    }\n\n    async execImpl(provider: IServiceProvider, token?: AbortToken): Promise<void> {\n        const acc = provider.get(IServiceAccessor, true);\n        await this._action(acc, token);\n    }\n}\n","import type { AbortToken } from \"@aster-js/async\";\n\nimport type { IServiceProvider } from \"../../service-provider\";\nimport type { ServiceIdentifier } from \"../../service-registry\";\n\nimport type { ServiceSetupDelegate } from \"../iioc-module-builder\";\n\nimport { SafeIoCModuleSetupAction } from \"./safe-ioc-module-setup-action\";\n\nexport class IoCModuleServiceSetupAction<T> extends SafeIoCModuleSetupAction {\n\n    constructor(\n        private readonly _serviceId: ServiceIdentifier<T>,\n        private readonly _action: ServiceSetupDelegate<T>,\n        private readonly _required?: boolean\n    ) {\n        super();\n    }\n\n    async execImpl(provider: IServiceProvider, token?: AbortToken): Promise<void> {\n        const svc = provider.get(this._serviceId, this._required);\n        if (svc) await this._action(svc, token);\n    }\n}\n","import type { AbortToken } from \"@aster-js/async\";\n\nimport type { IServiceProvider } from \"../../service-provider\";\nimport type { ServiceIdentifier } from \"../../service-registry\";\n\nimport type { ServiceSetupDelegate } from \"../iioc-module-builder\";\n\nimport { SafeIoCModuleSetupAction } from \"./safe-ioc-module-setup-action\";\n\nexport class IoCModuleManyServiceSetupAction<T> extends SafeIoCModuleSetupAction {\n\n    constructor(\n        private readonly _serviceId: ServiceIdentifier<T>,\n        private readonly _action: ServiceSetupDelegate<T>,\n        private readonly _currentScopeOnly?: boolean\n    ) {\n        super();\n    }\n\n    async execImpl(provider: IServiceProvider, token?: AbortToken): Promise<void> {\n        const services = [...provider.getAll<T>(this._serviceId, this._currentScopeOnly)];\n        const all = services.map(x => this._action(x));\n        await Promise.all(all);\n    }\n}\n","import type { Constructor } from \"@aster-js/core\";\n\nimport type { ServiceIdentifier } from \"../service-registry/service-identifier\";\n\nimport type { IIoCContainerBuilder, ISetupIoCContainerBuilder } from \"./iioc-module-builder\";\nimport type { ServiceSetupDelegate, IoCModuleSetupDelegate, IoCModuleConfigureDelegate } from \"./iioc-module-builder\";\nimport type { IIoCModule } from \"./iioc-module\";\nimport type { SafeIoCModuleSetupAction, SetupErrorHandlerDelegate } from \"./setup-actions\";\n\nexport class SetupIoCContainerBuilder implements ISetupIoCContainerBuilder {\n\n    constructor(\n        private readonly _wrapped: IIoCContainerBuilder,\n        private readonly _action: SafeIoCModuleSetupAction\n    ) { }\n\n    continueWithoutAwaiting(): IIoCContainerBuilder {\n        this._action.continueWithoutAwaiting();\n        return this._wrapped;\n    }\n\n    catch(errorHandler: SetupErrorHandlerDelegate): IIoCContainerBuilder {\n        this._action.onError(errorHandler);\n        return this._wrapped;\n    }\n\n    use(action: IoCModuleSetupDelegate): ISetupIoCContainerBuilder {\n        return this._wrapped.use(action);\n    }\n\n    setup<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\n    setup<T>(ctor: Constructor<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\n    setup<T>(serviceIdOrCtor: ServiceIdentifier<T> | Constructor<T>, action: ServiceSetupDelegate<T>, required: boolean = true): ISetupIoCContainerBuilder {\n        return this._wrapped.setup(serviceIdOrCtor as ServiceIdentifier<T>, action, required);\n    }\n\n    setupMany<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean): ISetupIoCContainerBuilder;\n    setupMany<T>(ctor: Constructor<T>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean): ISetupIoCContainerBuilder;\n    setupMany<T>(serviceIdOrCtor: ServiceIdentifier<T> | Constructor<T>, action: ServiceSetupDelegate<T>, currentScopeOnly: boolean = true): ISetupIoCContainerBuilder {\n        return this._wrapped.setupMany(serviceIdOrCtor as ServiceIdentifier<T>, action, currentScopeOnly);\n    }\n\n    configure(action: IoCModuleConfigureDelegate): IIoCContainerBuilder {\n        return this._wrapped.configure(action);\n    }\n\n    build(): IIoCModule {\n        return this._wrapped.build();\n    }\n}\n","import { Constructor, DisposableHost, Lazy } from \"@aster-js/core\";\n\nimport { ServiceCollection } from \"../service-collection/service-collection\";\nimport {  resolveServiceId } from \"../service-registry/service-utilities\";\n\nimport type { ServiceIdentifier } from \"../service-registry\";\nimport type { ServiceProvider } from \"../service-provider\";\n\nimport type { IIoCContainerBuilder, ISetupIoCContainerBuilder } from \"./iioc-module-builder\";\nimport type { ServiceSetupDelegate, IoCModuleSetupDelegate, IoCModuleConfigureDelegate } from \"./iioc-module-builder\";\nimport { IIoCModule, IIoCModuleSetupAction } from \"./iioc-module\";\n\nimport { IoCModuleCallbackSetupAction, IoCModuleManyServiceSetupAction, IoCModuleServiceSetupAction, SafeIoCModuleSetupAction } from \"./setup-actions\";\nimport { SetupIoCContainerBuilder } from \"./setup-ioc-container-builder\";\n\nexport abstract class IoCContainerBuilder extends DisposableHost implements IIoCContainerBuilder {\n    private readonly _services: ServiceCollection;\n    private readonly _setups: IIoCModuleSetupAction[] = [];\n\n    constructor(\n        private readonly _name: string\n    ) {\n        super();\n        this._services = new ServiceCollection();\n    }\n\n    configure(action: IoCModuleConfigureDelegate): IIoCContainerBuilder {\n        action(this._services);\n        return this;\n    }\n\n    use(action: IoCModuleSetupDelegate): ISetupIoCContainerBuilder {\n        this.checkIfDisposed();\n\n        const setupAction = new IoCModuleCallbackSetupAction(action);\n        return this.addSafeSetupAction(setupAction);\n    }\n\n    setup<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\n    setup<T>(ctor: Constructor<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\n    setup<T>(serviceIdOrCtor: ServiceIdentifier<T> | Constructor<T>, action: ServiceSetupDelegate<T>, required: boolean = true): ISetupIoCContainerBuilder {\n        this.checkIfDisposed();\n\n        const serviceId = resolveServiceId(serviceIdOrCtor);\n        const setupAction = new IoCModuleServiceSetupAction(serviceId, action, required);\n        return this.addSafeSetupAction(setupAction);\n    }\n\n    setupMany<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean): ISetupIoCContainerBuilder;\n    setupMany<T>(ctor: Constructor<T>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean): ISetupIoCContainerBuilder;\n    setupMany<T>(serviceIdOrCtor: ServiceIdentifier<T> | Constructor<T>, action: ServiceSetupDelegate<T>, currentScopeOnly: boolean = true): ISetupIoCContainerBuilder {\n        this.checkIfDisposed();\n\n        const serviceId = resolveServiceId(serviceIdOrCtor);\n        const setupAction = new IoCModuleManyServiceSetupAction(serviceId, action, currentScopeOnly);\n        return this.addSafeSetupAction(setupAction);\n    }\n\n    private addSafeSetupAction(setupAction: SafeIoCModuleSetupAction): ISetupIoCContainerBuilder {\n        this._setups.push(setupAction);\n        return new SetupIoCContainerBuilder(this, setupAction);\n    }\n\n    build(): IIoCModule {\n        this.checkIfDisposed();\n\n        const services = new ServiceCollection(this._services);\n\n        const provider = this.createServiceProvider(services);\n        this.configureDefaultServices && this.configureDefaultServices(services, provider);\n\n        const module = this.createModule(this._name, provider, [...this._setups]);\n        services.addInstance(IIoCModule, module);\n        return module;\n    }\n\n    protected abstract createModule(name: string, provider: ServiceProvider, setups: IIoCModuleSetupAction[]): IIoCModule;\n\n    protected abstract createServiceProvider(services: ServiceCollection): ServiceProvider;\n\n    protected configureDefaultServices?(services: ServiceCollection, provider: ServiceProvider): void;\n}\n","import { DisposedError, IDisposable } from \"@aster-js/core\";\nimport type { AsyncResult } from \"./iasync-result\";\n\nexport class DeferredError extends Error { }\n\nconst enum DeferredState {\n    idle = 0,\n    completed = 0x1,\n    faulted = 0x2,\n    succeed = 0x4,\n    disposed = 0x8\n}\n\nexport class Deferred<T = void> implements AsyncResult<T>, IDisposable {\n    private _state: DeferredState = 0;\n    private _version: number = 0;\n    private _promiseOrResult?: T | Promise<T> | Error;\n    private _resolveCallback?: (value: T | PromiseLike<T>) => void;\n    private _rejectCallback?: (reason?: any) => void;\n\n    get version(): number { return this._version; }\n\n    get idle(): boolean { return this._state === 0; }\n\n    get completed(): boolean { return Boolean(this._state & DeferredState.completed); }\n\n    get succeed(): boolean { return Boolean(this._state & DeferredState.succeed); }\n\n    get faulted(): boolean { return Boolean(this._state & DeferredState.faulted); }\n\n    get disposed(): boolean { return Boolean(this._state & DeferredState.disposed); }\n\n    resolve(value: T): boolean {\n        IDisposable.checkDisposed(this);\n\n        if (!this._state) {\n            this._state = DeferredState.completed | DeferredState.succeed;\n            this._promiseOrResult = value;\n            this._resolveCallback && this._resolveCallback(value);\n            return true;\n        }\n        return false;\n    }\n\n    reject(reason?: any): boolean {\n        IDisposable.checkDisposed(this);\n\n        if (!this._state) {\n            this._state = DeferredState.completed | DeferredState.faulted;\n            const error = reason instanceof Error ? reason : new DeferredError(reason);\n            this._promiseOrResult = error;\n            this._rejectCallback && this._rejectCallback(error);\n            return true;\n        }\n        return false;\n    }\n\n    cancel(): boolean {\n        IDisposable.checkDisposed(this);\n\n        if (!this._state){\n            this.resetCore();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Reset current deferred into idle state and rejecting any pending promise\n     * > To avoid rejecting pending promise, use cancel\n     * @param force Reset current promise and get a new one even if its not completed\n     */\n    reset(force?: boolean): void {\n        IDisposable.checkDisposed(this);\n\n        if (force) {\n            if (!this._state && this._rejectCallback) {\n                const err = new DeferredError(\"Operation cancelled\");\n                this._rejectCallback(err);\n            }\n            this.resetCore();\n        }\n        else if (this._state) {\n            this.resetCore();\n        }\n    }\n\n    private resetCore(): void {\n        this._version++;\n        this._state = 0;\n\n        delete this._promiseOrResult;\n        delete this._resolveCallback;\n        delete this._rejectCallback;\n    }\n\n    async then<TFulfill = T, TReject = never>(\n        onfulfilled?: ((value: T) => TFulfill | PromiseLike<TFulfill>) | undefined | null,\n        onrejected?: ((reason: any) => TReject | PromiseLike<TReject>) | undefined | null\n    ): Promise<TFulfill | TReject> {\n        if (this._promiseOrResult instanceof Promise) {\n            return this._promiseOrResult.then(onfulfilled, onrejected);\n        }\n        if (this._state & DeferredState.succeed) {\n            if (onfulfilled) return onfulfilled(this._promiseOrResult as T);\n        }\n        if (this._state & DeferredState.faulted) {\n            if (onrejected) return onrejected(this._promiseOrResult);\n        }\n\n        return this.initAwaiter().then(onfulfilled, onrejected);\n    }\n\n    async catch<TResult = never>(\n        onrejected: (reason: any) => TResult | PromiseLike<TResult>\n    ): Promise<T | TResult> {\n        try {\n            return await this;\n        } catch (err) {\n            return await onrejected(err);\n        }\n    }\n\n    async finally(onfinally: () => void): Promise<T> {\n        try {\n            return await this;\n        } finally {\n            onfinally();\n        }\n    }\n\n    /**\n     * Transform current instance into a native promise\n     * > This method should be used carefully\n     */\n    getAwaiter(): Promise<T> {\n        if (this._promiseOrResult instanceof Promise) {\n            return this._promiseOrResult;\n        }\n        if (this._state & DeferredState.succeed) {\n            return Promise.resolve(this._promiseOrResult as T);\n        }\n        if (this._state & DeferredState.faulted) {\n            return Promise.reject(this._promiseOrResult);\n        }\n        return this.initAwaiter();\n    }\n\n    private initAwaiter(): Promise<T> {\n        const promise = new Promise<T>((resolve, reject) => {\n            this._resolveCallback = resolve;\n            this._rejectCallback = reject;\n        });\n        this._promiseOrResult = promise;\n        return promise;\n    }\n\n    [IDisposable.dispose](): void {\n        if (this._state !== DeferredState.disposed) {\n            this.reject(new DisposedError());\n            delete this._promiseOrResult;\n            this._state = DeferredState.disposed;\n        }\n    }\n\n    static resolve<T = any>(value: T): Deferred<T> {\n        const d = new Deferred<T>();\n        d.resolve(value);\n        return d;\n    }\n\n    static reject<T = any>(reason?: any): Deferred<T> {\n        const d = new Deferred<T>();\n        d.reject(reason);\n        return d;\n    }\n}\n","import { IDisposable } from \"@aster-js/core\";\nimport { Deferred } from \"./deferred\";\n\nconst NoValue = Symbol();\nconst Disposed = Symbol();\n\nexport class Delayed<T = any> implements IDisposable {\n    private _value: T | typeof NoValue | typeof Disposed = NoValue;\n    private _deferred?: Deferred<T>;\n\n    get disposed(): boolean { return this._value === Disposed; }\n\n    has(): boolean {\n        IDisposable.checkDisposed(this);\n        return this._value !== NoValue;\n    }\n\n    get(): PromiseLike<T> | T {\n        IDisposable.checkDisposed(this);\n\n        if (this._value !== NoValue) return this._value as T;\n        if (!this._deferred) this._deferred = new Deferred();\n        return this._deferred;\n    }\n\n    set(value: T): void {\n        IDisposable.checkDisposed(this);\n\n        this._value = value;\n        this._deferred?.resolve(value);\n    }\n\n    reset(): void {\n        IDisposable.checkDisposed(this);\n\n        IDisposable.safeDispose(this._deferred);\n        IDisposable.safeDispose(this._value);\n        this._value = NoValue;\n    }\n\n    [IDisposable.dispose](): void {\n        IDisposable.safeDispose(this._deferred);\n        IDisposable.safeDispose(this._value);\n        this._value = Disposed;\n    }\n}\n","import { Action, IDisposable } from \"@aster-js/core\";\n\nexport class TimeoutSource implements IDisposable {\n    private _timer: number = -1;\n\n    get hasPendingCall(): boolean { return this._timer !== -1; }\n\n    /** Invoke the pending call and cancel any pending ones */\n    invoke(callback: Action, timeout: number): void {\n        this.clear();\n        this.invokeCore(callback, timeout);\n    }\n\n    /** Invoke the provided callback if there is no pending call */\n    tryInvoke(callback: Action, timeout: number): boolean {\n        if (this._timer === -1) {\n            this.invokeCore(callback, timeout);\n            return true;\n        }\n        return false;\n    }\n\n    private invokeCore(callback: Action, timeout: number): void {\n        this._timer = self.setTimeout(() => {\n            this._timer = -1;\n            callback();\n        }, timeout);\n    }\n\n    /** Cancel any pending calls */\n    clear(): void {\n        if (this._timer !== -1) {\n            clearTimeout(this._timer);\n            this._timer = -1;\n        }\n    }\n\n    [IDisposable.dispose](): void {\n        this.clear();\n    }\n}\n","import { DisposableHost, DisposedError } from \"@aster-js/core\";\nimport { Deferred } from \"./deferred\";\n\nconst NO_VALUE = Symbol();\n\nexport class AbortError extends Error { }\n\nexport type AbortListenerDelegate = (reason: any) => void;\n\nexport interface AbortToken {\n\n    readonly aborted: boolean;\n\n    readonly reason: any;\n\n    readonly signal: AbortSignal | null;\n\n    register(listener: AbortListenerDelegate | Deferred | AbortableToken): void;\n\n    throwIfAborted(): void;\n}\n\nexport namespace AbortToken {\n    export const none = Object.freeze<AbortToken>({\n        aborted: false,\n        reason: null,\n        signal: null,\n        register: () => { },\n        throwIfAborted: () => { }\n    });\n    /**\n     * Create a new AbortableToken\n     */\n    export function create(parent?: AbortToken): AbortableToken {\n        const token = new AbortableToken();\n        if (parent) token.attach(parent);\n        return token;\n    }\n    /**\n     * Return whether or not the provided value is a valid token\n     * @param token Token to validate\n     */\n    export function isValidToken(token: unknown): token is AbortToken {\n        return token instanceof ReadOnlyAbortToken\n            || token instanceof AbortableToken\n            || token === none;\n    }\n}\n\nclass ReadOnlyAbortToken implements AbortToken {\n\n    get aborted(): boolean { return this._source.aborted; }\n\n    get reason(): any { return this._source.reason; }\n\n    get signal(): AbortSignal | null { return this._source.signal; }\n\n    constructor(\n        private readonly _source: AbortableToken\n    ) { }\n\n    register(listener: AbortListenerDelegate | Deferred | AbortableToken): void {\n        this._source.register(listener);\n    }\n\n    throwIfAborted(): void {\n        this._source.throwIfAborted();\n    }\n}\n\nexport class AbortableToken extends DisposableHost implements AbortToken {\n    private readonly _listeners: (AbortListenerDelegate | Deferred | AbortableToken)[] = [];\n    private _controller?: AbortController = new AbortController();\n    private _abortReason: any = NO_VALUE;\n    private _readOnly?: AbortToken;\n\n    get aborted(): boolean { return this._abortReason !== NO_VALUE; }\n\n    get reason(): any { return this._abortReason !== NO_VALUE ? this._abortReason : null; }\n\n    /** Gets a ReadOnly token that will not be able to abort him by itself */\n    get readOnly(): AbortToken {\n        if (!this._readOnly) {\n            this.checkIfDisposed();\n            this._readOnly = new ReadOnlyAbortToken(this);\n        }\n        return this._readOnly;\n    }\n\n    get signal(): AbortSignal | null {\n        if (!this._controller) {\n            this._controller = new AbortController();\n        }\n        return this._controller.signal;\n    }\n\n    register(listener: AbortListenerDelegate | Deferred<any> | AbortableToken): void {\n        this.checkIfDisposed();\n        if (listener !== AbortToken.none) {\n            this._listeners.push(listener);\n        }\n    }\n\n    throwIfAborted(): void {\n        this.checkIfDisposed();\n\n        if (this.aborted) throw new AbortError();\n    }\n\n    abort(reason: any): boolean {\n        if (!this.disposed && !this.aborted) {\n            this._abortReason = reason;\n            this._controller?.abort();\n\n            this._listeners.forEach(async l => {\n                if (l instanceof Deferred) {\n                    l.reject(reason);\n                }\n                else if (l instanceof Function) {\n                    l(reason);\n                }\n                else {\n                    l.abort(reason);\n                }\n            });\n\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Attach the promise to abort current token if the promise itself is aborted too\n     * @param promiseOrDeferred Promise of Deferred to listen\n     */\n    attach(abortable: Promise<any> | Deferred<any> | AbortToken): void {\n        this.checkIfDisposed();\n\n        if (abortable instanceof Promise || abortable instanceof Deferred) {\n            abortable.then(null, err => this.abort(err));\n        }\n        else {\n            abortable.register(reason => this.abort(reason));\n        }\n    }\n\n    protected dispose(): void {\n        if (this._listeners.length) {\n            var reason = new DisposedError(\"Token disposed\");\n            this.abort(reason);\n            this._listeners.splice(0);\n        }\n    }\n}\n","import { AssertionError } from \"@aster-js/core\";\n\n/**\n * Assert the Promise.allSettled result to ensure all promises are fulfilled results\n * @param results Results to validate\n */\nexport function assertAllSettledResult<T>(results: PromiseSettledResult<Awaited<T>>[]): asserts results is PromiseFulfilledResult<Awaited<T>>[] {\n    const rejectedResults = results.filter(isRejectedResult);\n    if (rejectedResults.length) throw new AllSettledPromiseError(rejectedResults);\n}\n\nfunction isRejectedResult<T>(result: PromiseSettledResult<Awaited<T>>): result is PromiseRejectedResult {\n    return result.status === \"rejected\";\n}\n\n\nexport class AllSettledPromiseError extends AssertionError {\n    constructor(readonly rejectedResults: PromiseRejectedResult[]) {\n        super(`${rejectedResults.length} errors has been trigger during promise settlement`);\n    }\n}\n","import { DisposableHost, IDisposable, Lazy } from \"@aster-js/core\";\nimport { AbortableToken, AbortToken, Deferred, Delayed, assertAllSettledResult } from \"@aster-js/async\";\n\nimport type { ServiceProvider } from \"../service-provider\";\n\nimport { IIoCModule, IIoCModuleSetupAction, IoCModuleSetupExecBehavior, IoCModuleSetupResultBehavior } from \"./iioc-module\";\nimport type { IIoCContainerBuilder } from \"./iioc-module-builder\";\nimport type { IoCModuleBuilder } from \"./ioc-module-builder\";\nimport { Memoize } from \"@aster-js/decorators\";\n\nfunction* resolvePathSegments(target: IIoCModule): Iterable<string> {\n    let current: IIoCModule | undefined = target;\n    while (current) {\n        yield current.name;\n        current = current.parent;\n    }\n}\n\nexport abstract class IoCContainer extends DisposableHost implements IIoCModule {\n    private readonly _setups: IIoCModuleSetupAction[];\n    private readonly _children: Map<string, Delayed<IIoCModule>>;\n    private readonly _ready: Deferred<this>;\n    private _token?: AbortableToken;\n\n    @Memoize\n    get path(): string { return [...resolvePathSegments(this)].reverse().join(\"/\"); }\n\n    get abortToken(): AbortToken { return this._token?.readOnly ?? AbortToken.none; }\n\n    get running(): boolean { return this._token ? !this._token.aborted : false; }\n\n    get services(): ServiceProvider { return this._provider; }\n\n    get ready(): PromiseLike<this> { return this._ready; }\n\n    constructor(\n        readonly name: string,\n        private readonly _provider: ServiceProvider,\n        setups: Iterable<IIoCModuleSetupAction>\n    ) {\n        super();\n        this._children = new Map();\n        this._ready = new Deferred();\n        this._setups = [...setups];\n    }\n\n    createChildScope(name: string): IIoCContainerBuilder {\n        if (this._children.has(name)) throw new Error(`Duplicate child scope \"${name}\"`);\n\n        const delayed = new Delayed<IIoCModule>();\n        this._children.set(name, delayed);\n        return this.createIoCModuleBuilder(name, delayed);\n    }\n\n    protected abstract createIoCModuleBuilder(name: string, target: Delayed<IIoCModule>): IoCModuleBuilder;\n\n    async start(): Promise<boolean> {\n        if (this._token) return false;\n\n        const token = AbortToken.create();\n        this._token = token;\n\n        const setups = this._setups.splice(0);\n        try {\n            const asyncTasks = [];\n\n            for (const setup of setups) {\n                token.throwIfAborted();\n\n                const task = setup.exec(this._provider, token);\n\n                if (setup.execBehavior === IoCModuleSetupExecBehavior.asynchronous) {\n                    asyncTasks.push(task);\n                }\n                else {\n                    const taskResult = await task;\n                    if (taskResult === IoCModuleSetupResultBehavior.stop) break;\n                }\n            }\n\n            if (asyncTasks.length !== 0) {\n                const results = await Promise.allSettled(asyncTasks);\n                assertAllSettledResult(results);\n            }\n\n            this._ready.resolve(this);\n            return true;\n        }\n        catch (err) {\n            token.abort(err);\n\n            this._ready.reject(err);\n            return false;\n        }\n    }\n\n    async *[Symbol.asyncIterator](): AsyncIterableIterator<IIoCModule> {\n        for (const child of this._children.values()) {\n            yield await child.get();\n        }\n    }\n\n    protected dispose(): void {\n        IDisposable.safeDisposeAll(this._children.values());\n        IDisposable.safeDispose(this._provider);\n        IDisposable.safeDispose(this._token);\n    }\n}\n","import type { Delayed } from \"@aster-js/async\";\n\nimport  { ServiceProvider } from \"../service-provider/service-provider\";\n\nimport type { ServiceCollection } from \"../service-collection\";\n\nimport { IoCContainerBuilder } from \"./ioc-container-builder\";\n\nimport type { IIoCModule, IIoCModuleSetupAction } from \"./iioc-module\";\nimport type { IoCModuleFactory } from \"./ioc-module\";\n\nexport class IoCModuleBuilder extends IoCContainerBuilder {\n\n    constructor(\n        name: string,\n        private readonly _result: Delayed<IIoCModule>,\n        private readonly _parent: IIoCModule,\n        private readonly _factory: IoCModuleFactory\n    ) {\n        super(name);\n    }\n\n    protected createModule(name: string, provider: ServiceProvider, setups: IIoCModuleSetupAction[]): IIoCModule {\n        const result = this._factory(name, provider, setups, this._parent);\n        this._result.set(result);\n        return result;\n    }\n\n    protected createServiceProvider(services: ServiceCollection): ServiceProvider {\n        return new ServiceProvider(services, this._parent.services);\n    }\n}\n","import type { Delayed } from \"@aster-js/async\";\n\nimport type { ServiceProvider } from \"../service-provider/service-provider\";\n\nimport { IoCContainer } from \"./ioc-container\";\nimport { IoCModuleBuilder } from \"./ioc-module-builder\";\n\nimport type { IIoCModule, IIoCModuleSetupAction } from \"./iioc-module\";\n\nexport type IoCModuleFactory = (name: string, provider: ServiceProvider, setupCallbacks: Iterable<IIoCModuleSetupAction>, parent: IIoCModule) => IIoCModule;\n\nexport class IoCModule extends IoCContainer {\n\n    get parent(): IIoCModule { return this._parent; }\n\n    private constructor(\n        name: string,\n        provider: ServiceProvider,\n        setupCallbacks: Iterable<IIoCModuleSetupAction>,\n        private readonly _parent: IIoCModule\n    ) {\n        super(name, provider, setupCallbacks);\n    }\n\n    protected createIoCModuleBuilder(name: string, target: Delayed<IIoCModule>): IoCModuleBuilder {\n        return new IoCModuleBuilder(name, target, this, IoCModule.factory);\n    }\n\n    static factory(name: string, provider: ServiceProvider, setupCallbacks: Iterable<IIoCModuleSetupAction>, parent: IIoCModule): IIoCModule {\n        return new IoCModule(name, provider, setupCallbacks, parent);\n    }\n}\n","import type { Delayed } from \"@aster-js/async\";\n\nimport { ServiceAccessor } from \"../service-provider/service-accessor\";\nimport { ServiceProvider } from \"../service-provider/service-provider\";\n\nimport type { ServiceCollection } from \"../service-collection\";\n\nimport { IoCContainer } from \"./ioc-container\";\nimport { IoCContainerBuilder } from \"./ioc-container-builder\";\nimport { IoCModuleBuilder } from \"./ioc-module-builder\";\nimport { IoCModule } from \"./ioc-module\";\n\nimport type { IIoCModule, IIoCModuleSetupAction } from \"./iioc-module\";\n\nexport class IoCKernel extends IoCContainer {\n\n    protected createIoCModuleBuilder(name: string, target: Delayed<IIoCModule>): IoCModuleBuilder {\n        return new IoCModuleBuilder(name, target, this, IoCModule.factory);\n    }\n\n    static create(): IoCKernelBuilder {\n        return new IoCKernelBuilder(\"root\");\n    }\n}\n\nexport class IoCKernelBuilder extends IoCContainerBuilder {\n\n    protected createModule(name: string, provider: ServiceProvider, setups: IIoCModuleSetupAction[]): IIoCModule {\n        return new IoCKernel(name, provider, setups);\n    }\n\n    protected createServiceProvider(services: ServiceCollection): ServiceProvider {\n        return new ServiceProvider(services);\n    }\n\n    protected configureDefaultServices(services: ServiceCollection, _provider: ServiceProvider): void {\n        services.addTransient(ServiceAccessor);\n    }\n}\n","import { ServiceContract, ServiceIdentifier } from \"../service-registry\";\n\nexport const IClock = ServiceIdentifier<IClock>(\"IClock\");\n\nexport interface IClock {\n    now(): Date;\n    utcNow(): Date;\n}\n\n@ServiceContract(IClock)\nexport class SystemClock implements IClock {\n    now(): Date {\n        return new Date();\n    }\n\n    utcNow(): Date {\n        return new Date(Date.now());\n    }\n}\n","import { DisposableHost, IDisposable } from \"@aster-js/core\";\nimport { EventEmitter, IEvent } from \"@aster-js/events\";\nimport { ServiceContract, ServiceIdentifier } from \"../service-registry\";\n\nexport const IConfiguration = ServiceIdentifier<IConfiguration>(\"IConfiguration\");\n\nexport interface IConfiguration<T = unknown> extends IDisposable {\n\n    readonly values: Readonly<T>;\n\n    readonly onDidUpdated: IEvent<[key: keyof T, newValue: any]>;\n\n    update(config: Partial<T>): void;\n}\n\n@ServiceContract(IConfiguration)\nexport class Configuration<T> extends DisposableHost implements IConfiguration<T> {\n    private readonly _onDidUpdated: EventEmitter<[key: keyof T, newValue: any]>;\n    private _config: Readonly<T>;\n\n    get values(): Readonly<T> { return this._config; }\n\n    get onDidUpdated(): IEvent<[key: keyof T, newValue: any]> { return this._onDidUpdated.event; }\n\n    constructor(config: Readonly<T>) {\n        super();\n        this._config = structuredClone(config);\n        this.registerForDispose(\n            this._onDidUpdated = new EventEmitter()\n        );\n    }\n\n    update(config: Partial<T>): void {\n        for (const [key, value] of Object.entries(config)) {\n            Object.assign(this._config, { [key]: structuredClone(config) });\n            this._onDidUpdated.emit(key as keyof T, value);\n        }\n    }\n}\n","import { Many, ServiceContract, ServiceIdentifier } from \"../service-registry\";\nimport { IClock } from \"./iclock\";\nimport { IIoCModule } from \"../ioc-module\";\n\nexport const ILogger = ServiceIdentifier<ILogger>(\"ILogger\");\nexport interface ILogger {\n    /**\n     * Log an event and propagate it over all registered sinks\n     * @param logLevel Define the log level\n     * @param err Error related to the event. Set as null when not relevant\n     * @param templateMessage Template message that embed into curly braces each following params like this \"My message with {MyParam1} and {MyParam2}\"\n     * @param params Params to inject into the message. Each parameter must be declared only once in order of their apperance in the template message\n     */\n    log(logLevel: LogLevel, err: unknown, templateMessage: string, ...params: any[]): void;\n    /**\n     * Log an event with a Log Level at `trace`\n     * @param templateMessage Template message that embed into curly braces each following params like this \"My message with {MyParam1} and {MyParam2}\"\n     * @param params Params to inject into the message. Each parameter must be declared only once in order of their apperance in the template message\n     */\n    trace(templateMessage: string, ...params: any[]): void;\n    /**\n     * Log an event with a Log Level at `debug`\n     * @param templateMessage Template message that embed into curly braces each following params like this \"My message with {MyParam1} and {MyParam2}\"\n     * @param params Params to inject into the message. Each parameter must be declared only once in order of their apperance in the template message\n     */\n    debug(templateMessage: string, ...params: any[]): void;\n    /**\n     * Log an event with a Log Level at `info`\n     * @param templateMessage Template message that embed into curly braces each following params like this \"My message with {MyParam1} and {MyParam2}\"\n     * @param params Params to inject into the message. Each parameter must be declared only once in order of their apperance in the template message\n     */\n    info(templateMessage: string, ...params: any[]): void;\n    /**\n     * Log an event with a Log Level at `warn`\n     * @param err Error related to the event. Set as null when not relevant\n     * @param templateMessage Template message that embed into curly braces each following params like this \"My message with {MyParam1} and {MyParam2}\"\n     * @param params Params to inject into the message. Each parameter must be declared only once in order of their apperance in the template message\n     */\n    warn(err: unknown, templateMessage: string, ...params: any[]): void;\n    /**\n     * Log an event with a Log Level at `error`\n     * @param err Error related to the event. Set as null when not relevant\n     * @param templateMessage Template message that embed into curly braces each following params like this \"My message with {MyParam1} and {MyParam2}\"\n     * @param params Params to inject into the message. Each parameter must be declared only once in order of their apperance in the template message\n     */\n    error(err: unknown, templateMessage: string, ...params: any[]): void;\n    /**\n     * Log an event with a Log Level at `critical`\n     * @param err Error related to the event. Set as null when not relevant\n     * @param templateMessage Template message that embed into curly braces each following params like this \"My message with {MyParam1} and {MyParam2}\"\n     * @param params Params to inject into the message. Each parameter must be declared only once in order of their apperance in the template message\n     */\n    critical(err: unknown, templateMessage: string, ...params: any[]): void;\n}\n\nexport type LogEventPropertyKey = string | typeof LogEvent.extraValues | typeof LogEvent.template;\n\nexport type LogEvent = {\n    readonly scope: string;\n    readonly logLevel: LogLevel;\n    readonly message: string;\n    readonly properties: Record<LogEventPropertyKey, any>;\n    readonly time: Date;\n    readonly err?: unknown;\n}\n\nexport namespace LogEvent {\n    export const extraValues = Symbol(\"extraValues\");\n    export const template = Symbol(\"template\");\n}\n\nexport const ILoggerSink = ServiceIdentifier<ILoggerSink>(\"ILoggerSink\");\nexport interface ILoggerSink {\n    log(event: LogEvent): void;\n    isEnabled(logLevel: LogLevel): boolean;\n}\n\nexport const enum LogLevel {\n    trace,\n    debug,\n    info,\n    warn,\n    error,\n    critical\n}\n\n@ServiceContract(ILogger)\nexport class DefaultLogger {\n    constructor(\n        @IIoCModule private readonly _iocModule: IIoCModule,\n        @IClock private readonly _clock: IClock,\n        @Many(ILoggerSink) private readonly _sinks: ILoggerSink[]\n    ) { }\n\n    log(logLevel: LogLevel, err: unknown, templateMessage: string, ...params: any[]): void {\n        const properties: Record<string | symbol, any> = {};\n        const message = templateMessage.replaceAll(/\\{([\\w]+)\\}/gi, (original, key) => {\n            if (properties.hasOwnProperty(key)) {\n                return properties[key];\n            }\n            if (params.length) {\n                const result = params.shift();\n                properties[key] = result;\n                return result;\n            }\n            return original;\n        });\n\n        properties[LogEvent.template] = templateMessage;\n\n        if (params.length) {\n            properties[LogEvent.extraValues] = params;\n        }\n        const event: LogEvent = {\n            scope: this._iocModule.path,\n            time: this._clock.utcNow(),\n            logLevel,\n            message,\n            properties,\n            err\n        };\n\n        for (const sink of this._sinks) sink.log(event);\n    }\n\n    trace(templateMessage: string, ...params: any[]): void {\n        this.log(LogLevel.trace, null, templateMessage, ...params);\n    }\n\n    debug(templateMessage: string, ...params: any[]): void {\n        this.log(LogLevel.debug, null, templateMessage, ...params);\n    }\n\n    info(templateMessage: string, ...params: any[]): void {\n        this.log(LogLevel.info, null, templateMessage, ...params);\n    }\n\n    warn(err: unknown, templateMessage: string, ...params: any[]): void {\n        this.log(LogLevel.warn, err, templateMessage, ...params);\n    }\n\n    error(err: unknown, templateMessage: string, ...params: any[]): void {\n        this.log(LogLevel.error, err, templateMessage, ...params);\n    }\n\n    critical(err: unknown, templateMessage: string, ...params: any[]): void {\n        this.log(LogLevel.critical, err, templateMessage, ...params);\n    }\n}\n\nconst DateFormat = new Intl.DateTimeFormat(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hourCycle: \"h24\",\n    fractionalSecondDigits: 3\n});\n\n\n@ServiceContract(ILoggerSink)\nexport class ConsoleLoggerSink implements ILoggerSink {\n    constructor(\n        private _level: LogLevel\n    ) { }\n\n    log({ scope, time, logLevel, message, err, properties }: LogEvent): void {\n        if (this.isEnabled(logLevel)) {\n            const formatedTime = DateFormat.format(time);\n            const log = `[${formatedTime}] [${scope}] ${message}`;\n\n            const args: any[] = [log, properties];\n            if (err) args.push(err);\n\n            switch (logLevel) {\n                case LogLevel.trace:\n                    console.trace(...args);\n                    break;\n                case LogLevel.debug:\n                    console.debug(...args);\n                    break;\n                case LogLevel.info:\n                    console.info(...args);\n                    break;\n                case LogLevel.warn:\n                    console.warn(...args);\n                    break;\n                case LogLevel.error:\n                case LogLevel.critical:\n                    console.error(...args);\n                    break;\n                default:\n                    console.log(message);\n                    break;\n            }\n        }\n    }\n\n    isEnabled(logLevel: LogLevel): boolean {\n        return logLevel >= this._level;\n    }\n}\n","import { ServiceScope } from \"src/service-descriptors\";\nimport { ServiceCollection } from \"../service-collection/service-collection\";\nimport { IClock, SystemClock } from \"./iclock\";\nimport { IConfiguration, Configuration } from \"./iconfiguration\";\n\nimport { DefaultLogger, ConsoleLoggerSink, ILogger, ILoggerSink, LogEvent, LogLevel } from \"./ilogger\";\n\ninterface IServiceCollectionCoreServicesExtensions {\n    /** Add the ConsoleLogger */\n    addConsoleLogger(this: ServiceCollection, level: LogLevel): ServiceCollection;\n    /** Add the system clock */\n    addSystemClock(this: ServiceCollection): ServiceCollection;\n    /** Add configuration service */\n    addConfiguration<T>(this: ServiceCollection, config: T): ServiceCollection;\n}\n\ndeclare module \"../service-collection/service-collection\" {\n    interface ServiceCollection extends IServiceCollectionCoreServicesExtensions { }\n}\n\nfunction addConsoleLogger(this: ServiceCollection, level: LogLevel): ServiceCollection {\n    return this\n        .addSystemClock()\n        .addSingleton(ConsoleLoggerSink, { baseArgs: [level] })\n        .tryAddScoped(DefaultLogger);\n}\n\nfunction addSystemClock(this: ServiceCollection): ServiceCollection {\n    return this.tryAddSingleton(SystemClock);\n}\n\nfunction addConfiguration<T>(this: ServiceCollection, config: T): ServiceCollection {\n    return this.addSingleton(Configuration, { baseArgs: [config] });\n}\n\nObject.assign(ServiceCollection.prototype, <IServiceCollectionCoreServicesExtensions>{\n    addConsoleLogger, addSystemClock, addConfiguration\n});\n\nexport { DefaultLogger, ConsoleLoggerSink, ILogger, ILoggerSink, LogEvent, LogLevel, IConfiguration, IClock };\n","import { Constructor } from \"@aster-js/core\";\r\nimport { IIoCModule, ServiceIdentifier } from \"@aster-js/ioc\";\r\nimport { IAppConfigureHandler } from \"./iapp-configure-handler\";\r\n\r\nexport const IApplicationPart = ServiceIdentifier<IApplicationPart>(\"IApplicationPart\");\r\n\r\n/** Represents a part of an application based on a IoC Container and using it a registry for all its services. */\r\nexport interface IApplicationPart extends IIoCModule {\r\n    /** Active child application part. This state is related to IApplicationPartLifecycle */\r\n    readonly activeChild: IApplicationPart | undefined;\r\n    /** Returns the child application part that use the provided name */\r\n    getChild(name: string): IApplicationPart | undefined;\r\n    /** Configure, Setup, Start and Activate a child application part */\r\n    load(name: string, handlerCtor: Constructor<IAppConfigureHandler>): Promise<IApplicationPart>;\r\n    /** Make a part of the application `activated` to call proper hooks from IApplicationPartLifecycle */\r\n    activate(name: string): Promise<void>;\r\n}\r\n","import { Constructor } from \"@aster-js/core\";\r\nimport { IApplicationPart } from \"./iapplication-part\";\r\nimport { IApplicationPartBuilder } from \"./iapplication-part-builder\";\r\n\r\nexport const configure = Symbol(\"configure\");\r\n\r\nexport interface IAppConfigureHandler {\r\n    [configure](builder: IApplicationPartBuilder, host?: IApplicationPart): void;\r\n}\r\n\r\nexport type AppConfigureDelegate = (builder: IApplicationPartBuilder, host?: IApplicationPart) => void;\r\n\r\nexport namespace IAppConfigureHandler {\r\n    export function create(callback: AppConfigureDelegate): Constructor<IAppConfigureHandler> {\r\n        class CallbackAppConfigureHandler extends CallbackConfigureHandler {\r\n            constructor() {\r\n                super(callback);\r\n            }\r\n        }\r\n        return CallbackAppConfigureHandler;\r\n    }\r\n\r\n    export function resolve(configHandler: Constructor<IAppConfigureHandler> | AppConfigureDelegate): Constructor<IAppConfigureHandler> {\r\n        const proto = configHandler.prototype;\r\n        if (proto && configure in proto) {\r\n            return <Constructor<IAppConfigureHandler>>configHandler;\r\n        }\r\n        return IAppConfigureHandler.create(<AppConfigureDelegate>configHandler);\r\n    }\r\n}\r\n\r\nexport class CallbackConfigureHandler implements IAppConfigureHandler {\r\n    constructor(private readonly _callback: AppConfigureDelegate) { }\r\n\r\n    [configure](builder: IApplicationPartBuilder, host?: IApplicationPart): void {\r\n        this._callback(builder, host);\r\n    }\r\n}\r\n","import { Constructor } from \"@aster-js/core\";\r\nimport { ServiceIdentifier } from \"@aster-js/ioc\";\r\n\r\nexport const IApplicationPartLifecycle = ServiceIdentifier<IApplicationPartLifecycle>(\"IApplicationPartLifecycle\");\r\n\r\nexport namespace ApplicationPartLifecycleHooks {\r\n\r\n    /** Symbol used to identify a method called during setup */\r\n    export const setup = Symbol(\"setup\");\r\n\r\n    /** Symbol used to identify a method when the part is activated */\r\n    export const activated = Symbol(\"activated\");\r\n\r\n    /** Symbol used to identify a method when the part is put in background */\r\n    export const deactivated = Symbol(\"deactivated\");\r\n\r\n    export function invoke(target: IApplicationPartLifecycle, hook: ApplicationPartLifecycleHook): Promise<void> {\r\n        const callback = target[hook];\r\n        return typeof callback === \"function\" ? callback.apply(target) : Promise.resolve();\r\n    }\r\n\r\n    export function hasAny(ctor: Constructor) {\r\n        return setup in ctor.prototype\r\n            || activated in ctor.prototype\r\n            || deactivated in ctor.prototype;\r\n    }\r\n}\r\n\r\nexport type ApplicationPartLifecycleHook =\r\n    typeof ApplicationPartLifecycleHooks.setup\r\n    | typeof ApplicationPartLifecycleHooks.activated\r\n    | typeof ApplicationPartLifecycleHooks.deactivated\r\n\r\n\r\n/** Interface and service id that enumerate all default hooks for services in the context of an application part */\r\nexport interface IApplicationPartLifecycle {\r\n    /** Called during setup */\r\n    [ApplicationPartLifecycleHooks.setup]?(): Promise<void>;\r\n    /** Called when the part is activated */\r\n    [ApplicationPartLifecycleHooks.activated]?(): Promise<void>;\r\n    /** Called when the part is put in background */\r\n    [ApplicationPartLifecycleHooks.deactivated]?(): Promise<void>;\r\n}\r\n","import { ServiceIdentifier } from \"@aster-js/ioc\";\r\nimport { QueryValues, RouteValues } from \"./routing-invocation-context\";\r\nimport { RouteResolutionContext } from \"./route-resolution-context\";\r\nimport { IRoutingHandler } from \"./irouting-handler\";\r\n\r\n/**\r\n * Service Id and implementation for the service in charge of handling the application routing\r\n */\r\nexport const IRouter = ServiceIdentifier<IRouter>(\"IRouter\");\r\nexport interface IRouter {\r\n    /**\r\n     * Gets all routing handlers for current scope\r\n     */\r\n    getHandlers(): Iterable<IRoutingHandler>;\r\n    /**\r\n     * Gets all child router extracted from application part children\r\n     * @param nested Indicate whether or not it should return nested children or only direct children\r\n     */\r\n    getActiveChildren(nested: boolean): AsyncIterable<IRouter>;\r\n    /**\r\n     * Evaluate provided path in current application\r\n     * @param path Path to evaluate\r\n     * @param defaults Default route values\r\n     */\r\n    eval(path: string, defaults?: RouteValues): Promise<boolean>;\r\n    /**\r\n     * Handle part of a path evaluation. Used internally to cascade path parts into child apps\r\n     * @param ctx Context use to resolve routes\r\n     * @param values Route values inherited\r\n     * @param query Query values\r\n     */\r\n    handle(ctx: RouteResolutionContext, values: RouteValues, query: QueryValues): Promise<boolean>;\r\n}\r\n","import { ServiceContract } from \"@aster-js/ioc\";\r\nimport { IApplicationPart } from \"../../abstraction\";\r\nimport { IApplicationPartLifecycle, ApplicationPartLifecycleHooks } from \"../../application-part/iapplication-part-lifecycle\";\r\n\r\nimport { IRouter } from \"../irouter\";\r\n\r\n@ServiceContract(IApplicationPartLifecycle)\r\nexport class DefaultNavigationHandler {\r\n    private readonly _self: this;\r\n    constructor(\r\n        @IRouter private readonly _router: IRouter\r\n    ) {\r\n        this._self = this;\r\n    }\r\n\r\n    async [ApplicationPartLifecycleHooks.setup](): Promise<void> {\r\n        await this._self._router.eval(location.href);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.activated](): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.deactivated](): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","import { Deferred } from \"@aster-js/async\";\nimport { IDisposable } from \"@aster-js/core\";\n\nexport function on<T extends Event>(target: EventTarget, type: string, callback: (evt: T) => void, options?: AddEventListenerOptions | boolean): IDisposable;\nexport function on(target: EventTarget, type: string, callback: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): IDisposable;\nexport function on(target: EventTarget, type: string, callback: EventListenerOrEventListenerObject, options?: AddEventListenerOptions | boolean): IDisposable {\n    target.addEventListener(type, callback, options);\n    return IDisposable.create(() => {\n        target.removeEventListener(type, callback, options);\n    });\n}\n\nexport async function* each<T extends Event>(target: EventTarget, type: string, options?: AddEventListenerOptions | boolean): AsyncIterableIterator<T> {\n    const deferred = new Deferred<T>();\n\n    const buffer: T[] = [];\n    const listener = (ev: T) => {\n        if (deferred.completed) {\n            buffer.push(ev);\n        }\n        else {\n            deferred.resolve(ev);\n        }\n    };\n    target.addEventListener(type, listener as EventListener, options);\n\n    try {\n        do {\n            yield await deferred;\n\n            deferred.reset();\n\n            const pending = buffer.splice(0);\n            yield* pending;\n        }\n        while (true);\n    }\n    finally {\n        target.removeEventListener(type, listener as EventListener, options);\n    }\n}\n","import { ServiceContract } from \"@aster-js/ioc\";\r\nimport { IApplicationPartLifecycle, ApplicationPartLifecycleHooks } from \"../../application-part/iapplication-part-lifecycle\";\r\n\r\nimport { IRouter } from \"../irouter\";\r\nimport { IDisposable } from \"@aster-js/core\";\r\nimport { dom } from \"@aster-js/dom\";\r\n\r\n@ServiceContract(IApplicationPartLifecycle)\r\nexport class HistoryNavigationHandler implements IDisposable {\r\n    private _popstateHandle?: IDisposable;\r\n\r\n    constructor(\r\n        @IRouter private readonly _router: IRouter\r\n    ) { }\r\n\r\n    [ApplicationPartLifecycleHooks.setup](): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.activated](): Promise<void> {\r\n        if (!this._popstateHandle) {\r\n            this._popstateHandle = dom.on(window, \"popstate\", ev => this.onNavigate(<PopStateEvent>ev));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private onNavigate(ev: PopStateEvent): void {\r\n        this._router.eval(location.href, ev.state);\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.deactivated](): Promise<void> {\r\n        IDisposable.safeDispose(this._popstateHandle);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    [Symbol.dispose](): void {\r\n        IDisposable.safeDispose(this._popstateHandle);\r\n    }\r\n}\r\n","import { IDisposable } from \"@aster-js/core\";\r\nimport { dom } from \"@aster-js/dom\";\r\nimport { ServiceContract } from \"@aster-js/ioc\";\r\nimport { IApplicationPartLifecycle, ApplicationPartLifecycleHooks } from \"../../application-part/iapplication-part-lifecycle\";\r\nimport { IRouter } from \"../irouter\";\r\n\r\n@ServiceContract(IApplicationPartLifecycle)\r\nexport class HyperlinkNavigationHandler implements IDisposable {\r\n    private _registration?: IDisposable;\r\n\r\n    constructor(\r\n        @IRouter private readonly _router: IRouter\r\n    ) { }\r\n\r\n    [ApplicationPartLifecycleHooks.setup](): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.activated](): Promise<void> {\r\n        if (!this._registration) {\r\n            this._registration = dom.on(document.body, \"click\", ev => this.onRootClick(<UIEvent>ev));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.deactivated](): Promise<void> {\r\n        IDisposable.safeDispose(this._registration);\r\n        delete this._registration;\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private onRootClick(ev: UIEvent): void {\r\n        const anchor = this.findAnchor(ev);\r\n        if (!anchor) return;\r\n\r\n        const url = new URL(anchor.href, location.href);\r\n        if (location.origin !== url.origin) return;\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n\r\n        if (location.href === url.href) return;\r\n\r\n        this.navigate(url, anchor.innerText);\r\n    }\r\n\r\n    private async navigate(url: URL, title: string): Promise<void> {\r\n        if (await this._router.eval(url.pathname)) {\r\n            history.pushState({}, title, url);\r\n        }\r\n        else {\r\n            location.assign(url);\r\n        }\r\n    }\r\n\r\n    private findAnchor(ev: UIEvent): HTMLAnchorElement | undefined {\r\n        for (const item of ev.composedPath()) {\r\n            if (item instanceof HTMLAnchorElement) return item;\r\n        }\r\n    }\r\n\r\n    [Symbol.dispose](): void {\r\n        IDisposable.safeDispose(this._registration);\r\n    }\r\n}\r\n","\r\nexport const SEGMENT_SEPARATOR = \"/\";\r\nexport const WILDCARD_CHAR = \"*\";\r\nexport const ASSIGN_CHAR = \":\";\r\nexport const NULLABLE_CHAR = \"?\";\r\nexport const RELATIVE_CHAR = \"~\";\r\n","import { RouteResolutionContext } from \"./route-resolution-context\";\r\nimport { RELATIVE_CHAR, WILDCARD_CHAR } from \"./routing-constants\";\r\nimport { RouteValues } from \"./routing-invocation-context\";\r\n\r\nexport interface IRouteSegment {\r\n    match(segment: string | undefined): boolean;\r\n    read(ctx: RouteResolutionContext, values: RouteValues): void;\r\n}\r\n\r\nfunction shiftOrThrow(ctx: RouteResolutionContext, value: string): void {\r\n    const current = ctx.getAt(0);\r\n    if (current !== value) {\r\n        throw new Error(`Invalid token: expected segment equal to \"${value}\" but current segment is equal to \"${current}\"`);\r\n    }\r\n    ctx.shift();\r\n}\r\n\r\nexport class StaticRouteSegment implements IRouteSegment {\r\n\r\n    get segment(): string { return this._segment; }\r\n\r\n    constructor(\r\n        private readonly _segment: string\r\n    ) { }\r\n\r\n    match(segment: string | undefined): boolean {\r\n        return segment === this._segment;\r\n    }\r\n\r\n    read(ctx: RouteResolutionContext, values: RouteValues): void {\r\n        shiftOrThrow(ctx, this._segment);\r\n    }\r\n}\r\n\r\nexport class WildcardRouteSegment implements IRouteSegment {\r\n    static readonly instance = new WildcardRouteSegment();\r\n\r\n    private constructor() { }\r\n\r\n    match(segment: string | undefined): boolean { return true; }\r\n\r\n    read(ctx: RouteResolutionContext, values: RouteValues): void {\r\n        shiftOrThrow(ctx, WILDCARD_CHAR);\r\n    }\r\n}\r\n\r\nexport class RelativeRouteSegment implements IRouteSegment {\r\n    static readonly instance = new RelativeRouteSegment();\r\n\r\n    private constructor() { }\r\n\r\n    match(segment: string | undefined): boolean { return true; }\r\n\r\n    read(ctx: RouteResolutionContext, values: RouteValues): void {\r\n        shiftOrThrow(ctx, RELATIVE_CHAR);\r\n    }\r\n}\r\n\r\nexport class StringRouteSegment implements IRouteSegment {\r\n\r\n    get name(): string { return this._name; }\r\n\r\n    get optional(): boolean { return this._optional; }\r\n\r\n    get defaultValue(): string | null { return this._defaultValue; }\r\n\r\n    constructor(\r\n        private readonly _name: string,\r\n        private readonly _optional: boolean,\r\n        private readonly _defaultValue: string | null\r\n    ) { }\r\n\r\n    match(segment: string | undefined): boolean {\r\n        if (typeof segment === \"undefined\") {\r\n            return this._optional;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    read(ctx: RouteResolutionContext, values: RouteValues): void {\r\n        const value = ctx.shift() || this._defaultValue;\r\n        if (value) this.loadValue(this._name, value, values);\r\n    }\r\n\r\n    protected loadValue(name: string, value: string, values: RouteValues): void {\r\n        values[name] = value;\r\n    }\r\n}\r\n\r\nexport class EnumRouteSegment extends StringRouteSegment {\r\n\r\n    constructor(\r\n        name: string,\r\n        private readonly _enums: string[],\r\n        optional: boolean,\r\n        defaultValue: string | null\r\n    ) {\r\n        super(name, optional, defaultValue);\r\n    }\r\n\r\n    match(segment: string | undefined): boolean {\r\n        if (typeof segment === \"undefined\") {\r\n            return this.optional;\r\n        }\r\n        return this._enums.indexOf(segment) !== -1;\r\n    }\r\n}\r\n\r\nexport class NumberRouteSegment extends StringRouteSegment {\r\n\r\n    match(segment: string | undefined): boolean {\r\n        if (typeof segment === \"undefined\") {\r\n            return this.optional;\r\n        }\r\n        return !isNaN(+segment);\r\n    }\r\n\r\n    protected loadValue(name: string, value: string, values: RouteValues): void {\r\n        values[name] = +value;\r\n    }\r\n}\r\n","import { IRouteSegment, WildcardRouteSegment, RelativeRouteSegment, StaticRouteSegment, NumberRouteSegment, StringRouteSegment, EnumRouteSegment } from \"./iroute-segment\";\r\nimport { RouteResolutionContext } from \"./route-resolution-context\";\r\nimport { RouteValues } from \"./routing-invocation-context\";\r\nimport { ASSIGN_CHAR, NULLABLE_CHAR, SEGMENT_SEPARATOR, WILDCARD_CHAR, RELATIVE_CHAR } from \"./routing-constants\";\r\n\r\n/** */\r\nexport class Route implements Iterable<IRouteSegment>{\r\n    private readonly _segments: readonly IRouteSegment[];\r\n    private readonly _wildcard?: true;\r\n    private readonly _relative?: true;\r\n\r\n    static readonly empty = new Route([]);\r\n\r\n    get wildcard(): boolean { return this._wildcard ?? false; }\r\n\r\n    get relative(): boolean { return this._relative ?? false; }\r\n\r\n    constructor(segments: Iterable<IRouteSegment>) {\r\n        const array = [...segments];\r\n        if (array.length) {\r\n            if (array[array.length - 1] === WildcardRouteSegment.instance) {\r\n                array.pop();\r\n                this._wildcard = true;\r\n            }\r\n\r\n            if (array.length && array[0] === RelativeRouteSegment.instance) {\r\n                array.shift();\r\n                this._relative = true;\r\n            }\r\n        }\r\n        this._segments = array;\r\n    }\r\n\r\n    match(ctx: RouteResolutionContext): boolean {\r\n        if (!this._wildcard && ctx.remaining > this._segments.length) return false;\r\n        if (this._relative && ctx.remaining === ctx.initialSize) return false;\r\n\r\n        for (let idx = 0; idx < this._segments.length; idx++) {\r\n            const value = ctx.getAt(idx);\r\n            if (!this._segments[idx].match(value)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getRouteValues(ctx: RouteResolutionContext): RouteValues {\r\n        const values: RouteValues = {};\r\n        for (let i = 0; i < this._segments.length; i++) {\r\n            this._segments[i].read(ctx, values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    *[Symbol.iterator](): IterableIterator<IRouteSegment> {\r\n        yield* this._segments;\r\n    }\r\n\r\n    static parse(route: string): Route {\r\n        if (!route || route === \"/\") return Route.empty;\r\n\r\n        const segments = Route.parseRoute(route);\r\n        return new Route(segments);\r\n    }\r\n\r\n    private static * parseRoute(route: string): Iterable<IRouteSegment> {\r\n        const segments = route.split(SEGMENT_SEPARATOR).filter(Boolean);\r\n\r\n        if (segments[0] === RELATIVE_CHAR) {\r\n            segments.shift();\r\n            yield RelativeRouteSegment.instance;\r\n        }\r\n\r\n        for (let segment of segments) {\r\n            if (segment === WILDCARD_CHAR) {\r\n                yield WildcardRouteSegment.instance;\r\n                break;\r\n            }\r\n\r\n            if (segment.startsWith(ASSIGN_CHAR)) {\r\n                segment = segment.substring(1);\r\n                // 2 segments when ever their is \"?\": \"\"\r\n                const params = segment.split(NULLABLE_CHAR);\r\n                if (params.length === 2) {\r\n                    yield this.createDynamicSegment(params[0], true, params[1] || null);\r\n                }\r\n                else {\r\n                    yield this.createDynamicSegment(segment, false);\r\n                }\r\n            }\r\n            else {\r\n                yield new StaticRouteSegment(segment);\r\n            }\r\n        }\r\n    }\r\n    // url/:value<enum|enum|enum>\r\n    private static createDynamicSegment(name: string, optional: boolean, defaultValue: string | null = null) {\r\n        if (name.startsWith(\"+\")) {\r\n            return new NumberRouteSegment(name.substring(1), optional, defaultValue);\r\n        }\r\n        const idx = name.indexOf(\"<\");\r\n        if (idx !== -1 && name.endsWith(\">\")) {\r\n            const values = name.substring(idx + 1, name.length - 1).split(\"|\");\r\n            name = name.substring(0, idx);\r\n            return new EnumRouteSegment(name, values, optional, defaultValue);\r\n        }\r\n        return new StringRouteSegment(name, optional, defaultValue);\r\n    }\r\n}\r\n","import { ServiceIdentifier } from \"@aster-js/ioc\";\r\nimport { Route } from \"./route\";\r\nimport { RouteData } from \"./routing-invocation-context\";\r\nimport { IApplicationPart } from \"../abstraction\";\r\n\r\nexport const IRoutingHandler = ServiceIdentifier<IRoutingHandler>(\"IRoutingHandler\");\r\n\r\n/**\r\n * Service ID and Implementation for routing handler.\r\n * A routing handler is in charge handling matching navigation\r\n */\r\nexport interface IRoutingHandler {\r\n    /** Gets the string path used to describe the route */\r\n    readonly path: string;\r\n    /** Route to match with. This route will also extract data from the url */\r\n    readonly route: Route;\r\n    /**\r\n     * Method called when the  route match\r\n     * @param data Route data that contains route values and query values\r\n     * @param app Application that handle the route\r\n     */\r\n    handle(data: RouteData, app: IApplicationPart): Promise<void>;\r\n}\r\n","import { ServiceContract } from \"@aster-js/ioc\";\r\nimport { Route } from \"../route\";\r\nimport { IRoutingHandler } from \"../irouting-handler\";\r\nimport { RouteData, RoutingInvocationContext } from \"../routing-invocation-context\";\r\nimport { IApplicationPart } from \"../../abstraction\";\r\n\r\nexport type RouterAction = (ctx: RoutingInvocationContext) => Promise<void> | void;\r\n\r\n@ServiceContract(IRoutingHandler)\r\nexport class ActionRoutingHandler implements IRoutingHandler {\r\n    private readonly _route: Route;\r\n\r\n    get path(): string { return this._path; }\r\n\r\n    get route(): Route { return this._route; }\r\n\r\n    constructor(\r\n        private readonly _path: string,\r\n        private readonly _action: RouterAction\r\n    ) {\r\n        this._route = Route.parse(_path);\r\n    }\r\n\r\n    handle(data: RouteData, app: IApplicationPart): Promise<void> {\r\n        const result = this._action({ data, app, route: this.route });\r\n        if (result instanceof Promise) return result;\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","import { ServiceContract, ServiceIdentifier } from \"@aster-js/ioc\";\r\nimport { Route } from \"../route\";\r\nimport { IRoutingHandler } from \"../irouting-handler\";\r\nimport { RouteData } from \"../routing-invocation-context\";\r\nimport { IApplicationPart } from \"../../abstraction\";\r\n\r\nexport type ServiceRouterAction<T = any> = (service: T, data: RouteData) => Promise<void> | void;\r\n\r\n@ServiceContract(IRoutingHandler)\r\nexport class ServiceRoutingHandler<T = any> implements IRoutingHandler {\r\n    private readonly _route: Route;\r\n\r\n    get path(): string { return this._path; }\r\n\r\n    get route(): Route { return this._route; }\r\n\r\n    constructor(private readonly _path: string,\r\n        private readonly _serviceId: ServiceIdentifier,\r\n        private readonly _action: ServiceRouterAction<T>) {\r\n        this._route = Route.parse(_path);\r\n    }\r\n\r\n    handle(data: RouteData, app: IApplicationPart): Promise<void> {\r\n        const service = app.services.get(this._serviceId, true);\r\n        const result = this._action(service, data);\r\n        if (result instanceof Promise) return result;\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","import { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface IAsyncActionQueryMixin<T = any> {\n    each(callback: (item: any, rank: number) => Promise<void> | void): Promise<this>;\n}\n\nexport const IAsyncActionQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements IAsyncActionQueryMixin {\n        async each(callback: (item: any, rank: number) => Promise<void> | void): Promise<this> {\n            let rank = 0;\n            for await (const item of this) {\n                await callback(item, rank++);\n            }\n            return this;\n        }\n    };\n","import { QueryMixin } from \"./apply-mixins\";\n\nexport interface IActionQueryMixin<T = any> {\n    each(callback: (item: any, rank: number) => void): this;\n    eachAsync(callback: (item: any, rank: number) => Promise<void>): Promise<this>;\n}\n\nexport const IActionQueryMixin: QueryMixin = q =>\n    class extends q implements IActionQueryMixin {\n        each(callback: (item: any, rank: number) => void): this {\n            let rank = 0;\n            for (const item of this) {\n                callback(item, rank++);\n            }\n            return this;\n        }\n\n        async eachAsync(callback: (item: any, rank: number) => Promise<void>): Promise<this> {\n            let rank = 0;\n            for (const item of this) {\n                await callback(item, rank++);\n            }\n            return this;\n        }\n    };\n","\nimport { AsyncTransformDelegate, IAsyncQuery } from \"../iquery\";\nimport { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface IChunkAsyncQueryMixin<T = any> {\n    chunk(chunkSize: number): IAsyncQuery<T[]>;\n}\n\nexport const IChunkAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements IChunkAsyncQueryMixin {\n        chunk(chunkSize: number): IAsyncQuery {\n            const callback = createFilterCallback(chunkSize);\n            return this.transformAsync(callback);\n        }\n    };\n\nfunction createFilterCallback(chunkSize: number): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        const buffer = Array(chunkSize);\n        let idx = 0;\n        for await (const item of src) {\n            buffer[idx] = item;\n            if (++idx === chunkSize) {\n                idx = 0;\n                yield buffer.slice(0);\n            }\n        }\n        if (idx) {\n            yield buffer.slice(0, idx);\n        }\n    }\n}\n","import { IQuery, TransformDelegate } from \"../iquery\";\nimport { QueryMixin } from \"./apply-mixins\";\n\nexport interface IChunkQueryMixin<T = any> {\n    chunk(batchSize: number): IQuery<T[]>;\n}\n\nexport const IChunkQueryMixin: QueryMixin = q =>\n    class extends q implements IChunkQueryMixin {\n        chunk(chunkSize: number): IQuery {\n            const callback = createFilterCallback(chunkSize);\n            return this.transform(callback);\n        }\n    };\n\nfunction createFilterCallback(chunkSize: number): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        const buffer = Array(chunkSize);\n        let idx = 0;\n        for (const item of src) {\n            buffer[idx] = item;\n            if (++idx === chunkSize) {\n                idx = 0;\n                yield buffer.slice(0);\n            }\n        }\n        if (idx) {\n            yield buffer.slice(0, idx);\n        }\n    }\n}\n","export interface IDistinctList {\n    has(item: any): boolean;\n    tryAdd(item: any): boolean;\n}\n\nexport namespace DistinctList {\n\n    export function create(comparer?: (left: any, right: any) => boolean): IDistinctList {\n        if (comparer) {\n            return new DistinctArray([], comparer);\n        }\n        return new DistinctSet([]);\n    }\n\n    export function fromValues(values: Iterable<any>, comparer?: (left: any, right: any) => boolean): IDistinctList {\n        if (comparer) {\n            return new DistinctArray(values, comparer);\n        }\n        return new DistinctSet(values);\n    }\n}\n\nclass DistinctSet {\n    private readonly _values: Set<any>;\n\n    constructor(values: Iterable<any>) {\n        this._values = new Set(values);\n    }\n\n    has(item: any): boolean {\n        return this._values.has(item);\n    }\n\n    tryAdd(item: any): boolean {\n        if (this.has(item)) return false;\n        this._values.add(item);\n        return true;\n    }\n}\n\nclass DistinctArray {\n    private readonly _values: Array<any>;\n\n    constructor(\n        values: Iterable<any>,\n        private readonly _comparer: (left: any, right: any) => boolean\n    ) {\n        this._values = [...values];\n    }\n\n    has(item: any): boolean {\n        return !this._values.every(x => !this._comparer(x, item));\n    }\n\n    tryAdd(item: any): boolean {\n        if (this.has(item)) return false;\n        this._values.push(item);\n        return true;\n    }\n}\n","import { AsyncTransformDelegate, IAsyncQuery } from \"../iquery\";\nimport { AsyncQueryMixin } from \"./apply-mixins\";\nimport { DistinctList } from \"./idistinct-list\";\n\nexport interface IFilterAsyncQueryMixin<T = any> {\n    skipWhile(predicate: (item: T, rank: number) => boolean): IAsyncQuery<T>;\n    takeWhile(predicate: (item: T, rank: number) => boolean): IAsyncQuery<T>;\n    filter(predicate: (item: T, rank: number) => boolean): IAsyncQuery<T>;\n    ofType<R extends T>(predicate: (item: T) => item is R): IAsyncQuery<R>;\n    distinct(comparer?: (left: T, right: T) => boolean): IAsyncQuery<T>;\n    intersect(items: Iterable<T>, comparer?: (left: T, right: T) => boolean): IAsyncQuery<T>;\n    except(items: Iterable<T>, comparer?: (left: T, right: T) => boolean): IAsyncQuery<T>;\n}\n\nexport const IFilterAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements IFilterAsyncQueryMixin {\n        skipWhile(predicate: (item: any, rank: number) => Promise<boolean> | boolean): IAsyncQuery {\n            const callback = createSkipWhileCallback(predicate);\n            return this.transformAsync(callback);\n        }\n        takeWhile(predicate: (item: any, rank: number) => Promise<boolean> | boolean): IAsyncQuery {\n            const callback = createTakeWhileCallback(predicate);\n            return this.transformAsync(callback);\n        }\n        filter(predicate: (item: any, rank: number) => Promise<boolean> | boolean): IAsyncQuery {\n            const callback = createFilterCallback(predicate);\n            return this.transformAsync(callback);\n        }\n        ofType(predicate: (item: any) => item is any): IAsyncQuery {\n            return this.filter(predicate);\n        }\n        distinct(comparer?: (left: any, right: any) => boolean): IAsyncQuery {\n            const predicate = createDistinctCallback(comparer);\n            return this.transformAsync(predicate);\n        }\n        intersect(items: Iterable<any>, comparer?: (left: any, right: any) => boolean): IAsyncQuery {\n            const predicate = createIntersectCallback(items, comparer);\n            return this.transformAsync(predicate);\n        }\n        except(items: Iterable<any>, comparer?: (left: any, right: any) => boolean): IAsyncQuery {\n            const predicate = createExceptCallback(items, comparer);\n            return this.transformAsync(predicate);\n        }\n    };\n\nfunction createTakeWhileCallback(callback: (item: any, rank: number) => Promise<boolean> | boolean): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        let rank = 0;\n        for await (const item of src) {\n            if (!await callback(item, rank++)) break;\n            yield item;\n        }\n    }\n}\n\nfunction createSkipWhileCallback(callback: (item: any, rank: number) => Promise<boolean> | boolean): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        let rank = 0;\n        let skip = true;\n        for await (const item of src) {\n            if (skip) {\n                if (await callback(item, rank++)) continue;\n                skip = false;\n            }\n            yield item;\n        }\n    }\n}\n\nfunction createFilterCallback(callback: (item: any, rank: number) => Promise<boolean> | boolean): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        let rank = 0;\n        for await (const item of src) {\n            if (await callback(item, rank++)) yield item;\n        }\n    }\n}\n\nfunction createDistinctCallback(comparer?: (left: any, right: any) => boolean): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        const items = DistinctList.create(comparer);\n        for await (const item of src) {\n            if (items.tryAdd(item)) yield item;\n        }\n    }\n}\n\nfunction createIntersectCallback(values: Iterable<any>, comparer?: (left: any, right: any) => boolean): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        const except = DistinctList.fromValues(values, comparer);\n        for await (const item of src) {\n            if (except.has(item)) yield item;\n        }\n    }\n}\n\nfunction createExceptCallback(values: Iterable<any>, comparer?: (left: any, right: any) => boolean): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        const except = DistinctList.fromValues(values, comparer);\n        for await (const item of src) {\n            if (!except.has(item)) yield item;\n        }\n    }\n}\n","import { IQuery, TransformDelegate } from \"../iquery\";\nimport { QueryMixin } from \"./apply-mixins\";\nimport { DistinctList } from \"./idistinct-list\";\n\nexport interface IFilterQueryMixin<T = any> {\n    skipWhile(predicate: (item: T, rank: number) => boolean): IQuery<T>;\n    takeWhile(predicate: (item: T, rank: number) => boolean): IQuery<T>;\n    filter(predicate: (item: T, rank: number) => boolean): IQuery<T>;\n    ofType<R extends T>(predicate: (item: T) => item is R): IQuery<R>;\n    distinct(comparer?: (left: T, right: T) => boolean): IQuery<T>;\n    intersect(items: Iterable<T>, comparer?: (left: T, right: T) => boolean): IQuery<T>;\n    except(items: Iterable<T>, comparer?: (left: T, right: T) => boolean): IQuery<T>;\n}\n\nexport const IFilterQueryMixin: QueryMixin = q =>\n    class extends q implements IFilterQueryMixin {\n        skipWhile(predicate: (item: any, rank: number) => boolean): IQuery {\n            const callback = createSkipWhileCallback(predicate);\n            return this.transform(callback);\n        }\n        takeWhile(predicate: (item: any, rank: number) => boolean): IQuery {\n            const callback = createTakeWhileCallback(predicate);\n            return this.transform(callback);\n        }\n        filter(predicate: (item: any, rank: number) => boolean): IQuery {\n            const callback = createFilterCallback(predicate);\n            return this.transform(callback);\n        }\n        ofType(predicate: (item: any) => item is any): IQuery {\n            return this.filter(predicate);\n        }\n        distinct(comparer?: (left: any, right: any) => boolean): IQuery {\n            const predicate = createDistinctCallback(comparer);\n            return this.transform(predicate);\n        }\n        intersect(items: Iterable<any>, comparer?: (left: any, right: any) => boolean): IQuery {\n            const predicate = createIntersectCallback(items, comparer);\n            return this.transform(predicate);\n        }\n        except(items: Iterable<any>, comparer?: (left: any, right: any) => boolean): IQuery {\n            const predicate = createExceptCallback(items, comparer);\n            return this.transform(predicate);\n        }\n    };\n\nfunction createTakeWhileCallback(callback: (item: any, rank: number) => boolean): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        let rank = 0;\n        for (const item of src) {\n            if (!callback(item, rank++)) break;\n            yield item;\n        }\n    }\n}\n\nfunction createSkipWhileCallback(callback: (item: any, rank: number) => boolean): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        let rank = 0;\n        let skip = true;\n        for (const item of src) {\n            if (skip) {\n                if (callback(item, rank++)) continue;\n                skip = false;\n            }\n            yield item;\n        }\n    }\n}\n\nfunction createFilterCallback(callback: (item: any, rank: number) => boolean): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        let rank = 0;\n        for (const item of src) {\n            if (callback(item, rank++)) yield item;\n        }\n    }\n}\n\nfunction createDistinctCallback(comparer?: (left: any, right: any) => boolean): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        const items = DistinctList.create(comparer);\n        for (const item of src) {\n            if (items.tryAdd(item)) yield item;\n        }\n    }\n}\n\nfunction createIntersectCallback(values: Iterable<any>, comparer?: (left: any, right: any) => boolean): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        const except = DistinctList.fromValues(values, comparer);\n        for (const item of src) {\n            if (except.has(item)) yield item;\n        }\n    }\n}\n\nfunction createExceptCallback(values: Iterable<any>, comparer?: (left: any, right: any) => boolean): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        const except = DistinctList.fromValues(values, comparer);\n        for (const item of src) {\n            if (!except.has(item)) yield item;\n        }\n    }\n}\n","import { HashFactory, Lookup } from \"@aster-js/collections\";\nimport { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface ILookupAsyncQueryMixin<T = any> {\n    lookup<K, V = T>(keyPredicate: (item: T) => K, hashFactory?: HashFactory<K>, valuePredicate?: (item: T) => V): Promise<Lookup<K, V>>;\n}\n\nexport const ILookupAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements ILookupAsyncQueryMixin {\n       async lookup(keyPredicate: (item: any) => any, hashFactory?: HashFactory<any>, valuePredicate?: (item: any) => any): Promise<Lookup<any, any>> {\n            valuePredicate ??= item => item;\n\n            const lookup = new Lookup(hashFactory);\n            for await (const item of this) {\n                lookup.add(\n                    keyPredicate(item),\n                    valuePredicate(item)\n                );\n            }\n            return lookup;\n        }\n    };\n","import { HashFactory, Lookup } from \"@aster-js/collections\";\nimport { QueryMixin } from \"./apply-mixins\";\n\nexport interface ILookupQueryMixin<T = any> {\n    lookup<K, V = T>(keyPredicate: (item: T) => K, hashFactory?: HashFactory<K>, valuePredicate?: (item: T) => V): Lookup<K, V>;\n}\n\nexport const ILookupQueryMixin: QueryMixin = q =>\n    class extends q implements ILookupQueryMixin {\n        lookup(keyPredicate: (item: any) => any, hashFactory?: HashFactory<any>, valuePredicate?: (item: any) => any): Lookup<any, any> {\n            valuePredicate ??= item => item;\n\n            const lookup = new Lookup(hashFactory);\n            for (const item of this) {\n                lookup.add(\n                    keyPredicate(item),\n                    valuePredicate(item)\n                );\n            }\n            return lookup;\n        }\n    };\n","import { AsyncTransformDelegate, IAsyncQuery } from \"../iquery\";\nimport { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface IMapAsyncQueryMixin<T = any> {\n    map<R>(callback: (item: T, rank: number) => R): IAsyncQuery<R>;\n    flatMap<R>(callback: (item: T, rank: number) => Iterable<R> | AsyncIterable<R>): IAsyncQuery<R>;\n}\n\nexport const IMapAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements IMapAsyncQueryMixin {\n        map<R>(callback: (item: any, rank: number) => any | Promise<any>): IAsyncQuery {\n            const predicate = createMapCallback(callback);\n            return this.transformAsync(predicate);\n        }\n        flatMap(callback: (item: any, rank: number) => Iterable<any> | AsyncIterable<any>): IAsyncQuery {\n            const predicate = createFlatMapCallback(callback);\n            return this.transformAsync(predicate);\n        }\n    };\n\nfunction createMapCallback(callback: (item: any, rank: number) => any | Promise<any>): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        let rank = 0;\n        for await (const item of src) {\n            yield await callback(item, rank++);\n        }\n    }\n}\n\nfunction createFlatMapCallback(callback: (item: any, rank: number) => Iterable<any> | AsyncIterable<any>): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        let rank = 0;\n        for await (const item of src) {\n            yield* callback(item, rank++);\n        }\n    };\n}\n","import { IQuery, TransformDelegate } from \"../iquery\";\nimport { QueryMixin } from \"./apply-mixins\";\n\nexport interface IMapQueryMixin<T = any> {\n    map<R>(callback: (item: T, rank: number) => R): IQuery<R>;\n    flatMap<R>(callback: (item: T, rank: number) => Iterable<R>): IQuery<R>;\n}\n;\n\nexport const IMapQueryMixin: QueryMixin = q =>\n    class extends q implements IMapQueryMixin {\n        map(callback: (item: any, rank: number) => any): IQuery {\n            const predicate = createMapCallback(callback);\n            return this.transform(predicate);\n        }\n        flatMap(callback: (item: any, rank: number) => Iterable<any>): IQuery {\n            const predicate = createFlatMapCallback(callback);\n            return this.transform(predicate);\n        }\n    };\n\nfunction createMapCallback(callback: (item: any, rank: number) => any): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        let rank = 0;\n        for (const item of src) {\n            yield callback(item, rank++);\n        }\n    };\n}\n\nfunction createFlatMapCallback(callback: (item: any, rank: number) => Iterable<any>): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        let rank = 0;\n        for (const item of src) {\n            yield* callback(item, rank++);\n        }\n    };\n}\n","import { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface IScalarAsyncQueryMixin<T = any> {\n    includes(value: T, comparer?: (left: T, right: T) => boolean): Promise<boolean>;\n    hasAny(predicate?: (item: T, rank: number) => Promise<boolean> | boolean): Promise<boolean>;\n    every(predicate: (item: T, rank: number) => Promise<boolean> | boolean): Promise<boolean>;\n    first(fallback: T): Promise<T>;\n    first(): Promise<T | undefined>;\n    findFirst(predicate: (item: T, rank: number) => Promise<boolean> | boolean, fallback: T): Promise<T>;\n    findFirst(predicate: (item: T, rank: number) => Promise<boolean> | boolean): Promise<T | undefined>;\n    findLast(predicate: (item: T, rank: number) => Promise<boolean> | boolean, fallback: T): Promise<T>;\n    findLast(predicate: (item: T, rank: number) => Promise<boolean> | boolean): Promise<T | undefined>;\n    last(fallback: T): Promise<T>;\n    last(): Promise<T | undefined>;\n    reduce<R>(reducer: (previous: R, current: T) => R, seed: R): Promise<R>;\n}\n\nconst NotFound = Symbol();\n\nexport const IScalarAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements IScalarAsyncQueryMixin {\n\n        async includes(value: any, comparer: (left: any, right: any) => boolean = Object.is): Promise<boolean> {\n            for await (const item of this) if (comparer(value, item)) return true;\n            return false;\n        }\n\n        async hasAny(predicate?: (item: any, rank: number) => Promise<boolean> | boolean): Promise<boolean> {\n            predicate ??= _ => true;\n\n            let rank = 0;\n            for await (const item of this) if (await predicate(item, rank++)) return true;\n            return false;\n        }\n\n        async every(predicate: (item: any, rank: number) => Promise<boolean> | boolean): Promise<boolean> {\n            let rank = 0;\n            for await (const item of this) if (!await predicate(item, rank++)) return false;\n            return true;\n        }\n\n        async first(fallback?: any): Promise<any> {\n            for await (const item of this) return item;\n            return fallback;\n        }\n\n        async findFirst(predicate: (item: any, rank: number) => Promise<boolean> | boolean, fallback?: any): Promise<any> {\n            let rank = 0;\n            for await (const item of this) if (await predicate(item, rank++)) return item;\n            return fallback;\n        }\n\n        async findLast(predicate: (item: any, rank: number) => Promise<boolean> | boolean, fallback?: any): Promise<any> {\n            let rank = 0;\n            let last: any = NotFound;\n            for await (const item of this) if (await predicate(item, rank++)) last = item;\n            return last !== NotFound ? last : fallback;\n        }\n\n        async last(fallback?: any): Promise<any> {\n            let result = fallback;\n            for await (const item of this) result = item;\n            return result;\n        }\n\n        async count(): Promise<number> {\n            let result = 0;\n            for await (const _ of this) result++;\n            return result;\n        }\n\n        async reduce(reducer: (previous: any, current: any) => Promise<any> | any, seed: any): Promise<any> {\n            let previous = seed;\n            for await (const item of this) previous = await reducer(previous, item);\n            return previous;\n        }\n    };\n","import { QueryMixin } from \"./apply-mixins\";\n\nexport interface IScalarQueryMixin<T = any> {\n    includes(value: T, comparer?: (left: T, right: T) => boolean): boolean;\n    hasAny(predicate?: (item: T, rank: number) => boolean): boolean;\n    every(predicate: (item: T, rank: number) => boolean): boolean;\n    first(fallback: T): T;\n    first(): T | undefined;\n    findFirst(predicate: (item: T, rank: number) => boolean, fallback: T): T;\n    findFirst(predicate: (item: T, rank: number) => boolean): T | undefined;\n    findLast(predicate: (item: T, rank: number) => boolean, fallback: T): T;\n    findLast(predicate: (item: T, rank: number) => boolean): T | undefined\n    last(fallback: T): T;\n    last(): T | undefined;\n    reduce<R>(reducer: (previous: R, current: T) => R, seed: R): R;\n}\n\nconst NotFound = Symbol();\n\nexport const IScalarQueryMixin: QueryMixin = q =>\n    class extends q implements IScalarQueryMixin {\n\n        includes(value: any, comparer: (left: any, right: any) => boolean = Object.is): boolean {\n            for (const item of this) if (comparer(value, item)) return true;\n            return false;\n        }\n\n        hasAny(predicate?: (item: any, rank: number) => boolean): boolean {\n            predicate ??= _ => true;\n\n            let rank = 0;\n            for (const item of this) if (predicate(item, rank++)) return true;\n            return false;\n        }\n\n        every(predicate: (item: any, rank: number) => boolean): boolean {\n            let rank = 0;\n            for (const item of this) if (!predicate(item, rank++)) return false;\n            return true;\n        }\n\n        first(fallback?: any): any {\n            for (const item of this) return item;\n            return fallback;\n        }\n\n        findFirst(predicate: (item: any, rank: number) => boolean, fallback?: any): any {\n            let rank = 0;\n            for (const item of this) if (predicate(item, rank++)) return item;\n            return fallback;\n        }\n\n        findLast(predicate: (item: any, rank: number) => boolean, fallback?: any): any {\n            let rank = 0;\n            let last: any = NotFound;\n            for (const item of this) if (predicate(item, rank++)) last = item;\n            return last !== NotFound ? last : fallback;\n        }\n\n        last(fallback?: any): any {\n            let result = fallback;\n            for (const item of this) result = item;\n            return result;\n        }\n\n        count(): number {\n            let result = 0;\n            for (const _ of this) result++;\n            return result;\n        }\n\n        reduce(reducer: (previous: any, current: any) => any, seed: any): any {\n            let previous = seed;\n            for (const item of this) previous = reducer(previous, item);\n            return previous;\n        }\n    };\n","import { AsyncTransformDelegate, IAsyncQuery } from \"../iquery\";\nimport { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface ISliceAsyncQueryMixin<T = any> {\n    skip(skip: number): IAsyncQuery<T>;\n    take(take: number): IAsyncQuery<T>;\n    slice(skip: number, take: number): IAsyncQuery<T>;\n}\n\nexport const ISliceAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements ISliceAsyncQueryMixin {\n\n        skip(skip: number): IAsyncQuery {\n            const predicate = createSlicePredicate(skip, -1);\n            return this.transformAsync(predicate);\n        }\n\n        take(take: number): IAsyncQuery {\n            const predicate = createSlicePredicate(0, take);\n            return this.transformAsync(predicate);\n        }\n\n        slice(skip: number, take: number): IAsyncQuery {\n            const predicate = createSlicePredicate(skip, take);\n            return this.transformAsync(predicate);\n        }\n    };\n\nfunction createSlicePredicate(skip: number, take: number): AsyncTransformDelegate {\n    const end = skip + take - 1;\n    return async function* (src: AsyncIterable<any>) {\n        let idx = 0;\n        for await (const item of src) {\n            if (idx < skip) continue;\n            if (idx > end) break;\n            yield item;\n        }\n    }\n}\n","import { IQuery, TransformDelegate } from \"../iquery\";\nimport { QueryMixin } from \"./apply-mixins\";\n\nexport interface ISliceQueryMixin<T = any> {\n    skip(skip: number): IQuery<T>;\n    take(take: number): IQuery<T>;\n    slice(skip: number, take: number): IQuery<T>;\n}\n\nexport const ISliceQueryMixin: QueryMixin = q =>\n    class extends q implements ISliceQueryMixin {\n\n        skip(skip: number): IQuery {\n            const predicate = createSlicePredicate(skip, -1);\n            return this.transform(predicate);\n        }\n\n        take(take: number): IQuery {\n            const predicate = createSlicePredicate(0, take);\n            return this.transform(predicate);\n        }\n\n        slice(skip: number, take: number): IQuery<any> {\n            const predicate = createSlicePredicate(skip, take);\n            return this.transform(predicate);\n        }\n    };\n\nfunction createSlicePredicate(skip: number, take: number): TransformDelegate {\n    const end = skip + take - 1;\n    return function* (src: Iterable<any>) {\n        let idx = 0;\n        for (const item of src) {\n            if (idx < skip) continue;\n            if (idx > end) break;\n            yield item;\n        }\n    }\n}\n","import { ISortedAsyncQuery } from \"../iquery\";\nimport { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface ISortAsyncQueryMixin<T = any> {\n    sortBy(predicate: (item: T) => any, desc?: boolean): ISortedAsyncQuery<T>;\n}\n\nexport const ISortAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements ISortAsyncQueryMixin {\n        sortBy(predicate: (item: any) => any, desc: boolean = false): ISortedAsyncQuery {\n            const lt = desc ? 1 : -1;\n            const gt = desc ? -1 : 1;\n\n            const sortFn = (left: any, right: any) => {\n                const leftValue = predicate(left);\n                const rightValue = predicate(right);\n                if (leftValue == rightValue) return 0;\n                return leftValue < rightValue ? lt : gt;\n            };\n            return this.sort(sortFn);\n        }\n    };\n","import { ISortedQuery } from \"../iquery\";\nimport { QueryMixin } from \"./apply-mixins\";\n\nexport interface ISortQueryMixin<T = any> {\n    sortBy(predicate: (item: any) => any, desc?: boolean): ISortedQuery<T>\n}\n\nexport const ISortQueryMixin: QueryMixin = q =>\n    class extends q implements ISortQueryMixin {\n        sortBy(predicate: (item: any) => any, desc: boolean = false): ISortedQuery {\n            const lt = desc ? 1 : -1;\n            const gt = desc ? -1 : 1;\n\n            const sortFn = (left: any, right: any) => {\n                const leftValue = predicate(left);\n                const rightValue = predicate(right);\n                if (leftValue == rightValue) return 0;\n                return leftValue < rightValue ? lt : gt;\n            };\n            return this.sort(sortFn);\n        }\n    };\n","import { AsyncTransformDelegate, IAsyncQuery } from \"../iquery\";\nimport { AsyncQueryMixin } from \"./apply-mixins\";\n\nexport interface IUnionAsyncQueryMixin<T = any> {\n    union(iterable: Iterable<T> | AsyncIterable<T>): IAsyncQuery<T>;\n    append(item: T): IAsyncQuery<T>;\n    prepend(item: T): IAsyncQuery<T>;\n}\n\nexport const IUnionAsyncQueryMixin: AsyncQueryMixin = q =>\n    class extends q implements IUnionAsyncQueryMixin {\n        union(iterable: Iterable<any> | AsyncIterable<any>): IAsyncQuery {\n            const predicate = createUnion(iterable);\n            return this.transformAsync(predicate);\n        }\n        append(item: any): IAsyncQuery {\n            const predicate = createAppend(item);\n            return this.transformAsync(predicate);\n        }\n        prepend(item: any): IAsyncQuery {\n            const predicate = createPrepend(item);\n            return this.transformAsync(predicate);\n        }\n    };\n\nfunction createUnion(iterable: Iterable<any> | AsyncIterable<any>): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        yield* src;\n        yield* iterable;\n    }\n}\n\nfunction createAppend(item: any): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        yield* src;\n        yield item;\n    }\n}\n\nfunction createPrepend(item: any): AsyncTransformDelegate {\n    return async function* (src: AsyncIterable<any>) {\n        yield item;\n        yield* src;\n    }\n}\n","import { IQuery, TransformDelegate } from \"../iquery\";\nimport { QueryMixin } from \"./apply-mixins\";\n\nexport interface IUnionQueryMixin<T = any> {\n    union(iterable: Iterable<T>): IQuery<T>;\n    append(item: T): IQuery<T>;\n    prepend(item: T): IQuery<T>;\n}\n\nexport const IUnionQueryMixin: QueryMixin = q =>\n    class extends q implements IUnionQueryMixin {\n        union(iterable: Iterable<any>): IQuery {\n            const predicate = createUnion(iterable);\n            return this.transform(predicate);\n        }\n        append(item: any): IQuery {\n            const predicate = createAppend(item);\n            return this.transform(predicate);\n        }\n        prepend(item: any): IQuery {\n            const predicate = createPrepend(item);\n            return this.transform(predicate);\n        }\n    };\n\nfunction createUnion(iterable: Iterable<any>): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        yield* src;\n        yield* iterable;\n    }\n}\n\nfunction createAppend(item: any): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        yield* src;\n        yield item;\n    }\n}\n\nfunction createPrepend(item: any): TransformDelegate {\n    return function* (src: Iterable<any>) {\n        yield item;\n        yield* src;\n    }\n}\n","import { Constructor } from \"@aster-js/core\";\nimport { IAsyncQuery, IQuery } from \"../iquery\";\n\nexport type QueryConstructor = Constructor<IQuery>;\n\nexport type AsyncQueryConstructor = Constructor<IAsyncQuery>;\n\nexport type QueryMixin = (q: QueryConstructor) => QueryConstructor;\n\nexport type AsyncQueryMixin = (q: AsyncQueryConstructor) => AsyncQueryConstructor;\n\nexport function QueryMixins(...mixins: AsyncQueryMixin[]): ClassDecorator;\nexport function QueryMixins(...mixins: QueryMixin[]): ClassDecorator;\nexport function QueryMixins(...mixins: (QueryMixin | AsyncQueryMixin)[]): ClassDecorator {\n    return function (ctor: any) {\n        return mixins.reduce((prev, mixin) => mixin(prev), ctor);\n    }\n}\n","import { IAsyncActionQueryMixin } from \"./action-async-query-mixin\";\nimport { IActionQueryMixin } from \"./action-query-mixin\";\nimport { IChunkAsyncQueryMixin } from \"./chunk-async-query-mixin\";\nimport { IChunkQueryMixin } from \"./chunk-query-mixin\";\nimport { IFilterAsyncQueryMixin } from \"./filter-async-query-mixin\";\nimport { IFilterQueryMixin } from \"./filter-query-mixin\";\nimport { ILookupAsyncQueryMixin } from \"./lookup-async-query-mixin\";\nimport { ILookupQueryMixin } from \"./lookup-query-mixin\";\nimport { IMapAsyncQueryMixin } from \"./map-async-query-mixin\";\nimport { IMapQueryMixin } from \"./map-query-mixin\";\nimport { IScalarAsyncQueryMixin } from \"./scalar-async-query-mixin\";\nimport { IScalarQueryMixin } from \"./scalar-query-mixin\";\nimport { ISliceAsyncQueryMixin } from \"./slice-async-query-mixin\";\nimport { ISliceQueryMixin } from \"./slice-query-mixin\";\nimport { ISortAsyncQueryMixin } from \"./sort-async-query-mixin\";\nimport { ISortQueryMixin } from \"./sort-query-mixin\";\nimport { IUnionAsyncQueryMixin } from \"./union-async-query-mixin\";\nimport { IUnionQueryMixin } from \"./union-query-mixin\";\n\nexport * from \"./apply-mixins\";\nexport * from \"./filter-query-mixin\";\nexport * from \"./scalar-query-mixin\";\nexport * from \"./slice-query-mixin\";\nexport * from \"./lookup-query-mixin\";\n\nexport interface IIterableMixins<T> extends\n    IActionQueryMixin<T>,\n    IFilterQueryMixin<T>,\n    IMapQueryMixin<T>,\n    IScalarQueryMixin<T>,\n    ILookupQueryMixin<T>,\n    ISliceQueryMixin<T>,\n    IChunkQueryMixin<T>,\n    IUnionQueryMixin<T>,\n    ISortQueryMixin<T> { }\n\nexport const IIterableMixins = [\n    IActionQueryMixin,\n    IFilterQueryMixin,\n    IMapQueryMixin,\n    IScalarQueryMixin,\n    ILookupQueryMixin,\n    ISliceQueryMixin,\n    IChunkQueryMixin,\n    IUnionQueryMixin,\n    ISortQueryMixin\n];\n\nexport interface IAsyncIterableMixins<T> extends\n    IAsyncActionQueryMixin<T>,\n    IFilterAsyncQueryMixin<T>,\n    IMapAsyncQueryMixin<T>,\n    IChunkAsyncQueryMixin<T>,\n    IScalarAsyncQueryMixin<T>,\n    ILookupAsyncQueryMixin<T>,\n    ISliceAsyncQueryMixin<T>,\n    IUnionAsyncQueryMixin<T>,\n    ISortAsyncQueryMixin<T> { }\n\nexport const IAsyncIterableMixins = [\n    IAsyncActionQueryMixin,\n    IFilterAsyncQueryMixin,\n    IMapAsyncQueryMixin,\n    IChunkAsyncQueryMixin,\n    IScalarAsyncQueryMixin,\n    ILookupAsyncQueryMixin,\n    ISliceAsyncQueryMixin,\n    IUnionAsyncQueryMixin,\n    ISortAsyncQueryMixin\n];\n","import { AsyncTransformDelegate, IAsyncQuery, IQuery, ISortedQuery, TransformDelegate } from \"./iquery\";\nimport { IIterableMixins, QueryMixins } from \"./mixins\";\n\nexport interface QueryBase<T> extends IIterableMixins<T> { }\n\n@QueryMixins(...IIterableMixins)\nexport abstract class QueryBase<T> implements IQuery<T> {\n\n    sort(sortFn: (left: any, right: any) => number): ISortedQuery<T> { throw new Error(); }\n\n    transform<R>(predicate: TransformDelegate<T, R>): IQuery<R>  { throw new Error(); }\n\n    transformAsync<R>(predicate: AsyncTransformDelegate<T, R>): IAsyncQuery<R>  { throw new Error(); }\n\n    abstract [Symbol.iterator](): IterableIterator<T>;\n\n    async *[Symbol.asyncIterator](): AsyncIterator<T> {\n        yield* this;\n    }\n}\n","import { QueryBase } from \"./query-base\";\n\nexport class ArrayQuery<T> extends QueryBase<T> {\n\n    constructor(\n        readonly src: readonly T[]\n    ) { super(); }\n\n    *[Symbol.iterator](): IterableIterator<T> {\n        yield* this.src;\n    }\n}\n","import { ArrayQuery } from \"./array-query\";\nimport { IAsyncQuery, AsyncTransformDelegate, ISortedAsyncQuery } from \"./iquery\";\nimport { IAsyncIterableMixins, QueryMixins } from \"./mixins\";\n\nexport interface AsyncQueryBase<T> extends IAsyncIterableMixins<T> { }\n\n@QueryMixins(...IAsyncIterableMixins)\nexport abstract class AsyncQueryBase<T = any> implements IAsyncQuery<T> {\n\n    transformAsync<R>(predicate: AsyncTransformDelegate<T, R>): IAsyncQuery<R> { throw new Error(); }\n\n    sort(sortFn: (left: any, right: any) => number): ISortedAsyncQuery<T> { throw new Error(); }\n\n    fetch(): Promise<ArrayQuery<T>> { throw new Error(); }\n\n    async toArray(): Promise<T[]> {\n        const values: T[] = [];\n        for await (const item of this) {\n            values.push(item);\n        }\n        return values;\n    }\n\n    abstract [Symbol.asyncIterator](): AsyncIterator<T>;\n}\n","import { AsyncQueryBase } from \"./async-query-base\";\nimport { QueryBase } from \"./query-base\";\n\nexport class IterableQuery<T> extends QueryBase<T> {\n    constructor(\n        readonly src: Iterable<T>\n        ) { super(); }\n\n    *[Symbol.iterator](): IterableIterator<T> {\n        yield* this.src;\n    }\n}\n\nexport class AsyncIterableQuery<T> extends AsyncQueryBase<T> {\n    constructor(\n        readonly src: AsyncIterable<T>\n    ) { super(); }\n\n    async *[Symbol.asyncIterator](): AsyncIterator<T, any, undefined> {\n        yield* this.src;\n    }\n}\n","import { AsyncQueryBase } from \"./async-query-base\";\nimport { QueryBase } from \"./query-base\";\n\nexport class UnionQuery<T> extends QueryBase<T> {\n    constructor(\n        readonly src: Iterable<T>,\n        readonly iterables: Iterable<T>[]\n    ) { super(); }\n\n    *[Symbol.iterator](): IterableIterator<T> {\n        yield* this.src;\n        for (const item of this.iterables) {\n            yield* item;\n        }\n    }\n}\n\nexport class AsyncUnionQuery<T> extends AsyncQueryBase<T> {\n    constructor(\n        readonly src: AsyncIterable<T>,\n        readonly iterables: AsyncIterable<T>[]\n    ) { super(); }\n\n    async *[Symbol.asyncIterator](): AsyncIterator<T, any, undefined> {\n        yield* this.src;\n        for (const item of this.iterables) {\n            yield* item;\n        }\n    }\n}\n","import { QueryBase } from \"./query-base\";\nimport { AsyncQueryBase } from \"./async-query-base\";\nimport { ISortedAsyncQuery, ISortedQuery } from \"./iquery\";\n\nfunction combineSortFn<TSource>(first: (left: TSource, right: TSource,) => number, second: (left: TSource, right: TSource,) => number) {\n    return (left: TSource, right: TSource,) => {\n        const firstResult = first(left, right);\n        if (firstResult !== 0) return firstResult;\n        return second(left, right);\n    };\n}\n\nexport class SortQuery<T = any> extends QueryBase<T> implements ISortedQuery<T> {\n    constructor(\n        private readonly _iterable: Iterable<T>,\n        private readonly _sortFn: (left: T, right: T,) => number\n    ) { super(); }\n\n    thenBy(sortFn: (left: T, right: T,) => number): SortQuery<T> {\n        const newSortFn = combineSortFn(this._sortFn, sortFn);\n        return new SortQuery(this._iterable, newSortFn);\n    }\n\n    *[Symbol.iterator](): IterableIterator<T> {\n        const values = Array.isArray(this._iterable) ? this._iterable : [...this._iterable];\n        yield* values.sort(this._sortFn);\n    }\n}\n\nexport class AsyncSortQuery<T = any> extends AsyncQueryBase<T> implements ISortedAsyncQuery<T> {\n    constructor(\n        private readonly _iterable: AsyncIterable<T>,\n        private readonly _sortFn: (left: T, right: T,) => number\n    ) { super(); }\n\n    thenBy(sortFn: (left: T, right: T,) => number): AsyncSortQuery<T> {\n        const newSortFn = combineSortFn(this._sortFn, sortFn);\n        return new AsyncSortQuery(this._iterable, newSortFn);\n    }\n\n    async toArray(): Promise<T[]> {\n        const values: T[] = [];\n        for await (const item of this._iterable) {\n            values.push(item);\n        }\n        return values.sort(this._sortFn);\n    }\n\n    async *[Symbol.asyncIterator](): AsyncIterator<T> {\n        yield* await this.toArray();\n    }\n}\n","import { AsyncQueryBase } from \"./async-query-base\";\nimport { AsyncTransformDelegate, TransformDelegate } from \"./iquery\";\nimport { QueryBase } from \"./query-base\";\n\nexport class TransformQuery<TSource = any, TResult = TSource> extends QueryBase<TResult> {\n    constructor(\n        private readonly _iterable: Iterable<TSource>,\n        private readonly _predicate: TransformDelegate<TSource, TResult>\n    ) {super(); }\n\n    *[Symbol.iterator](): IterableIterator<TResult> {\n        yield* this._predicate(this._iterable);\n    }\n}\n\nexport class AsyncTransformQuery<TSource = any, TResult = TSource> extends AsyncQueryBase<TResult> {\n    constructor(\n        private readonly _iterable: AsyncIterable<TSource>,\n        private readonly _predicate: AsyncTransformDelegate<TSource, TResult>\n    ) { super(); }\n\n    async *[Symbol.asyncIterator](): AsyncIterator<TResult> {\n        for await (const item of this._predicate(this._iterable)) {\n            yield item;\n        }\n    }\n}\n","import { ISortedQuery, TransformDelegate, IQuery, AsyncTransformDelegate, IAsyncQuery } from \"./iquery\";\nimport { QueryBase } from \"./query-base\";\nimport { SortQuery } from \"./sort-query\";\nimport { AsyncTransformQuery, TransformQuery } from \"./transform-query\";\n\nfunction sort<T>(this: QueryBase<T>, sortFn: (left: any, right: any) => number): ISortedQuery<T> {\n    return new SortQuery(this, sortFn);\n}\n\nfunction transform<T, R>(this: QueryBase<T>, predicate: TransformDelegate<T, R>): IQuery<R> {\n    return new TransformQuery<T, R>(this, predicate);\n}\n\nfunction transformAsync<T, R>(this: QueryBase<T>, predicate: AsyncTransformDelegate<T, R>): IAsyncQuery<R> {\n    return new AsyncTransformQuery(this, predicate);\n}\n\nObject.assign(QueryBase.prototype, { sort, transform, transformAsync });\n","import { ArrayQuery } from \"./array-query\";\nimport { AsyncQueryBase } from \"./async-query-base\";\nimport { AsyncTransformDelegate, IAsyncQuery, ISortedAsyncQuery } from \"./iquery\";\nimport { AsyncSortQuery } from \"./sort-query\";\nimport { AsyncTransformQuery } from \"./transform-query\";\n\nfunction transformAsync<T, R>(this: AsyncQueryBase<T>, predicate: AsyncTransformDelegate<T, R>): IAsyncQuery<R> {\n    return new AsyncTransformQuery(this, predicate);\n}\n\nasync function fetch<T>(this: AsyncQueryBase<T>): Promise<ArrayQuery<T>> {\n    const result = await this.toArray();\n    return new ArrayQuery(result);\n}\n\nfunction sort<T>(this: AsyncQueryBase<T>, sortFn: (left: any, right: any) => number): ISortedAsyncQuery<T> {\n    return new AsyncSortQuery(this, sortFn);\n}\n\nObject.assign(AsyncQueryBase.prototype, { sort, fetch, transformAsync });\n","import { ArrayQuery } from \"./array-query\";\nimport { AsyncIterableQuery, IterableQuery } from \"./iterable-query\";\nimport { AsyncUnionQuery, UnionQuery } from \"./union-query\";\nimport { AsyncTransformQuery, TransformQuery } from \"./transform-query\";\nimport { Iterables } from \"../iterables\";\n\nimport \"./factories\";\nimport \"./async-factories\";\n\nexport type Query<T> = IterableQuery<T> | ArrayQuery<T> | TransformQuery<T> | UnionQuery<T>;\nexport type AsyncQuery<T> = AsyncIterableQuery<T> | AsyncTransformQuery<T> | AsyncUnionQuery<T>;\n\nexport function Query<T>(iterable: AsyncIterable<T>, ...iterables: AsyncIterable<T>[]): AsyncQuery<T>;\nexport function Query<T>(iterable: Iterable<T>, ...iterables: Iterable<T>[]): Query<T>;\nexport function Query<T>(iterable: Iterable<T> | AsyncIterable<T>, ...iterables: Iterable<T>[] | AsyncIterable<T>[]): Query<T> | AsyncQuery<T> {\n    if (Iterables.cast(iterable)) {\n        if (iterables.length) {\n            return new UnionQuery(iterable, iterables as Iterable<T>[]);\n        }\n        if (Array.isArray(iterable)) {\n            return new ArrayQuery(iterable);\n        }\n        return new IterableQuery(iterable);\n    }\n\n    if (iterables.length) {\n        return new AsyncUnionQuery(iterable, iterables as AsyncIterable<T>[]);\n    }\n    return new AsyncIterableQuery(iterable);\n}\n","import { ServiceContract, ServiceIdentifier } from \"@aster-js/ioc\";\r\nimport { Route } from \"./route\";\r\nimport { QueryValues, RouteValues } from \"./routing-invocation-context\";\r\n\r\n/**\r\n * Service id and contract to store route data and query data result of navigation\r\n */\r\nexport const IContainerRouteData = ServiceIdentifier<IContainerRouteData>(\"IContainerRouteData\")\r\n\r\nexport interface IContainerRouteData {\r\n    /** Gets the last evaluated route */\r\n    readonly route: Route;\r\n    /** Gets the last evaluated route values */\r\n    readonly values: Readonly<RouteValues>;\r\n    /** Gets the last evaluated query values */\r\n    readonly query: Readonly<QueryValues>;\r\n\r\n    setState(route: Route, values: Readonly<RouteValues>, query: Readonly<QueryValues>): void;\r\n}\r\n\r\n@ServiceContract(IContainerRouteData)\r\nexport class ContainerRouteData implements IContainerRouteData {\r\n    private _route: Route = Route.empty;\r\n    private _values: Readonly<RouteValues> = Object.freeze({});\r\n    private _query: Readonly<QueryValues> = Object.freeze({});\r\n\r\n    get route(): Route { return this._route }\r\n\r\n    get values(): Readonly<RouteValues> { return this._values; }\r\n\r\n    get query(): Readonly<QueryValues> { return this._query; }\r\n\r\n    setState(route: Route, values: Readonly<RouteValues>, query: Readonly<QueryValues>): void {\r\n        this._route = route;\r\n        this._values = Object.freeze(values);\r\n        this._query = Object.freeze(query);\r\n    }\r\n}\r\n","import { IRouter } from \"./irouter\";\r\n\r\nexport class RouteResolutionContext implements Iterable<string>{\r\n    private readonly _segments: string[];\r\n    private readonly _initialSize: number;\r\n\r\n    get remaining(): number { return this._segments.length; }\r\n\r\n    get initialSize(): number { return this._initialSize; }\r\n\r\n    constructor(\r\n        readonly initiator: IRouter | null,\r\n        segments: Iterable<string>\r\n    ) {\r\n        this._segments = [...segments].map(decodeURIComponent);\r\n        this._initialSize = this._segments.length;\r\n    }\r\n\r\n    getAt(index: number): string | undefined {\r\n        return this._segments[index];\r\n    }\r\n\r\n    peek(): string | undefined {\r\n        return this._segments[0];\r\n    }\r\n\r\n    shift(): string | undefined {\r\n        return this._segments.shift();\r\n    }\r\n\r\n    *[Symbol.iterator](): IterableIterator<string> {\r\n        yield* this._segments;\r\n    }\r\n\r\n    toString(): string {\r\n        return \"/\" + this._segments.join(\"/\");\r\n    }\r\n}\r\n","import { IApplicationPart } from \"../abstraction\";\r\nimport { Route } from \"./route\";\r\n\r\n/** Values extracted from the url path by a matching route */\r\nexport type RouteValues = Record<string, string | number>;\r\n\r\n/** Values extracted from the url search */\r\nexport type QueryValues = Record<string, string | string[]>;\r\n\r\n/** Represents a merge of values comming from RouteValues and QueryValues where QueryValues can override RouteValues */\r\nexport type ParamValues = Record<string, string | string[] | number>;\r\n\r\nexport namespace QueryValues {\r\n    /** Parse and map a query search into a QueryValues bag */\r\n    export function parse(query: string): QueryValues {\r\n        const result: QueryValues = {};\r\n\r\n        const search = new URLSearchParams(query);\r\n        for (const [key, value] of search) {\r\n            if (Reflect.has(result, key)) {\r\n                const current = result[key];\r\n                if (Array.isArray(current)) {\r\n                    current.push(value);\r\n                }\r\n                else {\r\n                    result[key] = [current, value];\r\n                }\r\n            }\r\n            else {\r\n                result[key] = value;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport namespace ParamValues {\r\n    /** Create a new ParamValues by merging RouteValues and QueryValues */\r\n    export function create(values: RouteValues, query: QueryValues): QueryValues {\r\n        return Object.assign({}, values, query);\r\n    }\r\n}\r\n\r\n/** Represents all values extracted from the url */\r\nexport type RouteData = {\r\n    readonly values: RouteValues;\r\n    readonly query: QueryValues;\r\n}\r\n\r\nexport type RoutingInvocationContext = {\r\n    readonly route: Route;\r\n    readonly data: RouteData;\r\n    readonly app: IApplicationPart;\r\n}\r\n","import { ILogger, LogLevel, Many, ServiceContract } from \"@aster-js/ioc\";\r\nimport { Query } from \"@aster-js/iterators/lib/query\"\r\nimport { IApplicationPart } from \"../abstraction/iapplication-part\";\r\nimport { IContainerRouteData } from \"./icontainer-route-data\";\r\nimport { IRouter } from \"./irouter\";\r\nimport { IRoutingHandler } from \"./irouting-handler\";\r\nimport { RouteResolutionContext } from \"./route-resolution-context\";\r\nimport { QueryValues, RouteValues } from \"./routing-invocation-context\";\r\n\r\nconst SEGMENT_SEPARATOR = \"/\";\r\n\r\n@ServiceContract(IRouter)\r\nexport class DefaultRouter implements IRouter {\r\n\r\n    constructor(\r\n        @Many(IRoutingHandler) private readonly _handlers: IRoutingHandler[],\r\n        @IApplicationPart private readonly _application: IApplicationPart,\r\n        @IContainerRouteData private readonly _routeData: IContainerRouteData,\r\n        @ILogger private readonly _logger: ILogger\r\n    ) {\r\n    }\r\n\r\n    *getHandlers(): Iterable<IRoutingHandler> {\r\n        yield* this._handlers;\r\n    }\r\n\r\n    async *getActiveChildren(nested: boolean): AsyncIterable<IRouter> {\r\n        const active = this._application.activeChild;\r\n        if (active) {\r\n            let router = active.services.get(IRouter);\r\n            if (router) {\r\n                yield router;\r\n                if (nested) yield* router.getActiveChildren(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    eval(url: string, defaults: RouteValues = {}): Promise<boolean> {\r\n        const parsedUrl = new URL(url, location.origin);\r\n\r\n        let path = parsedUrl.pathname;\r\n        if (path.startsWith(SEGMENT_SEPARATOR)) path = path.substring(1);\r\n        if (path.endsWith(SEGMENT_SEPARATOR)) path = path.substring(0, path.length - 1);\r\n\r\n        const segments = path ? path.split(SEGMENT_SEPARATOR) : [];\r\n        const ctx = new RouteResolutionContext(this, segments);\r\n        const query = QueryValues.parse(parsedUrl.search);\r\n\r\n        return this.handle(ctx, defaults, query);\r\n    }\r\n\r\n    async handle(ctx: RouteResolutionContext, values: RouteValues, query: QueryValues): Promise<boolean> {\r\n        const handler = await this.resolveHandler(ctx);\r\n\r\n        if (!handler) {\r\n            const handlerPaths = this._handlers.map(x => x.path);\r\n            this._logger.warn(null, `No match found for the remaining route path: {relativeUrl}`, ctx.toString(), ...handlerPaths);\r\n            return false;\r\n        }\r\n\r\n        await this.invokeHandler(handler, ctx, values, query);\r\n        return true;\r\n    }\r\n\r\n    private async resolveHandler(ctx: RouteResolutionContext): Promise<IRoutingHandler | undefined> {\r\n        if (ctx.initiator === this) {\r\n            const children = this.getActiveChildren(true);\r\n            return Query(children)\r\n                .prepend(this)\r\n                .flatMap(x => x.getHandlers())\r\n                .filter(x => !x.route.relative)\r\n                .findFirst(x => x.route.match(ctx));\r\n        }\r\n        return Query(this.getHandlers())\r\n            .findFirst(x => x.route.match(ctx));\r\n    }\r\n\r\n    private async invokeHandler(handler: IRoutingHandler, ctx: RouteResolutionContext, values: RouteValues, query: QueryValues): Promise<void> {\r\n        const relativeUrl = ctx.toString();\r\n        const localValues = handler.route.getRouteValues(ctx);\r\n        const mergedValues = Object.assign({}, values, localValues);\r\n\r\n        const routeData = { values: mergedValues, query };\r\n\r\n        this._logger.info(`Routing match url \"{relativeUrl}\" with route \"{routePath}\"`, relativeUrl, handler.path, routeData);\r\n        try {\r\n            this._routeData.setState(handler.route, mergedValues, query);\r\n            await handler.handle(routeData, this._application);\r\n        }\r\n        catch (err) {\r\n            this._logger.log(LogLevel.error, err, \"Error handled during route handler invocation\")\r\n        }\r\n\r\n        for await (const router of this.getActiveChildren(false)) {\r\n            if (await router.handle(ctx, mergedValues, query)) break;\r\n        }\r\n    }\r\n}\r\n","import { ServiceContract } from \"@aster-js/ioc\";\r\nimport { Route } from \"../route\";\r\nimport { IRoutingHandler } from \"../irouting-handler\";\r\nimport { RouteData } from \"../routing-invocation-context\";\r\nimport { IAppConfigureHandler, IApplicationPart } from \"../../abstraction\";\r\nimport { Constructor } from \"@aster-js/core\";\r\n\r\n@ServiceContract(IRoutingHandler)\r\nexport class PartLoaderRoutingHandler implements IRoutingHandler {\r\n    private readonly _route: Route;\r\n\r\n    get path(): string { return this._path; }\r\n\r\n    get route(): Route { return this._route; }\r\n\r\n    constructor(\r\n        private readonly _path: string,\r\n        private readonly _configHandler: Constructor<IAppConfigureHandler>\r\n    ) {\r\n        this._route = Route.parse(_path);\r\n    }\r\n\r\n    async handle(data: RouteData, app: IApplicationPart): Promise<void> {\r\n        const appName = data.values[\"part\"];\r\n        if (typeof appName !== \"string\") throw new Error(`Missing route value named 'part'`);\r\n        await app.load(appName, this._configHandler);\r\n    }\r\n}\r\n","import { Lookup } from \"@aster-js/collections\";\r\nimport { Constructor, Tag } from \"@aster-js/core\";\r\nimport { IRoutingHandler, RouteData } from \"../routing\";\r\n\r\nexport const ControllerRoutingHandlerTag = Tag.lazy<Constructor<IRoutingHandler>[]>(\"routes\", () => []);\r\n\r\nexport type ControllerRouteArg = {\r\n    index: number;\r\n    accessor: (data: RouteData) => any;\r\n}\r\n\r\nexport const ControllerRoutingCallbackArgsTag = Tag.lazy<Lookup<string, ControllerRouteArg>>(\"route args\", () => new Lookup());\r\n","import type { Constructor } from \"@aster-js/core\";\r\nimport { IIoCContainerBuilder, IIoCModule, ISetupIoCContainerBuilder, IoCModuleConfigureDelegate, IoCModuleSetupDelegate, ServiceIdentifier, ServiceSetupDelegate, SetupErrorHandlerDelegate } from \"@aster-js/ioc\";\r\nimport { IAppConfigureHandler, IApplicationPartBuilder } from \"../abstraction\";\r\nimport { RouterAction, ServiceRouterAction } from \"../routing\";\r\n\r\nexport class SetupIoCContainerBuilder implements IApplicationPartBuilder {\r\n\r\n    constructor(\r\n        private readonly _appBuilder: IApplicationPartBuilder,\r\n        private readonly _iocBuilder: ISetupIoCContainerBuilder\r\n    ) {\r\n    }\r\n\r\n    continueWithoutAwaiting(): IIoCContainerBuilder {\r\n        this._iocBuilder.continueWithoutAwaiting();\r\n        return this._appBuilder;\r\n    }\r\n\r\n    catch(errorHandler: SetupErrorHandlerDelegate): IIoCContainerBuilder {\r\n        this._iocBuilder.catch(errorHandler);\r\n        return this._appBuilder;\r\n    }\r\n\r\n    use(action: IoCModuleSetupDelegate): ISetupIoCContainerBuilder {\r\n        return this._appBuilder.use(action);\r\n    }\r\n\r\n    addPart(path: string, configHandler: Constructor<IAppConfigureHandler>): IApplicationPartBuilder {\r\n        return this._appBuilder.addPart(path, configHandler);\r\n    }\r\n\r\n    addController(ctor: Constructor): IApplicationPartBuilder {\r\n        return this._appBuilder.addController(ctor);\r\n    }\r\n\r\n    addAction<T>(path: string, serviceId: ServiceIdentifier, action: ServiceRouterAction<T>): IApplicationPartBuilder;\r\n    addAction(path: string, action: RouterAction): IApplicationPartBuilder;\r\n    addAction(path: string, actionOrServiceId: RouterAction | ServiceIdentifier, action?: ServiceRouterAction): IApplicationPartBuilder {\r\n        return this._appBuilder.addAction(path, <ServiceIdentifier>actionOrServiceId, action!);\r\n    }\r\n\r\n    setup<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\r\n    setup<T>(ctor: Constructor<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\r\n    setup<T>(serviceIdOrCtor: ServiceIdentifier<T> | Constructor<T>, action: ServiceSetupDelegate<T>, required: boolean = true): ISetupIoCContainerBuilder {\r\n        return this._appBuilder.setup(serviceIdOrCtor as ServiceIdentifier<T>, action, required);\r\n    }\r\n\r\n    setupMany<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean): ISetupIoCContainerBuilder;\r\n    setupMany<T>(ctor: Constructor<T>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean): ISetupIoCContainerBuilder;\r\n    setupMany<T>(serviceIdOrCtor: ServiceIdentifier<T> | Constructor<T>, action: ServiceSetupDelegate<T>, currentScopeOnly: boolean = true): ISetupIoCContainerBuilder {\r\n        return this._appBuilder.setupMany(serviceIdOrCtor as ServiceIdentifier<T>, action, currentScopeOnly);\r\n    }\r\n\r\n    configure(action: IoCModuleConfigureDelegate): IIoCContainerBuilder {\r\n        return this._appBuilder.configure(action);\r\n    }\r\n\r\n    build(): IIoCModule {\r\n        return this._appBuilder.build();\r\n    }\r\n}\r\n","import { Constructor } from \"@aster-js/core\";\r\nimport { Delayed } from \"@aster-js/async\";\r\nimport { IIoCContainerBuilder, IIoCModule, IoCModuleConfigureDelegate, IoCModuleSetupDelegate, ISetupIoCContainerBuilder, resolveServiceId, ServiceIdentifier, ServiceScope, ServiceSetupDelegate } from \"@aster-js/ioc\";\r\nimport { IApplicationPartBuilder, IApplicationPart, IAppConfigureHandler, AppConfigureDelegate } from \"../abstraction\";\r\nimport { ServiceRouterAction, ServiceRoutingHandler, ActionRoutingHandler, RouterAction, IRoutingHandler } from \"../routing\";\r\nimport { PartLoaderRoutingHandler } from \"../routing/routing-handlers/part-loader-routing-handler\";\r\nimport { ControllerRoutingHandlerTag } from \"../controller/controller-routing-handler-tag\";\r\nimport { SetupIoCContainerBuilder } from \"./setup-application-part-builder\";\r\n\r\nexport abstract class ApplicationPartBuilder implements IApplicationPartBuilder {\r\n    private readonly _innerBuilder: IIoCContainerBuilder;\r\n\r\n    constructor(\r\n        partName: string,\r\n        private readonly _source: IIoCModule,\r\n        private readonly _result: Delayed<IApplicationPart>\r\n    ) {\r\n        this._innerBuilder = _source.createChildScope(partName);\r\n    }\r\n\r\n    addPart(path: string, configHandler: Constructor<IAppConfigureHandler> | AppConfigureDelegate): IApplicationPartBuilder {\r\n        const ctor = IAppConfigureHandler.resolve(configHandler);\r\n        this.configure(x =>\r\n            x.addScoped(PartLoaderRoutingHandler, {\r\n                baseArgs: [path, ctor],\r\n                scope: ServiceScope.container\r\n            })\r\n        );\r\n        return this;\r\n    }\r\n\r\n    addController<T>(ctor: Constructor<T>): IApplicationPartBuilder {\r\n        const handlers = ControllerRoutingHandlerTag.get(ctor.prototype);\r\n        this.configure(x => {\r\n            const serviceId = resolveServiceId(ctor);\r\n            x.addScoped(serviceId, ctor, { scope: ServiceScope.container });\r\n\r\n            for (const handler of handlers) {\r\n                x.addScoped(IRoutingHandler, handler, { scope: ServiceScope.container });\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    addAction<T>(path: string, serviceId: ServiceIdentifier, action: ServiceRouterAction<T>): IApplicationPartBuilder;\r\n    addAction(path: string, action: RouterAction): IApplicationPartBuilder;\r\n    addAction(path: string, actionOrServiceId: RouterAction | ServiceIdentifier, action?: ServiceRouterAction): IApplicationPartBuilder {\r\n        if (ServiceIdentifier.is(actionOrServiceId)) {\r\n            this.configure(x =>\r\n                x.addScoped(ServiceRoutingHandler, {\r\n                    baseArgs: [path, actionOrServiceId, action],\r\n                    scope: ServiceScope.container\r\n                })\r\n            );\r\n        }\r\n        else {\r\n            this.configure(x =>\r\n                x.addScoped(ActionRoutingHandler, {\r\n                    baseArgs: [path, actionOrServiceId],\r\n                    scope: ServiceScope.container\r\n                })\r\n            );\r\n        }\r\n        return this;\r\n    }\r\n\r\n    configure(action: IoCModuleConfigureDelegate): IIoCContainerBuilder {\r\n        this._innerBuilder.configure(action);\r\n        return this;\r\n    }\r\n\r\n    use(action: IoCModuleSetupDelegate): ISetupIoCContainerBuilder {\r\n        const iocBuilder = this._innerBuilder.use(action);\r\n        return new SetupIoCContainerBuilder(this, iocBuilder);\r\n    }\r\n\r\n    setupMany<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean | undefined): ISetupIoCContainerBuilder;\r\n    setupMany<T>(ctor: Constructor<T, any[]>, action: ServiceSetupDelegate<T>, currentScopeOnly?: boolean | undefined): ISetupIoCContainerBuilder;\r\n    setupMany(ctor: Constructor | ServiceIdentifier, action: ServiceSetupDelegate, currentScopeOnly?: boolean): ISetupIoCContainerBuilder {\r\n        const iocBuilder = this._innerBuilder.setupMany(<Constructor>ctor, action, currentScopeOnly);\r\n        return new SetupIoCContainerBuilder(this, iocBuilder);\r\n    }\r\n\r\n    setup<T>(serviceId: ServiceIdentifier<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\r\n    setup<T>(ctor: Constructor<T>, action: ServiceSetupDelegate<T>, required?: boolean): ISetupIoCContainerBuilder;\r\n    setup<T>(ctor: Constructor | ServiceIdentifier, action: ServiceSetupDelegate, required?: boolean): ISetupIoCContainerBuilder {\r\n        const iocBuilder = this._innerBuilder.setup(<Constructor>ctor, action, required);\r\n        return new SetupIoCContainerBuilder(this, iocBuilder);\r\n    }\r\n\r\n    build(): IApplicationPart {\r\n        const part = this.createApplicationPart(this._source, this._innerBuilder);\r\n        this._result.set(part);\r\n        return part;\r\n    }\r\n\r\n    protected abstract createApplicationPart(parent: IIoCModule, iocBuilder: IIoCContainerBuilder): IApplicationPart;\r\n}\r\n","import { IServiceDescriptor, IServiceProvider, ServiceContract } from \"@aster-js/ioc\";\r\nimport { ApplicationPartLifecycleHooks, IApplicationPartLifecycle } from \"./iapplication-part-lifecycle\";\r\n\r\n@ServiceContract(IApplicationPartLifecycle)\r\nexport class ApplicationPartLifecycleWrapper implements IApplicationPartLifecycle {\r\n    private readonly _instance: IApplicationPartLifecycle;\r\n\r\n    constructor(\r\n        descriptor: IServiceDescriptor,\r\n        @IServiceProvider serviceProvider: IServiceProvider\r\n    ) {\r\n        this._instance = <IApplicationPartLifecycle>serviceProvider.get(descriptor, true);\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.setup](): Promise<void> {\r\n        return ApplicationPartLifecycleHooks.invoke(this._instance, ApplicationPartLifecycleHooks.setup);\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.activated](): Promise<void> {\r\n        return ApplicationPartLifecycleHooks.invoke(this._instance, ApplicationPartLifecycleHooks.activated);\r\n    }\r\n\r\n    [ApplicationPartLifecycleHooks.deactivated](): Promise<void> {\r\n        return ApplicationPartLifecycleHooks.invoke(this._instance, ApplicationPartLifecycleHooks.deactivated);\r\n    }\r\n}\r\n","import { AbortToken, assertAllSettledResult, Delayed } from \"@aster-js/async\";\r\nimport { Constructor, DisposableHost, IDisposable } from \"@aster-js/core\";\r\nimport { IIoCContainerBuilder, IIoCModule, IServiceDescriptor, IServiceFactory, IServiceProvider, ServiceCollection, ServiceIdentifier, ServiceProvider, ServiceScope } from \"@aster-js/ioc\";\r\nimport { configure, IAppConfigureHandler, IApplicationPart, IApplicationPartBuilder } from \"../abstraction\";\r\nimport { Memoize } from \"@aster-js/decorators\";\r\nimport { ApplicationPartLifecycleHook, ApplicationPartLifecycleHooks, IApplicationPartLifecycle } from \"./iapplication-part-lifecycle\";\r\nimport { ApplicationPartLifecycleWrapper } from \"./application-part-lifecycle-wrapper\";\r\n\r\nexport abstract class ApplicationPart extends DisposableHost implements IApplicationPart {\r\n    private readonly _module: IIoCModule;\r\n    private readonly _children: Map<string, IApplicationPart> = new Map();\r\n    private _current?: IApplicationPart;\r\n\r\n    get name(): string { return this._module.name; }\r\n\r\n    get path(): string { return this._module.path; }\r\n\r\n    abstract get parent(): IIoCModule;\r\n\r\n    get running(): boolean { return this._module.running; }\r\n\r\n    get activeChild(): IApplicationPart | undefined { return this._current; }\r\n\r\n    @Memoize\r\n    get ready(): PromiseLike<this> { return this._module.ready.then(() => this); }\r\n\r\n    get abortToken(): AbortToken { return this._module.abortToken; }\r\n\r\n    get services(): ServiceProvider { return this._module.services; }\r\n\r\n    constructor(\r\n        builder: IIoCContainerBuilder,\r\n    ) {\r\n        super();\r\n        this._module = builder\r\n            .configure(x => this.configureMandatoryAppPartServices(x))\r\n            .setupMany(IApplicationPartLifecycle, x => {\r\n                return ApplicationPartLifecycleHooks.invoke(x, ApplicationPartLifecycleHooks.setup);\r\n            }, true)\r\n            .build();\r\n    }\r\n\r\n    private configureMandatoryAppPartServices(services: ServiceCollection): void {\r\n        services.addInstance(IApplicationPart, this, { scope: ServiceScope.container });\r\n\r\n        for (const desc of this.extractImplicitLifecycleImpl(services)) {\r\n            services.addTransient(ApplicationPartLifecycleWrapper, { baseArgs: [desc], scope: ServiceScope.container });\r\n        }\r\n    }\r\n\r\n    private extractImplicitLifecycleImpl(services: ServiceCollection): IServiceDescriptor[] {\r\n        const explicitLifeCycles = new Set();\r\n        const implicitLifeCycles = [];\r\n\r\n        for (const desc of services) {\r\n            if (desc.serviceId === IApplicationPartLifecycle) {\r\n                explicitLifeCycles.add(desc.targetType);\r\n            }\r\n            else if (ApplicationPartLifecycleHooks.hasAny(desc.ctor)) {\r\n                implicitLifeCycles.push(desc);\r\n            }\r\n        }\r\n\r\n        return implicitLifeCycles.filter(x => !explicitLifeCycles.has(x.targetType));\r\n    }\r\n\r\n    getChild(name: string): IApplicationPart | undefined {\r\n        return this._children.get(name);\r\n    }\r\n\r\n    protected async addChild(delayedChild: Delayed<IApplicationPart>): Promise<void> {\r\n        const child = await delayedChild.get();\r\n\r\n        const current = this._children.get(child.name);\r\n        IDisposable.safeDispose(current);\r\n\r\n        this._children.set(child.name, child);\r\n\r\n        if (child instanceof DisposableHost) {\r\n            child.registerForDispose(IDisposable.create(() => {\r\n                const current = this._children.get(child.name);\r\n                if (current === child) {\r\n                    this._children.delete(child.name);\r\n                }\r\n                if (this._current === child) {\r\n                    delete this._current;\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    start(): Promise<boolean> { return this._module.start(); }\r\n\r\n    async load(name: string, handlerCtor: Constructor<IAppConfigureHandler>): Promise<IApplicationPart> {\r\n        const current = this._children.get(name);\r\n        if (current) {\r\n            await this.activate(name);\r\n            return current;\r\n        }\r\n\r\n        const builder = this.createAppBuilder(name);\r\n\r\n        const handler = this.services.createInstance(handlerCtor);\r\n        handler[configure](builder, this);\r\n\r\n        const part = builder.build();\r\n        await part.start();\r\n        await this.activate(name);\r\n        return <IApplicationPart>part;\r\n    }\r\n\r\n    async activate(name: string): Promise<void> {\r\n        const part = this._children.get(name);\r\n        if (part) {\r\n            await this.activatePart(part);\r\n            this._current = part;\r\n        }\r\n        else {\r\n            throw new Error(`Cannot find any module named ${name}`);\r\n        }\r\n    }\r\n\r\n    protected async activatePart(part: IApplicationPart): Promise<void> {\r\n        if (this._current) await this.invokeLifecycleHook(this._current, ApplicationPartLifecycleHooks.deactivated);\r\n        await this.invokeLifecycleHook(part, ApplicationPartLifecycleHooks.activated);\r\n    }\r\n\r\n    private async invokeLifecycleHook(part: IApplicationPart, hook: ApplicationPartLifecycleHook): Promise<void> {\r\n        const promises = [];\r\n        for (const svc of part.services.getAll(IApplicationPartLifecycle, true)) {\r\n            const result = ApplicationPartLifecycleHooks.invoke(svc, hook);\r\n            promises.push(result);\r\n        }\r\n        const allSettledResult = await Promise.allSettled(promises);\r\n        assertAllSettledResult(allSettledResult);\r\n    }\r\n\r\n    createChildScope(name: string): IIoCContainerBuilder {\r\n        this.throwIfExists(name);\r\n        return this._module.createChildScope(name);\r\n    }\r\n\r\n    private throwIfExists(name: string) {\r\n        const current = this._children.get(name);\r\n        if (current) throw new Error(`An application part with the same name already exists`);\r\n    }\r\n\r\n    protected abstract createAppBuilder(name: string): IApplicationPartBuilder;\r\n\r\n    [Symbol.dispose](): void {\r\n        delete this._current;\r\n        IDisposable.safeDispose(this._children.values());\r\n        IDisposable.safeDispose(this._module);\r\n    }\r\n\r\n    async *[Symbol.asyncIterator](): AsyncIterator<IIoCModule, any, undefined> {\r\n        yield* this._children.values();\r\n    }\r\n}\r\n","import { ServiceScope } from \"@aster-js/ioc\";\r\nimport { IApplicationPartBuilder, IApplicationPart } from \"../abstraction\";\r\nimport { configure, IAppConfigureHandler } from \"../abstraction/iapp-configure-handler\";\r\nimport { HyperlinkNavigationHandler, DefaultRouter, DefaultNavigationHandler, HistoryNavigationHandler } from \"../routing\";\r\nimport { ContainerRouteData } from \"../routing/icontainer-route-data\";\r\n\r\nexport class DefaultApplicationConfigureHandler implements IAppConfigureHandler {\r\n    [configure](builder: IApplicationPartBuilder, host?: IApplicationPart | undefined): void {\r\n        builder.configure(x => {\r\n            x.addSingleton(DefaultNavigationHandler, { scope: ServiceScope.container })\r\n                .addSingleton(HistoryNavigationHandler, { scope: ServiceScope.container })\r\n                .addSingleton(HyperlinkNavigationHandler, { scope: ServiceScope.container })\r\n                .addScoped(ContainerRouteData)\r\n                .addScoped(DefaultRouter);\r\n        });\r\n    }\r\n}\r\n","import { Delayed } from \"@aster-js/async\";\r\nimport { DisposableHost } from \"@aster-js/core\";\r\nimport { IIoCModule, IIoCContainerBuilder } from \"@aster-js/ioc\";\r\nimport { IApplicationPart, IApplicationPartBuilder } from \"../abstraction\";\r\nimport { ApplicationPart } from \"./application-part\";\r\nimport { ApplicationPartBuilder } from \"./application-part-builder\";\r\n\r\nexport class ChildApplicationPartBuilder extends ApplicationPartBuilder {\r\n    constructor(\r\n        partName: string,\r\n        source: IApplicationPart,\r\n        result: Delayed<IApplicationPart>\r\n    ) {\r\n        super(partName, source, result);\r\n    }\r\n\r\n    protected createApplicationPart(parent: IApplicationPart, iocBuilder: IIoCContainerBuilder): IApplicationPart {\r\n        return new ChildApplicationPart(parent, iocBuilder);\r\n    }\r\n}\r\n\r\nexport class ChildApplicationPart extends ApplicationPart {\r\n\r\n    get parent(): IApplicationPart { return this._parent; }\r\n\r\n    constructor(\r\n        private readonly _parent: IApplicationPart,\r\n        builder: IIoCContainerBuilder\r\n    ) {\r\n        super(builder);\r\n    }\r\n\r\n    protected createAppBuilder(name: string): IApplicationPartBuilder {\r\n        const result = new Delayed<IApplicationPart>();\r\n        this.addChild(result);\r\n        return new ChildApplicationPartBuilder(name, this, result);\r\n    }\r\n}\r\n","import { Delayed } from \"@aster-js/async\";\r\nimport { Constructor, asserts } from \"@aster-js/core\";\r\nimport { IIoCContainerBuilder, IIoCModule, IoCKernel, IoCModule, LogLevel, ServiceContract } from \"@aster-js/ioc\";\r\nimport { AppConfigureDelegate, configure, IAppConfigureHandler, IApplicationPart, IApplicationPartBuilder } from \"../abstraction\";\r\nimport { ApplicationPart } from \"./application-part\";\r\nimport { ApplicationPartBuilder } from \"./application-part-builder\";\r\nimport { ChildApplicationPartBuilder } from \"./child-application-part\";\r\nimport { DefaultApplicationConfigureHandler } from \"./default-application-configure-handler\";\r\n\r\nclass SinglePageAppBuilder extends ApplicationPartBuilder {\r\n\r\n    protected createApplicationPart(parent: IIoCModule, iocBuilder: IIoCContainerBuilder): IApplicationPart {\r\n        return new SinglePageApplication(parent, iocBuilder);\r\n    }\r\n}\r\n\r\nexport class SinglePageApplication extends ApplicationPart {\r\n\r\n    get parent(): IIoCModule { return this._parent; }\r\n\r\n    constructor(\r\n        private readonly _parent: IIoCModule,\r\n        builder: IIoCContainerBuilder\r\n    ) {\r\n        super(builder);\r\n    }\r\n\r\n    protected createAppBuilder(name: string): IApplicationPartBuilder {\r\n        const result = new Delayed<IApplicationPart>();\r\n        this.addChild(result);\r\n        return new ChildApplicationPartBuilder(name, this, result);\r\n    }\r\n\r\n    private static createKernel() {\r\n        const builder = IoCKernel.create();\r\n        builder.configure(x => {\r\n            x.addConsoleLogger(LogLevel.trace);\r\n        });\r\n        return builder.build();\r\n    }\r\n\r\n    async start(): Promise<boolean> {\r\n        if(await this._parent.start()&& await super.start()){\r\n            await this.activatePart(this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static create(appName: string, ...handlerCtors: Constructor<IAppConfigureHandler>[]): IApplicationPartBuilder {\r\n        const kernel = SinglePageApplication.createKernel();\r\n\r\n        const result = new Delayed<IApplicationPart>();\r\n        const builder = new SinglePageAppBuilder(appName, kernel, result);\r\n        for (const handlerCtor of handlerCtors) {\r\n            const handler = kernel.services.createInstance(handlerCtor);\r\n            handler[configure](builder);\r\n        }\r\n        return builder;\r\n    }\r\n\r\n    static async start(appName: string, configHandler: Constructor<IAppConfigureHandler> | AppConfigureDelegate): Promise<SinglePageApplication> {\r\n        const handler = IAppConfigureHandler.resolve(configHandler);\r\n        const app = SinglePageApplication.create(appName, DefaultApplicationConfigureHandler, handler).build();\r\n        await app.start();\r\n        asserts.instanceOf(app, SinglePageApplication);\r\n        return app;\r\n    }\r\n}\r\n","import { IApplicationPart } from \"../abstraction\";\r\nimport { IRoutingResult } from \"./irouting-result\";\r\n\r\n\r\nexport enum HtmlInsertionMode {\r\n    replace,\r\n    append,\r\n    prepend\r\n}\r\n\r\n/**\r\n * Returns a routing result used by controllers to do basic alter of the dom\r\n * @param html Html template\r\n * @param target Node target\r\n * @param mode Append mode\r\n */\r\nexport function htmlResult(html: string | HTMLElement, target: HTMLElement, mode?: HtmlInsertionMode): IRoutingResult;\r\n/**\r\n * Returns a routing result used by controllers to do basic alter of the dom\r\n * @param html Html template\r\n * @param targetSelector Query selector to call on document\r\n * @param mode Append mode\r\n */\r\nexport function htmlResult(html: string | HTMLElement, targetSelector: string, mode?: HtmlInsertionMode): IRoutingResult\r\nexport function htmlResult(html: HTMLElement | string, target: HTMLElement | string, mode?: HtmlInsertionMode): IRoutingResult {\r\n    const htmlElement = resolveHtml(html);\r\n    const targetElement = resolveTarget(target);\r\n    return new HtmlResult(targetElement, htmlElement, mode ?? HtmlInsertionMode.replace);\r\n}\r\n\r\nfunction resolveHtml(html: HTMLElement | string) {\r\n    if (typeof html === \"string\") {\r\n        const container = document.createElement('div');\r\n        container.innerHTML = html;\r\n        return container;\r\n    }\r\n    return html;\r\n}\r\n\r\nfunction resolveTarget(target: HTMLElement | string) {\r\n    if (typeof target === \"string\") {\r\n        const container = document.querySelector<HTMLElement>(target);\r\n        if (container) return container;\r\n\r\n        throw new Error(`Container query selector returns no element: ${target}`)\r\n    }\r\n    return target;\r\n}\r\n\r\nclass HtmlResult implements IRoutingResult {\r\n\r\n    constructor(\r\n        private readonly _target: HTMLElement,\r\n        private readonly _html: HTMLElement,\r\n        private readonly _mode: HtmlInsertionMode\r\n    ) {\r\n\r\n    }\r\n\r\n    async exec(_app: IApplicationPart): Promise<void> {\r\n        switch (this._mode) {\r\n            case HtmlInsertionMode.append:\r\n                this._target.appendChild(this._html);\r\n                break;\r\n            case HtmlInsertionMode.prepend:\r\n                this._target.insertBefore(this._html, this._target.firstChild);\r\n                break;\r\n            case HtmlInsertionMode.replace:\r\n                this._target.innerHTML = \"\";\r\n                this._target.appendChild(this._html);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import { ServiceContract, ServiceIdentifier } from \"@aster-js/ioc\";\r\n\r\nexport const IRendererService = ServiceIdentifier<IRendererService>(\"IRendererService\");\r\n\r\nexport interface IRendererService {\r\n    render(data: string): void;\r\n}\r\n\r\n@ServiceContract(IRendererService)\r\nexport class DefaultRendererService implements IRendererService {\r\n    render(data: string): void {\r\n        const actual = document.body.querySelector(\"#default-renderer-output\");\r\n        if (actual) actual.remove();\r\n\r\n        const div = document.createElement(\"div\");\r\n        div.innerText = data;\r\n        div.id = \"default-renderer-output\"\r\n        document.body.appendChild(div);\r\n    }\r\n}\r\n","import { SinglePageApplication } from \"../../src\"\r\nimport { DefaultRendererService, IRendererService } from \"./services/renderer-service\";\r\n\r\nexport default SinglePageApplication.start(\"Library\", (builder) => {\r\n    builder.configure(x => x.addSingleton(DefaultRendererService));\r\n\r\n    builder.addAction<IRendererService>(\r\n        \"/:view/*\",\r\n        IRendererService,\r\n        (renderer, data) => renderer.render(`Selected view: ${data.values[\"view\"]}`)\r\n    );\r\n});\r\n"],"names":["tryAddServiceInternal","addServiceInternal","SetupIoCContainerBuilder","dom.on","SEGMENT_SEPARATOR","createFilterCallback","createSkipWhileCallback","createTakeWhileCallback","createDistinctCallback","createIntersectCallback","createExceptCallback","createMapCallback","createFlatMapCallback","NotFound","createSlicePredicate","createUnion","createAppend","createPrepend","sort","transformAsync"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109]}